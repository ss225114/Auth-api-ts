export enum Apache {
    Continue = 100,
    SwitchingProtocols = 101,
    Processing = 102,
    Ok = 200,
    Created = 201,
    Accepted = 202,
    NonAuthoritativeInformation = 203,
    NoContent = 204,
    ResetContent = 205,
    PartialContent = 206,
    MultiStatus = 207,
    AlreadyReported = 208,
    ImUsed = 226,
    MultipleChoices = 300,
    MovedPermanently = 301,
    Found = 302,
    SeeOther = 303,
    NotModified = 304,
    UseProxy = 305,
    TemporaryRedirect = 307,
    PermanentRedirect = 308,
    BadRequest = 400,
    Unauthorized = 401,
    PaymentRequired = 402,
    Forbidden = 403,
    NotFound = 404,
    MethodNotAllowed = 405,
    NotAcceptable = 406,
    ProxyAuthenticationRequired = 407,
    RequestTimeout = 408,
    Conflict = 409,
    Gone = 410,
    LengthRequired = 411,
    PreconditionFailed = 412,
    RequestEntityTooLarge = 413,
    RequestUriTooLong = 414,
    UnsupportedMediaType = 415,
    RequestedRangeNotSatisfiable = 416,
    ExpectationFailed = 417,
    ImATeapot = 418,
    MisdirectedRequest = 421,
    UnprocessableEntity = 422,
    Locked = 423,
    FailedDependency = 424,
    UpgradeRequired = 426,
    PreconditionRequired = 428,
    TooManyRequests = 429,
    RequestHeaderFieldsTooLarge = 431,
    UnavailableForLegalReasons = 451,
    InternalServerError = 500,
    NotImplemented = 501,
    BadGateway = 502,
    ServiceUnavailable = 503,
    GatewayTimeout = 504,
    HttpVersionNotSupported = 505,
    VariantAlsoNegotiates = 506,
    InsufficientStorage = 507,
    LoopDetected = 508,
    NotExtended = 510,
    NetworkAuthenticationRequired = 511
}
/**
 * @see https://auth0.com/docs/api/authentication#standard-error-responses
 */
export enum Auth0 {
    BadRequest = 400,
    Unauthorized = 401,
    Forbidden = 403,
    NotFound = 404,
    MethodNotAllowed = 405,
    TooManyRequests = 429,
    InternalServerError = 500,
    NotImplemented = 501,
    ServiceUnavailable = 503
}
/**
 * @see https://articles.braintreepayments.com/control-panel/transactions/declines#authorization-decline-codes
 */
export enum Braintree {
    DoNotHonor = 2000,
    InsufficientFunds = 2001,
    LimitExceeded = 2002,
    CardholdersActivityLimitExceeded = 2003,
    ExpiredCard = 2004,
    InvalidCreditCardNumber = 2005,
    InvalidExpirationDate = 2006,
    NoAccount = 2007,
    CreditCardLengthError = 2008,
    NoSuchIssuer = 2009,
    CardIssuerDeclinedCVV = 2010,
    VoiceAuthorizationRequired = 2011,
    ProcessorDeclinedPossibleLostCard = 2012,
    ProcessorDeclinedPossibleStolenCard = 2013,
    ProcessorDeclinedFraudSuspected = 2014,
    TransactionNotAllowed = 2015,
    DuplicateTransaction = 2016,
    CardholderStoppedBilling = 2017,
    CardholderStoppedAllBilling = 2018,
    InvalidTransaction = 2019,
    Violation = 2020,
    SecurityViolation = 2021,
    DeclinedUpdatedCardholderAvailable = 2022,
    ProcessorDoesNotSupportThisFeature = 2023,
    CardTypeNotEnabled = 2024,
    SetUpErrorMerchant = 2025,
    InvalidMerchantID = 2026,
    SetUpErrorAmount = 2027,
    SetUpErrorHierarchy = 2028,
    SetUpErrorCard = 2029,
    SetUpErrorTerminal = 2030,
    EncryptionError = 2031,
    SurchargeNotPermitted = 2032,
    InconsistentData = 2033,
    NoActionTaken = 2034,
    PartialApprovalForAmountInGroupIIIVersion = 2035,
    AuthorizationCouldNotBeFound = 2036,
    AlreadyReversed = 2037,
    ProcessorDeclined = 2038,
    InvalidAuthorizationCode = 2039,
    InvalidStore = 2040,
    DeclinedCallForApproval = 2041,
    InvalidClientID = 2042,
    ErrorDoNotRetryCallIssuer = 2043,
    DeclinedCallIssuer = 2044,
    InvalidMerchantNumber = 2045,
    Declined = 2046,
    CallIssuerPickUpCard = 2047,
    InvalidAmount = 2048,
    InvalidSkuNumber = 2049,
    InvalidCreditPlan = 2050,
    CreditCardNumberDoesNotMatchMethodOfPayment = 2051,
    CardReportedAsLostOrStolen = 2053,
    ReversalAmountDoesNotMatchAuthorizationAmount = 2054,
    InvalidTransactionDivisionNumber = 2055,
    TransactionAmountExceedsTheTransactionDivisionLimit = 2056,
    IssuerOrCardholderHasPutARestrictionOnTheCard = 2057,
    MerchantNotMastercardSecureCodeEnabled = 2058,
    AddressVerificationFailed = 2059,
    AddressVerificationAndCardSecurityCodeFailed = 2060,
    InvalidTransactionData = 2061,
    InvalidTaxAmount = 2062,
    PaypalBusinessAccountPreferenceResultedInTheTransactionFailing = 2063,
    InvalidCurrencyCode = 2064,
    RefundTimeLimitExceeded = 2065,
    PaypalBusinessAccountRestricted = 2066,
    AuthorizationExpired = 2067,
    PaypalBusinessAccountLockedOrClosed = 2068,
    PaypalBlockingDuplicateOrderIds = 2069,
    PaypalBuyerRevokedFuturePaymentAuthorization = 2070,
    PaypalPayeeAccountInvalidOrDoesNotHaveAConfirmedEmail = 2071,
    PaypalPayeeEmailIncorrectlyFormatted = 2072,
    PaypalValidationError = 2073,
    FundingInstrumentInThePaypalAccountWasDeclinedByTheProcessorOrBank = 2074,
    PayerAccountIsLockedOrClosed = 2075,
    PayerCannotPayForThisTransactionWithPaypal = 2076,
    TransactionRefusedDueToPaypalRiskModel = 2077,
    PaypalMerchantAccountConfigurationError = 2079,
    PaypalPendingPaymentsAreNotSupported = 2081,
    PaypalDomesticTransactionRequired = 2082,
    PaypalPhoneNumberRequired = 2083,
    PaypalTaxInfoRequired = 2084,
    PaypalPayeeBlockedTransaction = 2085,
    PaypalTransactionLimitExceeded = 2086,
    PaypalReferenceTransactionsNotEnabledForYourAccount = 2087,
    CurrencyNotEnabledForYourPaypalSellerAccount = 2088,
    PaypalPayeeEmailPermissionDeniedForThisRequest = 2089,
    PaypalAccountNotConfiguredToRefundMoreThanSettledAmount = 2090,
    CurrencyOfThisTransactionMustMatchCurrencyOfYourPaypalAccount = 2091,
    NoDataFoundTryAnotherVerificationMethod = 2092,
    PaypalPaymentMethodInvalid = 2093,
    PaypalPaymentAlreadyCompleted = 2094,
    PaypalRefundNotAllowedAfterPartialRefund = 2095,
    PaypalBuyerAccountCantBeSameAsSellerAccount = 2096,
    PaypalAuthorizationAmountLimitExceeded = 2097,
    PaypalAuthorizationCountLimitExceeded = 2098,
    CardholderAuthenticationRequired = 2099,
    PaypalChannelInitiatedBillingNotEnabled = 2100,
    ProcessorDeclinedRangeStart = 2101,
    ProcessorDeclinedRangeEnd = 2999,
    ProcessorNetworkUnavailableTryAgain = 3000,
    SettlementDeclined = 4001,
    AlreadyCaptured = 4003,
    AlreadyRefunded = 4004,
    PaypalRiskRejected = 4005,
    CaptureAmountExceededAllowableLimit = 4006,
    PaypalPendingPaymentsNotSupported = 4018,
    PaypalRefundTransactionWithOpenCaseNotAllowed = 4019,
    PaypalRefundAttemptLimitReached = 4020,
    PaypalRefundTransactionNotAllowed = 4021,
    PaypalRefundInvalidPartialAmount = 4022,
    PaypalRefundMerchantAccountMissingACH = 4023
}
export enum Http {
    Continue = 100,
    SwitchingProtocols = 101,
    Processing = 102,
    EarlyHints = 103,
    Ok = 200,
    Created = 201,
    Accepted = 202,
    NonAuthoritativeInformation = 203,
    NoContent = 204,
    ResetContent = 205,
    PartialContent = 206,
    MultiStatus = 207,
    AlreadyReported = 208,
    ImUsed = 226,
    MultipleChoices = 300,
    MovedPermanently = 301,
    Found = 302,
    SeeOther = 303,
    NotModified = 304,
    UseProxy = 305,
    Unused = 306,
    TemporaryRedirect = 307,
    PermanentRedirect = 308,
    BadRequest = 400,
    Unauthorized = 401,
    PaymentRequired = 402,
    Forbidden = 403,
    NotFound = 404,
    MethodNotAllowed = 405,
    NotAcceptable = 406,
    ProxyAuthenticationRequired = 407,
    RequestTimeout = 408,
    Conflict = 409,
    Gone = 410,
    LengthRequired = 411,
    PreconditionFailed = 412,
    PayloadTooLarge = 413,
    UriTooLong = 414,
    UnsupportedMediaType = 415,
    RangeNotSatisfiable = 416,
    ExpectationFailed = 417,
    ImATeapot = 418,
    MisdirectedRequest = 421,
    UnprocessableEntity = 422,
    Locked = 423,
    FailedDependency = 424,
    UpgradeRequired = 426,
    PreconditionRequired = 428,
    TooManyRequests = 429,
    RequestHeaderFieldsTooLarge = 431,
    UnavailableForLegalReasons = 451,
    InternalServerError = 500,
    NotImplemented = 501,
    BadGateway = 502,
    ServiceUnavailable = 503,
    GatewayTimeout = 504,
    HttpVersionNotSupported = 505,
    VariantAlsoNegotiates = 506,
    InsufficientStorage = 507,
    LoopDetected = 508,
    NotExtended = 510,
    NetworkAuthenticationRequired = 511
}
/**
 * Unofficial HTTP status codes, according to Wikipedia
 * @see https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#Unofficial_codes
 */
export enum HttpUnofficial {
    Checkpoint = 103,
    ThisIsFine = 218,
    EnhanceYourCalm = 420,
    BlockedByWindowsParentalControls = 450,
    InvalidToken = 498,
    TokenRequired = 499,
    BandwidthLimitExceeded = 509,
    SiteIsFrozen = 530,
    NetworkReadTimeoutError = 598
}
/**
 * The combination of HTTP and HTTP Unofficial
 */
export const HttpExtended: Omit<typeof Http, "Checkpoint" | "ThisIsFine" | "EnhanceYourCalm" | "BlockedByWindowsParentalControls" | "InvalidToken" | "TokenRequired" | "BandwidthLimitExceeded" | "SiteIsFrozen" | "NetworkReadTimeoutError"> & typeof HttpUnofficial;
/**
 * @see https://support.cloudflare.com/hc/en-us/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors
 * @see https://support.cloudflare.com/hc/en-us/articles/360029779472-Troubleshooting-Cloudflare-1XXX-errors
 */
export enum Cloudflare {
    /**
     * 5XX Errors
     */
    InternalServerError = 500,
    BadGateway = 502,
    ServiceTemporarilyAvailable = 503,
    GatewayTimeout = 504,
    UnknownError = 520,
    WebServerIsDown = 521,
    ConnectionTimedOut = 522,
    OriginIsUnreachable = 523,
    ATimeoutOccurred = 524,
    SslHandshakeFailed = 525,
    InvalidSslCertificate = 526,
    RailgunError = 527,
    DnsError = 530,
    /**
     * 1XXX Errors
     */
    DNSProhibitedIP = 1000,
    DNSResolutionError = 1001,
    Restricted = 1002,
    DirectIPAccessNotAllowed = 1003,
    HostNotConfigured = 1004,
    AccessDeniedIPBanned = 1006,
    AccessDeniedIPISBanned = 1007,
    AccessDeniedIPHasBeenBanned = 1008,
    WebsiteOwnerBannedBrowserAccess = 1010,
    AccessDeniedHotlinkingDenied = 1011,
    AccessDenied = 1012,
    HTTPHostnameTLSHostnameMismatch = 1013,
    CrossUserBanned = 1014,
    RateLimited = 1015,
    OriginDNSError = 1016,
    HostNotFound = 1018,
    ComputeServerError = 1019,
    Accessdenied = 1020,
    CheckBackLater = 1025,
    RenderingError = 1101,
    RenderError = 1102,
    CacheConnectionLimit = 1200
}
export const CloudflareHttp: Omit<typeof Http, "InternalServerError" | "BadGateway" | "GatewayTimeout" | "ServiceTemporarilyAvailable" | "UnknownError" | "WebServerIsDown" | "ConnectionTimedOut" | "OriginIsUnreachable" | "ATimeoutOccurred" | "SslHandshakeFailed" | "InvalidSslCertificate" | "RailgunError" | "DnsError" | "DNSProhibitedIP" | "DNSResolutionError" | "Restricted" | "DirectIPAccessNotAllowed" | "HostNotConfigured" | "AccessDeniedIPBanned" | "AccessDeniedIPISBanned" | "AccessDeniedIPHasBeenBanned" | "WebsiteOwnerBannedBrowserAccess" | "AccessDeniedHotlinkingDenied" | "AccessDenied" | "HTTPHostnameTLSHostnameMismatch" | "CrossUserBanned" | "RateLimited" | "OriginDNSError" | "HostNotFound" | "ComputeServerError" | "Accessdenied" | "CheckBackLater" | "RenderingError" | "RenderError" | "CacheConnectionLimit"> & typeof Cloudflare;
/**
 * @see https://firebase.google.com/docs/reference/js/firebase.auth.Error
 */
export enum FirebaseAuth {
    AppDeleted = "auth/app-deleted",
    NotAuthorized = "auth/app-not-authorized",
    ArgumentError = "auth/argument-error",
    InvalidApiKey = "auth/invalid-api-key",
    InvalidTenantId = "auth/invalid-tenant-id",
    InvalidUserToken = "auth/invalid-user-token",
    NetworkRequestFailed = "auth/network-request-failed",
    OperationNotAllowed = "auth/operation-not-allowed",
    RequiresRecentLogin = "auth/requires-recent-login",
    TooManyRequests = "auth/too-many-requests",
    UnauthorizedDomain = "auth/unauthorized-domain",
    UserDisabled = "auth/user-disabled",
    UserTokenExpired = "auth/user-token-expired",
    WebStorageUnsupported = "auth/web-storage-unsupported"
}
export enum FTP {
    RestartMarkerReplay = 110,
    ServiceReadyInNnnMinutes = 120,
    DataConnectionAlreadyOpenTransferStarting = 125,
    FileStatusOkayAboutToOpenDataConnection = 150,
    CommandNotImplementedSuperfluous = 202,
    SystemStatus = 211,
    DirectoryStatus = 212,
    FileStatus = 213,
    HelpMessage = 214,
    NameSystemType = 215,
    ServiceReadyForNewUser = 220,
    ServiceClosingControlConnection = 221,
    DataConnectionOpenNoTransferInProgress = 225,
    ClosingDataConnectionRequestedFileActionSuccess = 226,
    EnteringPassiveMode = 227,
    EnteringLongPassiveMode = 228,
    EnteringExtendedPassiveMode = 229,
    UserLoggedInProceed = 230,
    UserLoggedOutServiceTerminated = 231,
    LogoutCommandNotedWillCompleteWhenTransferDone = 232,
    AuthenticationMechanismAccepted = 234,
    RequestedFileActionOkayCompleted = 250,
    PathnameCreated = 257,
    UserNameOkayNeedPassword = 331,
    NeedAccountForLogin = 332,
    RequestedFileActionPendingFurtherInformation = 350,
    ServiceNotAvailableClosingControlConnection = 421,
    CannotOpenDataConnection = 425,
    ConnectionClosedTransferAborted = 426,
    InvalidUsernameOrPassword = 430,
    RequestedHostUnavailable = 434,
    RequestedFileActionNotTaken = 450,
    RequestedActionAbortedLocalErrorInProcessing = 451,
    RequestedActionNotTakenInsufficientStorage = 452,
    SyntaxErrorCommandUnrecognizedCommandLineTooLong = 500,
    SyntaxErrorInParametersOrArguments = 501,
    CommandNotImplemented = 502,
    BadSequenceOfCommands = 503,
    CommandNotImplementedForThatParameter = 504,
    NotLoggedIn = 530,
    NeedAccountForStoringFiles = 532,
    CouldNotConnectToServerPolicyRequiresSsl = 534,
    RequestedActionNotTakenFileUnavailable = 550,
    RequestedActionAbortedPageTypeUnknown = 551,
    RequestedFileActionAbortedExceededStorageAllocation = 552,
    RequestedActionNotTakenFileNameNotAllowed = 553,
    IntegrityProtectedReply = 631,
    ConfidentialityAndIntegrityProtectedReply = 632,
    ConfidentialityProtectedReply = 633,
    ConnectionResetByPeerForciblyClosedByRemoteHost = 10054,
    CannotConnectToRemoteServer = 10060,
    CannotConnectToRemoteServerActivelyRefusedByServer = 10061,
    DirectoryNotEmpty = 10066,
    TooManyUsersServerIsFull = 10068
}
export enum IIS {
    Continue = 100,
    SwitchingProtocols = 101,
    OK = 200,
    Created = 201,
    Accepted = 202,
    NonauthoritativeInformation = 203,
    NoContent = 204,
    ResetContent = 205,
    PartialContent = 206,
    MovedPermanently = 301,
    ObjectMoved = 302,
    NotModified = 304,
    TemporaryRedirect = 307,
    BadRequest = 400,
    InvalidDestinationHeader = 400.1,
    InvalidDepthHeader = 400.2,
    InvalidIfHeader = 400.3,
    InvalidOverwriteHeader = 400.4,
    InvalidTranslateHeader = 400.5,
    InvalidRequestBody = 400.6,
    InvalidContentLength = 400.7,
    InvalidTimeout = 400.8,
    InvalidLockToken = 400.9,
    AccessDenied = 401,
    LogonFailed = 401.1,
    LogonFailedDueToServerConfiguration = 401.2,
    UnauthorizedDueToACL = 401.3,
    AuthorizationFailedByFilter = 401.4,
    AuthorizationFailedByISAPI_CGI = 401.5,
    AccessDeniedTooManyRequestsFromClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached = 401.501,
    ForbiddenTooManyRequestsFromSameIP_DynamicIPRestriction = 401.502,
    AccessDeniedIPAddressRestriction = 401.503,
    AccessDeniedHostnameRestriction = 401.503,
    Forbidden = 403,
    ExecuteAccessForbidden = 403.1,
    ReadAccessForbidden = 403.2,
    WriteAccessForbidden = 403.3,
    SSLRequired = 403.4,
    SSL128Required = 403.5,
    IPAddressRejected = 403.6,
    ClientCertificateRequired = 403.7,
    SiteAccessDenied = 403.8,
    ForbiddenTooManyClientsAreTryingToConnectToTheWebServer = 403.9,
    ForbiddenWebServerIsConfiguredToDenyExecuteAccess = 403.1,
    ForbiddenPasswordHasBeenChanged = 403.11,
    MapperDeniedAccess = 403.12,
    ClientCertificateRevoked = 403.13,
    DirectoryListingDenied = 403.14,
    ForbiddenClientAccessLicensesHaveExceededLimitsOnTheWebServer = 403.15,
    ClientCertificateIsUntrustedOrInvalid = 403.16,
    ClientCertificateHasExpiredOrIsNotYetValid = 403.17,
    CannotExecuteRequestedURLInTheCurrentApplicationPool = 403.18,
    CannotExecuteCGIApplicationsForTheClientInThisApplicationPool = 403.19,
    PassportLogonFailed = 403.2,
    SourceAccessDenied = 403.21,
    InfiniteDepthIsDenied = 403.22,
    ForbiddenTooManyRequestsFromClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached = 403.501,
    ForbiddenTooManyRequestsFromClientIP_DynamicIPRestrictionMaximumRequestRateLimitReached = 403.502,
    ForbiddenIPAddressIncludedInTheDenyListOfIPRestriction = 403.503,
    ForbiddenHostNameIncludedInTheDenyListOfIPRestriction = 403.504,
    NotFound = 404,
    Notfound = 404,
    SiteNotFound = 404.1,
    ISAPIOrCGIRestriction = 404.2,
    MIMETypeRestriction = 404.3,
    NoHandlerConfigured = 404.4,
    DeniedByRequestFilteringConfiguration = 404.5,
    VerbDenied = 404.6,
    FileExtensionDenied = 404.7,
    HiddenNamespace = 404.8,
    FileAttributeHidden = 404.9,
    RequestHeaderTooLong = 404.1,
    RequestContainsDoubleEscapeSequence = 404.11,
    RequestContainsHighBitCharacters = 404.12,
    ContentLengthTooLarge = 404.13,
    RequestURLTooLong = 404.14,
    QueryStringTooLong = 404.15,
    DAVRequestSentToTheStaticFileHandler = 404.16,
    DynamicContentMappedToTheStaticFileHandlerViaAWildcardMIMEMapping = 404.17,
    QuerystringSequenceDenied = 404.18,
    DeniedByFilteringRule = 404.19,
    TooManyURLSegment = 404.2,
    NotFoundTooManyRequestsFromTheSameClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached = 404.501,
    NotFoundTooManyRequestsFromTheSameClientIP_DynamicIPRestrictionMaximumRequestRateLimitReached = 404.502,
    NotFoundTheIPAddressIsIncludedInTheDenyListOfIPRestriction = 404.503,
    NotFoundTheHostNameIsIncludedInTheDenyListOfIPRestriction = 404.504,
    MethodNotAllowed = 405,
    ClientBrowserDoesNotAcceptTheMIMETypeOfTheRequestedPage = 406,
    RequestTimedOut = 408,
    PreconditionFailed = 412,
    InternalServerError = 500,
    ModuleOrISAPIErrorOccurred = 500,
    ApplicationIsShuttingDownOnTheWebServer = 500.11,
    ApplicationIsBusyRestartingOnTheWebServer = 500.12,
    WebServerIsTooBusy = 500.13,
    DirectRequestsForGlobalAsaxAreNotAllowed = 500.15,
    ConfigurationDataIsInvalid = 500.19,
    ModuleNotRecognized = 500.21,
    AnASPNETHttpModulesConfigurationDoesNotApplyInManagedPipelineMode = 500.22,
    AnASPNETHttpHandlersConfigurationDoesNotApplyInManagedPipelineMode = 500.23,
    AnASPNETImpersonationConfigurationDoesNotApplyInManagedPipelineMode = 500.24,
    RewriteErrorDuringRQ_BEGIN_REQUESTNotificationHandling = 500.5,
    RewriteErrorDuringGL_PRE_BEGIN_REQUESTNotificationHandling = 500.51,
    RewriteErrorDuringRQ_SEND_RESPONSENotificationHandling = 500.52,
    RewriteErrorDuringRQ_RELEASE_REQUEST_STATENotificationHandling = 500.53,
    InternalASPError = 500.1,
    HeaderValuesSpecifyUnimplementedConfiguration = 501,
    InvalidGatewayOrProxyResponse = 502,
    CGIApplicationTimeout = 502.1,
    BadGatewayPrematureExit = 502.2,
    BadGatewayForwarderConnectionErrorARR = 502.3,
    BadGatewayNoServerARR = 502.4,
    ServiceUnavailable = 503,
    ApplicationPoolUnavailable = 503,
    ConcurrentRequestLimitExceeded = 503.2,
    ASPNETQueueFull = 503.3,
    FastCGIQueueFull = 503.4
}
export const IISHttp: Omit<typeof Http, "Continue" | "SwitchingProtocols" | "Created" | "Accepted" | "NoContent" | "ResetContent" | "PartialContent" | "MovedPermanently" | "NotModified" | "TemporaryRedirect" | "BadRequest" | "Forbidden" | "NotFound" | "MethodNotAllowed" | "PreconditionFailed" | "InternalServerError" | "ServiceUnavailable" | "AccessDenied" | "OK" | "NonauthoritativeInformation" | "ObjectMoved" | "InvalidDestinationHeader" | "InvalidDepthHeader" | "InvalidIfHeader" | "InvalidOverwriteHeader" | "InvalidTranslateHeader" | "InvalidRequestBody" | "InvalidContentLength" | "InvalidTimeout" | "InvalidLockToken" | "LogonFailed" | "LogonFailedDueToServerConfiguration" | "UnauthorizedDueToACL" | "AuthorizationFailedByFilter" | "AuthorizationFailedByISAPI_CGI" | "AccessDeniedTooManyRequestsFromClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached" | "ForbiddenTooManyRequestsFromSameIP_DynamicIPRestriction" | "AccessDeniedIPAddressRestriction" | "AccessDeniedHostnameRestriction" | "ExecuteAccessForbidden" | "ReadAccessForbidden" | "WriteAccessForbidden" | "SSLRequired" | "SSL128Required" | "IPAddressRejected" | "ClientCertificateRequired" | "SiteAccessDenied" | "ForbiddenTooManyClientsAreTryingToConnectToTheWebServer" | "ForbiddenWebServerIsConfiguredToDenyExecuteAccess" | "ForbiddenPasswordHasBeenChanged" | "MapperDeniedAccess" | "ClientCertificateRevoked" | "DirectoryListingDenied" | "ForbiddenClientAccessLicensesHaveExceededLimitsOnTheWebServer" | "ClientCertificateIsUntrustedOrInvalid" | "ClientCertificateHasExpiredOrIsNotYetValid" | "CannotExecuteRequestedURLInTheCurrentApplicationPool" | "CannotExecuteCGIApplicationsForTheClientInThisApplicationPool" | "PassportLogonFailed" | "SourceAccessDenied" | "InfiniteDepthIsDenied" | "ForbiddenTooManyRequestsFromClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached" | "ForbiddenTooManyRequestsFromClientIP_DynamicIPRestrictionMaximumRequestRateLimitReached" | "ForbiddenIPAddressIncludedInTheDenyListOfIPRestriction" | "ForbiddenHostNameIncludedInTheDenyListOfIPRestriction" | "Notfound" | "SiteNotFound" | "ISAPIOrCGIRestriction" | "MIMETypeRestriction" | "NoHandlerConfigured" | "DeniedByRequestFilteringConfiguration" | "VerbDenied" | "FileExtensionDenied" | "HiddenNamespace" | "FileAttributeHidden" | "RequestHeaderTooLong" | "RequestContainsDoubleEscapeSequence" | "RequestContainsHighBitCharacters" | "ContentLengthTooLarge" | "RequestURLTooLong" | "QueryStringTooLong" | "DAVRequestSentToTheStaticFileHandler" | "DynamicContentMappedToTheStaticFileHandlerViaAWildcardMIMEMapping" | "QuerystringSequenceDenied" | "DeniedByFilteringRule" | "TooManyURLSegment" | "NotFoundTooManyRequestsFromTheSameClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached" | "NotFoundTooManyRequestsFromTheSameClientIP_DynamicIPRestrictionMaximumRequestRateLimitReached" | "NotFoundTheIPAddressIsIncludedInTheDenyListOfIPRestriction" | "NotFoundTheHostNameIsIncludedInTheDenyListOfIPRestriction" | "ClientBrowserDoesNotAcceptTheMIMETypeOfTheRequestedPage" | "RequestTimedOut" | "ModuleOrISAPIErrorOccurred" | "ApplicationIsShuttingDownOnTheWebServer" | "ApplicationIsBusyRestartingOnTheWebServer" | "WebServerIsTooBusy" | "DirectRequestsForGlobalAsaxAreNotAllowed" | "ConfigurationDataIsInvalid" | "ModuleNotRecognized" | "AnASPNETHttpModulesConfigurationDoesNotApplyInManagedPipelineMode" | "AnASPNETHttpHandlersConfigurationDoesNotApplyInManagedPipelineMode" | "AnASPNETImpersonationConfigurationDoesNotApplyInManagedPipelineMode" | "RewriteErrorDuringRQ_BEGIN_REQUESTNotificationHandling" | "RewriteErrorDuringGL_PRE_BEGIN_REQUESTNotificationHandling" | "RewriteErrorDuringRQ_SEND_RESPONSENotificationHandling" | "RewriteErrorDuringRQ_RELEASE_REQUEST_STATENotificationHandling" | "InternalASPError" | "HeaderValuesSpecifyUnimplementedConfiguration" | "InvalidGatewayOrProxyResponse" | "CGIApplicationTimeout" | "BadGatewayPrematureExit" | "BadGatewayForwarderConnectionErrorARR" | "BadGatewayNoServerARR" | "ApplicationPoolUnavailable" | "ConcurrentRequestLimitExceeded" | "ASPNETQueueFull" | "FastCGIQueueFull"> & typeof IIS;
export enum IRC {
    /**
     * The first message sent after client registration. The text used varies widely
     */
    RPL_WELCOME = "001",
    /**
     * @todo defined this constant
     */
    RPL_YOURHOST = "002",
    /**
     * @todo defined this constant
     */
    RPL_CREATED = "003",
    /**
     * @todo defined this constant
     */
    RPL_MYINFO = "004",
    /**
     * @todo defined this constant
     */
    RPL_ISUPPORT = "005",
    /**
     * @todo defined this constant
     */
    RPL_MAP = "006",
    /**
     * @todo defined this constant
     */
    RPL_MAPEND = "007",
    /**
     * Used to indicate the nickname parameter supplied to a command is
     * currently unused.
     */
    ERR_NOSUCHNICK = "401",
    /**
     * Used to indicate the server name given currently doesn't exist.
     */
    ERR_NOSUCHSERVER = "402",
    /**
     * Used to indicate the given channel name is invalid.
     */
    ERR_NOSUCHCHANNEL = "403",
    /**
     * Sent to a user who is either
     *  - not on a channel which is mode +n
     *  - not a chanop (or mode +v) on a channel which has mode +m set
     *    and is trying to send a PRIVMSG message to that channel.
     */
    ERR_CANNOTSENDTOCHAN = "404",
    /**
     * Sent to a user when they have joined the maximum number of allowed
     * channels and they try to join another channel.
     */
    ERR_TOOMANYCHANNELS = "405",
    /**
     * Returned by WHOWAS to indicate there is no history information for
     * that nickname.
     */
    ERR_WASNOSUCHNICK = "406",
    /**
     * Returned to a client which is attempting to send PRIVMSG/NOTICE
     * using the user@host destination format and for a user@host which has
     * several occurrences.
     */
    ERR_TOOMANYTARGETS = "407",
    /**
     * PING or PONG message missing the originator parameter which is
     * required since these commands must work without valid prefixes.
     */
    ERR_NOORIGIN = "409",
    /**
     * @todo Document this constant
     */
    ERR_NORECIPIENT = "411",
    /**
     * @todo Document this constant
     */
    ERR_NOTEXTTOSEND = "412",
    /**
     * @todo Document this constant
     */
    ERR_NOTOPLEVEL = "413",
    /**
     * 412 - 414 are returned by PRIVMSG to indicate that the message
     * wasn't delivered for some reason. ERR_NOTOPLEVEL and
     * ERR_WILDTOPLEVEL are errors that are returned when an invalid use of
     * 'PRIVMSG $server' or 'PRIVMSG *host' is attempted.
     */
    ERR_WILDTOPLEVEL = "414",
    /**
     * Returned to a registered client to indicate that the command sent is
     * unknown by the server.
     */
    ERR_UNKNOWNCOMMAND = "421",
    /**
     * Server's MOTD file could not be opened by the server.
     */
    ERR_NOMOTD = "422",
    /**
     * Returned by a server in response to an ADMIN message when there is
     * an error in finding the appropriate information.
     */
    ERR_NOADMININFO = "423",
    /**
     * Generic error message used to report a failed file operation during
     * the processing of a message.
     */
    ERR_FILEERROR = "424",
    /**
     * Returned when a nickname parameter expected for a command and isn't
     * found.
     */
    ERR_NONICKNAMEGIVEN = "431",
    /**
     * Returned after receiving a NICK message which contains characters
     * which do not fall in the defined set.
     */
    ERR_ERRONEUSNICKNAME = "432",
    /**
     * Returned when a NICK message is processed that results in an attempt
     * to change to a currently existing nickname.
     */
    ERR_NICKNAMEINUSE = "433",
    /**
     * Returned by a server to a client when it detects a nickname
     * collision (registered of a NICK that already exists by another
     * server).
     */
    ERR_NICKCOLLISION = "436",
    /**
     * Returned by the server to indicate that the target user of the
     * command is not on the given channel.
     */
    ERR_USERNOTINCHANNEL = "441",
    /**
     * Returned by the server whenever a client tries to perform a channel
     * effecting command for which the client isn't a member.
     */
    ERR_NOTONCHANNEL = "442",
    /**
     * Returned when a client tries to invite a user to a channel they are
     * already on.
     */
    ERR_USERONCHANNEL = "443",
    /**
     * Returned by the summon after a SUMMON command for a user was unable
     * to be performed since they were not logged in.
     */
    ERR_NOLOGIN = "444",
    /**
     * Returned as a response to the SUMMON command. Must be returned by
     * any server which does not implement it.
     */
    ERR_SUMMONDISABLED = "445",
    /**
     * Returned as a response to the USERS command. Must be returned by any
     * server which does not implement it.
     */
    ERR_USERSDISABLED = "446",
    /**
     * Returned by the server to indicate that the client must be
     * registered before the server will allow it to be parsed in detail.
     */
    ERR_NOTREGISTERED = "451",
    /**
     * Returned by the server by numerous commands to indicate to the
     * client that it didn't supply enough parameters.
     */
    ERR_NEEDMOREPARAMS = "461",
    /**
     * Returned by the server to any link which tries to change part of the
     * registered details (such as password or user details from second
     * USER message).
     */
    ERR_ALREADYREGISTRED = "462",
    /**
     * Returned to a client which attempts to register with a server which
     * does not been setup to allow connections from the host the attempted
     * connection is tried.
     */
    ERR_NOPERMFORHOST = "463",
    /**
     * Returned to indicate a failed attempt at registering a connection
     * for which a password was required and was either not given or
     * incorrect.
     */
    ERR_PASSWDMISMATCH = "464",
    /**
     * Returned after an attempt to connect and register yourself with a
     * server which has been setup to explicitly deny connections to you.
     */
    ERR_YOUREBANNEDCREEP = "465",
    /**
     * @todo Document this constant
     */
    ERR_KEYSET = "467",
    /**
     * @todo Document this constant
     */
    ERR_CHANNELISFULL = "471",
    /**
     * @todo Document this constant
     */
    ERR_UNKNOWNMODE = "472",
    /**
     * @todo Document this constant
     */
    ERR_INVITEONLYCHAN = "473",
    /**
     * @todo Document this constant
     */
    ERR_BANNEDFROMCHAN = "474",
    /**
     * @todo Document this constant
     */
    ERR_BADCHANNELKEY = "475",
    /**
     * Any command requiring operator privileges to operate must return
     * this error to indicate the attempt was unsuccessful.
     */
    ERR_NOPRIVILEGES = "481",
    /**
     * Any command requiring 'chanop' privileges (such as MODE messages)
     * must return this error if the client making the attempt is not a
     * chanop on the specified channel.
     */
    ERR_CHANOPRIVSNEEDED = "482",
    /**
     * Any attempts to use the KILL command on a server are to be refused
     * and this error returned directly to the client.
     */
    ERR_CANTKILLSERVER = "483",
    /**
     * If a client sends an OPER message and the server has not been
     * configured to allow connections from the client's host as an
     * 'operator', this error must be returned.
     */
    ERR_NOOPERHOST = "491",
    /**
     * Returned by the server to indicate that a MODE message was sent with
     * a nickname parameter and that the a mode flag sent was not
     * recognized.
     */
    ERR_UMODEUNKNOWNFLAG = "501",
    /**
     * Error sent to any user trying to view or change the user mode for a
     * user other than themselves.
     */
    ERR_USERSDONTMATCH = "502",
    /**
     * @todo Document this constant
     */
    QUOTE_PONG = "513",
    /**
     * @todo Document this constant
     */
    RPL_NONE = "300",
    /**
     * RPL_AWAY is sent to any client sending a PRIVMSG to a client which
     * is away. RPL_AWAY is only sent by the server to which the client is
     * connected.
     */
    RPL_AWAY = "301",
    /**
     * Reply format used by USERHOST to list replies to the query list.
     */
    RPL_USERHOST = "302",
    /**
     * Reply format used by ISON to list replies to the query list.
     */
    RPL_ISON = "303",
    /**
     * Replies RPL_UNAWAY and RPL_NOWAWAY are sent when the client removes
     * and sets an AWAY message
     */
    RPL_UNAWAY = "305",
    /**
     * Replies RPL_UNAWAY and RPL_NOWAWAY are sent when the client removes
     * and sets an AWAY message
     */
    RPL_NOWAWAY = "306",
    /**
     * @todo Document this constant
     */
    RPL_WHOISUSER = "311",
    /**
     * @todo Document this constant
     */
    RPL_WHOISSERVER = "312",
    /**
     * @todo Document this constant
     */
    RPL_WHOISOPERATOR = "313",
    /**
     * @todo Document this constant
     */
    RPL_WHOISIDLE = "317",
    /**
     * @todo Document this constant
     */
    RPL_ENDOFWHOIS = "318",
    /**
     * Replies 311 - '313', 317 - 319 are all replies generated in response
     * to a WHOIS message. Given that there are enough parameters 'present',
     * the answering server must either formulate a reply out of the above
     * numerics (if the query nick is found) or return an error reply. The
     * '*' in RPL_WHOISUSER is there as the literal character and not as a
     * wild card. For each reply 'set', only RPL_WHOISCHANNELS may appear
     * more than once (for long lists of channel names). The '@' and '+'
     * characters next to the channel name indicate whether a client is a
     * channel operator or has been granted permission to speak on a
     * moderated channel. The RPL_ENDOFWHOIS reply is used to mark the end
     * of processing a WHOIS message.
     */
    RPL_WHOISCHANNELS = "319",
    /**
     * @todo Document this constant
     */
    RPL_WHOWASUSER = "314",
    /**
     * When replying to a WHOWAS 'message', a server must use the replies
     * 'RPL_WHOWASUSER', RPL_WHOISSERVER or ERR_WASNOSUCHNICK for each
     * nickname in the presented list. At the end of all reply 'batches',
     * there must be RPL_ENDOFWHOWAS (even if there was only one reply and
     * it was an error).
     */
    RPL_ENDOFWHOWAS = "369",
    /**
     * @todo Document this constant
     */
    RPL_LISTSTART = "321",
    /**
     * @todo Document this constant
     */
    RPL_LIST = "322",
    /**
     * Replies 'RPL_LISTSTART', 'RPL_LIST', RPL_LISTEND mark the 'start', actual
     * replies with data and end of the server's response to a LIST
     * command. If there are no channels available to 'return', only the
     * start and end reply must be sent.
     */
    RPL_LISTEND = "323",
    /**
     * @todo Document this constant
     */
    RPL_CHANNELMODEIS = "324",
    /**
     * @todo Document this constant
     */
    RPL_NOTOPIC = "331",
    /**
     * When sending a TOPIC message to determine the channel 'topic', one of
     * two replies is sent. If the topic is 'set', RPL_TOPIC is sent back
     * else RPL_NOTOPIC.
     */
    RPL_TOPIC = "332",
    /**
     * Returned by the server to indicate that the attempted INVITE message
     * was successful and is being passed onto the end client.
     */
    RPL_INVITING = "341",
    /**
     * Returned by a server answering a SUMMON message to indicate that it
     * is summoning that user.
     */
    RPL_SUMMONING = "342",
    /**
     * Reply by the server showing its version details. The version
     * is the version of the software being used (including any patch level
     * revisions) and the debug level is used to indicate if the
     * server is running in 'debug mode'.
     *
     * The 'comments' field may contain any comments about the version or
     * further version details.
     */
    RPL_VERSION = "351",
    /**
     * @todo Document this constant
     */
    RPL_WHOREPLY = "352",
    /**
     * The RPL_WHOREPLY and RPL_ENDOFWHO pair are used to answer a WHO
     * message. The RPL_WHOREPLY is only sent if there is an appropriate
     * match to the WHO query. If there is a list of parameters supplied
     * with a WHO 'message', a RPL_ENDOFWHO must be sent after processing
     * each list item with name being the item.
     */
    RPL_ENDOFWHO = "315",
    /**
     * @todo Document this constant
     */
    RPL_NAMREPLY = "353",
    /**
     * @todo Document this constant
     */
    RPL_NAMEREPLY = "RPL_NAMREPLY",
    /**
     * @todo Document this constant
     */
    RPL_WHOSPCRPL = "354",
    /**
     * To reply to a NAMES 'message', a reply pair consisting of RPL_NAMREPLY
     * and RPL_ENDOFNAMES is sent by the server back to the client. If
     * there is no channel found as in the 'query', then only RPL_ENDOFNAMES
     * is returned. The exception to this is when a NAMES message is sent
     * with no parameters and all visible channels and contents are sent
     * back in a series of RPL_NAMEREPLY messages with a RPL_ENDOFNAMES to
     * mark the end.
     */
    RPL_ENDOFNAMES = "366",
    /**
     * @todo Document this constant
     */
    RPL_LINKS = "364",
    /**
     * In replying to the LINKS 'message', a server must send replies back
     * using the RPL_LINKS numeric and mark the end of the list using an
     * RPL_ENDOFLINKS reply.
     */
    RPL_ENDOFLINKS = "365",
    /**
     * @todo Document this constant
     */
    RPL_BANLIST = "367",
    /**
     * When listing the active 'bans' for a given 'channel', a server is
     * required to send the list back using the RPL_BANLIST and
     * RPL_ENDOFBANLIST messages. A separate RPL_BANLIST is sent for each
     * active ban id. After the ban ids have been listed (or if none present)
     * a RPL_ENDOFBANLIST must be sent.
     */
    RPL_ENDOFBANLIST = "368",
    /**
     * @todo Document this constant
     */
    RPL_INFO = "371",
    /**
     * A server responding to an INFO message is required to send all its
     * 'info' in a series of RPL_INFO messages with a RPL_ENDOFINFO reply
     * to indicate the end of the replies.
     */
    RPL_ENDOFINFO = "374",
    /**
     * @todo Document this constant
     */
    RPL_MOTDSTART = "375",
    /**
     * @todo Document this constant
     */
    RPL_MOTD = "372",
    /**
     * When responding to the MOTD message and the MOTD file is 'found', the
     * file is displayed line by 'line', with each line no longer than 80
     * 'characters', using RPL_MOTD format replies. These should be
     * surrounded by a RPL_MOTDSTART (before the RPL_MOTDs) and an
     * RPL_ENDOFMOTD (after).
     */
    RPL_ENDOFMOTD = "376",
    /**
     * RPL_YOUREOPER is sent back to a client which has just successfully
     * issued an OPER message and gained operator status.
     */
    RPL_YOUREOPER = "381",
    /**
     * If the REHASH option is used and an operator sends a REHASH 'message',
     * an RPL_REHASHING is sent back to the operator.
     */
    RPL_REHASHING = "382",
    /**
     * @todo Document this constant
     */
    RPL_QLIST = "386",
    /**
     * @todo Document this constant
     */
    RPL_ENDOFQLIST = "387",
    /**
     * When replying to the TIME 'message', a server must send the reply
     * using the RPL_TIME format above. The string showing the time need
     * only contain the correct day and time there. There is no further
     * requirement for the time string.
     */
    RPL_TIME = "391",
    /**
     * @todo Document this constant
     */
    RPL_USERSSTART = "392",
    /**
     * @todo Document this constant
     */
    RPL_USERS = "393",
    /**
     * @todo Document this constant
     */
    RPL_ENDOFUSERS = "394",
    /**
     * If the USERS message is handled by a 'server', the replies
     * 'RPL_USERSTART', 'RPL_USERS', RPL_ENDOFUSERS and RPL_NOUSERS are used.
     * RPL_USERSSTART must be sent 'first', following by either a sequence of
     * RPL_USERS or a single RPL_NOUSER. Following this is RPL_ENDOFUSERS.
     */
    RPL_NOUSERS = "395",
    /**
     * @todo Document this constant
     */
    RPL_TRACELINK = "200",
    /**
     * @todo Document this constant
     */
    RPL_TRACECONNECTING = "201",
    /**
     * @todo Document this constant
     */
    RPL_TRACEHANDSHAKE = "202",
    /**
     * @todo Document this constant
     */
    RPL_TRACEUNKNOWN = "203",
    /**
     * @todo Document this constant
     */
    RPL_TRACEOPERATOR = "204",
    /**
     * @todo Document this constant
     */
    RPL_TRACEUSER = "205",
    /**
     * @todo Document this constant
     */
    RPL_TRACESERVER = "206",
    /**
     * @todo Document this constant
     */
    RPL_TRACESERVICE = "207",
    /**
     * @todo Document this constant
     */
    RPL_TRACENEWTYPE = "208",
    /**
     * @todo Document this constant
     */
    RPL_TRACECLASS = "209",
    /**
     * The RPL_TRACE* are all returned by the server in response to the
     * TRACE message. How many are returned is dependent on the the TRACE
     * message and whether it was sent by an operator or not. There is no
     * predefined order for which occurs first. Replies 'RPL_TRACEUNKNOWN',
     * RPL_TRACECONNECTING and RPL_TRACEHANDSHAKE are all used for
     * connections which have not been fully established and are either
     * 'unknown', still attempting to connect or in the process of completing
     * the 'server handshake'. RPL_TRACELINK is sent by any server which
     * handles a TRACE message and has to pass it on to another server. The
     * list of RPL_TRACELINKs sent in response to a TRACE command
     * traversing the IRC network should reflect the actual connectivity of
     * the servers themselves along that path. RPL_TRACENEWTYPE is to be
     * used for any connection which does not fit in the other categories
     * but is being displayed anyway.
     */
    RPL_TRACELOG = "261",
    /**
     * @todo Document this constant
     */
    RPL_STATSLINKINFO = "211",
    /**
     * @todo Document this constant
     */
    RPL_STATSCOMMANDS = "212",
    /**
     * @todo Document this constant
     */
    RPL_STATSCLINE = "213",
    /**
     * @todo Document this constant
     */
    RPL_STATSNLINE = "214",
    RPL_STATSOLDNLINE = "RPL_STATSNLINE",
    /**
     * @todo Document this constant
     */
    RPL_STATSILINE = "215",
    /**
     * @todo Document this constant
     */
    RPL_STATSKLINE = "216",
    /**
     * @todo Document this constant
     */
    RPL_STATSQLINE = "217",
    /**
     * @todo Document this constant
     */
    RPL_STATSYLINE = "218",
    /**
     * @todo Document this constant
     */
    RPL_ENDOFSTATS = "219",
    /**
     * To answer a query about a client's own 'mode', RPL_UMODEIS is sent
     * back.
     */
    RPL_UMODEIS = "221",
    /**
     * @todo Document this constant
     */
    RPL_SERVICEINFO = "231",
    /**
     * @todo Document this constant
     */
    RPL_ENDOFSERVICES = "232",
    /**
     * @todo Document this constant
     */
    RPL_SERVICE = "233",
    /**
     * @todo Document this constant
     */
    RPL_SERVLIST = "234",
    /**
     * @todo Document this constant
     */
    RPL_SERVLISTEND = "235",
    /**
     * @todo Document this constant
     */
    RPL_STATSIAUTH = "239",
    /**
     * @todo Document this constant
     */
    RPL_STATSVLINE = "240",
    /**
     * @todo Document this constant
     */
    RPL_STATSLLINE = "241",
    /**
     * @todo Document this constant
     */
    RPL_STATSUPTIME = "242",
    /**
     * @todo Document this constant
     */
    RPL_STATSOLINE = "243",
    /**
     * @todo Document this constant
     */
    RPL_STATSHLINE = "244",
    /**
     * @todo Document this constant
     */
    RPL_LUSERCLIENT = "251",
    /**
     * @todo Document this constant
     */
    RPL_LUSEROP = "252",
    /**
     * @todo Document this constant
     */
    RPL_LUSERUNKNOWN = "253",
    /**
     * @todo Document this constant
     */
    RPL_LUSERCHANNELS = "254",
    /**
     * In processing an LUSERS 'message', the server sends a set of replies
     * from 'RPL_LUSERCLIENT', 'RPL_LUSEROP', 'RPL_USERUNKNOWN',
     * RPL_LUSERCHANNELS and RPL_LUSERME. When 'replying', a server must send
     * back RPL_LUSERCLIENT and RPL_LUSERME. The other replies are only
     * sent back if a non-zero count is found for them.
     */
    RPL_LUSERME = "255",
    /**
     * @todo Document this constant
     */
    RPL_ADMINME = "256",
    /**
     * @todo Document this constant
     */
    RPL_ADMINLOC1 = "257",
    /**
     * @todo Document this constant
     */
    RPL_ADMINLOC2 = "258",
    /**
     * When replying to an ADMIN 'message', a server is expected to use
     * replies RLP_ADMINME through to RPL_ADMINEMAIL and provide a text
     * message with each. For RPL_ADMINLOC1 a description of what 'city',
     * state and country the server is in is 'expected', followed by details
     * of the university and department (RPL_ADMINLOC2) and finally the
     * administrative contact for the server (an email address here is
     * required) in RPL_ADMINEMAIL.
     */
    RPL_ADMINEMAIL = "259",
    /**
     * @todo Document this constant
     */
    RPL_MONONLINE = "730",
    /**
     * @todo Document this constant
     */
    RPL_MONOFFLINE = "731",
    /**
     * @todo Document this constant
     */
    RPL_MONLIST = "732",
    /**
     * @todo Document this constant
     */
    RPL_ENDOFMONLIST = "733",
    /**
     * @todo Document this constant
     */
    ERR_MONLISTFULL = "734",
    /**
     * @todo Document this constant
     */
    RPL_SASLLOGIN = "900",
    /**
     * @todo Document this constant
     */
    RPL_SASLSUCCESS = "903",
    /**
     * @todo Document this constant
     */
    RPL_SASLFAILED = "904",
    /**
     * @todo Document this constant
     */
    RPL_SASLERROR = "905",
    /**
     * @todo Document this constant
     */
    RPL_SASLABORT = "906",
    /**
     * @todo Document this constant
     */
    RPL_SASLALREADYAUTH = "907"
}
/**
 * @see https://mochajs.org/#error-codes
 */
export enum Mocha {
    InvalidArgType = "ERR_MOCHA_INVALID_ARG_TYPE",
    InvalidArgValue = "ERR_MOCHA_INVALID_ARG_VALUE",
    InvalidException = "ERR_MOCHA_INVALID_EXCEPTION",
    InvalidInterface = "ERR_MOCHA_INVALID_INTERFACE",
    InvalidReporter = "ERR_MOCHA_INVALID_REPORTER",
    NoFilesMatchPattern = "ERR_MOCHA_NO_FILES_MATCH_PATTERN",
    Unsupported = "ERR_MOCHA_UNSUPPORTED"
}
/**
 * @see https://docs.mongodb.com/manual/reference/exit-codes/
 */
export enum MongoDBExit {
    SuccessfulExit = 0,
    GenericFailure = 1,
    OptionsError = 2,
    HostnameMismatch = 3,
    VersionMismatch = 4,
    InstallationIssue = 5,
    WindowsShutdownEvent = 12,
    SystemExitUncleanShutdown = 14,
    WindowsWsaStartupFailedNtServiceError = 20,
    ListenError = 48,
    ProcessForkFailed = 50,
    NoReadySignal = 51,
    UnresponsiveFilesystem = 61,
    IncompatibleDataFiles = 62,
    ProcessHealthCheckFailed = 87,
    UncaughtException = 100,
    AuditLogRotationFailed = 102
}
/**
 * @see https://github.com/mongodb/mongo/blob/master/src/mongo/base/error_codes.yml
 */
export enum MongoDB {
    Ok = 0,
    InternalError = 1,
    BadValue = 2,
    OBSOLETE_DuplicateKey = 3,
    NoSuchKey = 4,
    GraphContainsCycle = 5,
    HostUnreachable = 6,
    HostNotFound = 7,
    UnknownError = 8,
    FailedToParse = 9,
    CannotMutateObject = 10,
    UserNotFound = 11,
    UnsupportedFormat = 12,
    Unauthorized = 13,
    TypeMismatch = 14,
    Overflow = 15,
    InvalidLength = 16,
    ProtocolError = 17,
    AuthenticationFailed = 18,
    CannotReuseObject = 19,
    IllegalOperation = 20,
    EmptyArrayOperation = 21,
    InvalidBSON = 22,
    AlreadyInitialized = 23,
    LockTimeout = 24,
    RemoteValidationError = 25,
    NamespaceNotFound = 26,
    IndexNotFound = 27,
    PathNotViable = 28,
    NonExistentPath = 29,
    InvalidPath = 30,
    RoleNotFound = 31,
    RolesNotRelated = 32,
    PrivilegeNotFound = 33,
    CannotBackfillArray = 34,
    UserModificationFailed = 35,
    RemoteChangeDetected = 36,
    FileRenameFailed = 37,
    FileNotOpen = 38,
    FileStreamFailed = 39,
    ConflictingUpdateOperators = 40,
    FileAlreadyOpen = 41,
    LogWriteFailed = 42,
    CursorNotFound = 43,
    UserDataInconsistent = 45,
    LockBusy = 46,
    NoMatchingDocument = 47,
    NamespaceExists = 48,
    InvalidRoleModification = 49,
    MaxTimeMSExpired = 50,
    ManualInterventionRequired = 51,
    DollarPrefixedFieldName = 52,
    InvalidIdField = 53,
    NotSingleValueField = 54,
    InvalidDBRef = 55,
    EmptyFieldName = 56,
    DottedFieldName = 57,
    RoleModificationFailed = 58,
    CommandNotFound = 59,
    OBSOLETE_DatabaseNotFound = 60,
    ShardKeyNotFound = 61,
    OplogOperationUnsupported = 62,
    StaleShardVersion = 63,
    WriteConcernFailed = 64,
    MultipleErrorsOccurred = 65,
    ImmutableField = 66,
    CannotCreateIndex = 67,
    IndexAlreadyExists = 68,
    AuthSchemaIncompatible = 69,
    ShardNotFound = 70,
    ReplicaSetNotFound = 71,
    InvalidOptions = 72,
    InvalidNamespace = 73,
    NodeNotFound = 74,
    WriteConcernLegacyOK = 75,
    NoReplicationEnabled = 76,
    OperationIncomplete = 77,
    CommandResultSchemaViolation = 78,
    UnknownReplWriteConcern = 79,
    RoleDataInconsistent = 80,
    NoMatchParseContext = 81,
    NoProgressMade = 82,
    RemoteResultsUnavailable = 83,
    DuplicateKeyValue = 84,
    IndexOptionsConflict = 85,
    IndexKeySpecsConflict = 86,
    CannotSplit = 87,
    SplitFailed_OBSOLETE = 88,
    NetworkTimeout = 89,
    CallbackCanceled = 90,
    ShutdownInProgress = 91,
    SecondaryAheadOfPrimary = 92,
    InvalidReplicaSetConfig = 93,
    NotYetInitialized = 94,
    NotSecondary = 95,
    OperationFailed = 96,
    NoProjectionFound = 97,
    DBPathInUse = 98,
    UnsatisfiableWriteConcern = 100,
    OutdatedClient = 101,
    IncompatibleAuditMetadata = 102,
    NewReplicaSetConfigurationIncompatible = 103,
    NodeNotElectable = 104,
    IncompatibleShardingMetadata = 105,
    DistributedClockSkewed = 106,
    LockFailed = 107,
    InconsistentReplicaSetNames = 108,
    ConfigurationInProgress = 109,
    CannotInitializeNodeWithData = 110,
    NotExactValueField = 111,
    WriteConflict = 112,
    InitialSyncFailure = 113,
    InitialSyncOplogSourceMissing = 114,
    CommandNotSupported = 115,
    DocTooLargeForCapped = 116,
    ConflictingOperationInProgress = 117,
    NamespaceNotSharded = 118,
    InvalidSyncSource = 119,
    OplogStartMissing = 120,
    DocumentValidationFailure = 121,
    OBSOLETE_ReadAfterOptimeTimeout = 122,
    NotAReplicaSet = 123,
    IncompatibleElectionProtocol = 124,
    CommandFailed = 125,
    RPCProtocolNegotiationFailed = 126,
    UnrecoverableRollbackError = 127,
    LockNotFound = 128,
    LockStateChangeFailed = 129,
    SymbolNotFound = 130,
    OBSOLETE_ConfigServersInconsistent = 132,
    FailedToSatisfyReadPreference = 133,
    ReadConcernMajorityNotAvailableYet = 134,
    StaleTerm = 135,
    CappedPositionLost = 136,
    IncompatibleShardingConfigVersion = 137,
    RemoteOplogStale = 138,
    JSInterpreterFailure = 139,
    InvalidSSLConfiguration = 140,
    SSLHandshakeFailed = 141,
    JSUncatchableError = 142,
    CursorInUse = 143,
    IncompatibleCatalogManager = 144,
    PooledConnectionsDropped = 145,
    ExceededMemoryLimit = 146,
    ZLibError = 147,
    ReadConcernMajorityNotEnabled = 148,
    NoConfigMaster = 149,
    StaleEpoch = 150,
    OperationCannotBeBatched = 151,
    OplogOutOfOrder = 152,
    ChunkTooBig = 153,
    InconsistentShardIdentity = 154,
    CannotApplyOplogWhilePrimary = 155,
    OBSOLETE_NeedsDocumentMove = 156,
    CanRepairToDowngrade = 157,
    MustUpgrade = 158,
    DurationOverflow = 159,
    MaxStalenessOutOfRange = 160,
    IncompatibleCollationVersion = 161,
    CollectionIsEmpty = 162,
    ZoneStillInUse = 163,
    InitialSyncActive = 164,
    ViewDepthLimitExceeded = 165,
    CommandNotSupportedOnView = 166,
    OptionNotSupportedOnView = 167,
    InvalidPipelineOperator = 168,
    CommandOnShardedViewNotSupportedOnMongod = 169,
    TooManyMatchingDocuments = 170,
    CannotIndexParallelArrays = 171,
    TransportSessionClosed = 172,
    TransportSessionNotFound = 173,
    TransportSessionUnknown = 174,
    QueryPlanKilled = 175,
    FileOpenFailed = 176,
    ZoneNotFound = 177,
    RangeOverlapConflict = 178,
    WindowsPdhError = 179,
    BadPerfCounterPath = 180,
    AmbiguousIndexKeyPattern = 181,
    InvalidViewDefinition = 182,
    ClientMetadataMissingField = 183,
    ClientMetadataAppNameTooLarge = 184,
    ClientMetadataDocumentTooLarge = 185,
    ClientMetadataCannotBeMutated = 186,
    LinearizableReadConcernError = 187,
    IncompatibleServerVersion = 188,
    PrimarySteppedDown = 189,
    MasterSlaveConnectionFailure = 190,
    OBSOLETE_BalancerLostDistributedLock = 191,
    FailPointEnabled = 192,
    NoShardingEnabled = 193,
    BalancerInterrupted = 194,
    ViewPipelineMaxSizeExceeded = 195,
    InvalidIndexSpecificationOption = 197,
    OBSOLETE_ReceivedOpReplyMessage = 198,
    ReplicaSetMonitorRemoved = 199,
    ChunkRangeCleanupPending = 200,
    CannotBuildIndexKeys = 201,
    NetworkInterfaceExceededTimeLimit = 202,
    ShardingStateNotInitialized = 203,
    TimeProofMismatch = 204,
    ClusterTimeFailsRateLimiter = 205,
    NoSuchSession = 206,
    InvalidUUID = 207,
    TooManyLocks = 208,
    StaleClusterTime = 209,
    CannotVerifyAndSignLogicalTime = 210,
    KeyNotFound = 211,
    IncompatibleRollbackAlgorithm = 212,
    DuplicateSession = 213,
    AuthenticationRestrictionUnmet = 214,
    DatabaseDropPending = 215,
    ElectionInProgress = 216,
    IncompleteTransactionHistory = 217,
    UpdateOperationFailed = 218,
    FTDCPathNotSet = 219,
    FTDCPathAlreadySet = 220,
    IndexModified = 221,
    CloseChangeStream = 222,
    IllegalOpMsgFlag = 223,
    QueryFeatureNotAllowed = 224,
    TransactionTooOld = 225,
    AtomicityFailure = 226,
    CannotImplicitlyCreateCollection = 227,
    SessionTransferIncomplete = 228,
    MustDowngrade = 229,
    DNSHostNotFound = 230,
    DNSProtocolError = 231,
    MaxSubPipelineDepthExceeded = 232,
    TooManyDocumentSequences = 233,
    RetryChangeStream = 234,
    InternalErrorNotSupported = 235,
    ForTestingErrorExtraInfo = 236,
    CursorKilled = 237,
    NotImplemented = 238,
    SnapshotTooOld = 239,
    DNSRecordTypeMismatch = 240,
    ConversionFailure = 241,
    CannotCreateCollection = 242,
    IncompatibleWithUpgradedServer = 243,
    NOT_YET_AVAILABLE_TransactionAborted = 244,
    BrokenPromise = 245,
    SnapshotUnavailable = 246,
    ProducerConsumerQueueBatchTooLarge = 247,
    ProducerConsumerQueueEndClosed = 248,
    StaleDbVersion = 249,
    StaleChunkHistory = 250,
    NoSuchTransaction = 251,
    ReentrancyNotAllowed = 252,
    FreeMonHttpInFlight = 253,
    FreeMonHttpTemporaryFailure = 254,
    FreeMonHttpPermanentFailure = 255,
    TransactionCommitted = 256,
    TransactionTooLarge = 257,
    UnknownFeatureCompatibilityVersion = 258,
    KeyedExecutorRetry = 259,
    InvalidResumeToken = 260,
    TooManyLogicalSessions = 261,
    ExceededTimeLimit = 262,
    OperationNotSupportedInTransaction = 263,
    TooManyFilesOpen = 264,
    OrphanedRangeCleanUpFailed = 265,
    FailPointSetFailed = 266,
    PreparedTransactionInProgress = 267,
    CannotBackup = 268,
    DataModifiedByRepair = 269,
    RepairedReplicaSetNode = 270,
    JSInterpreterFailureWithStack = 271,
    MigrationConflict = 272,
    ProducerConsumerQueueProducerQueueDepthExceeded = 273,
    ProducerConsumerQueueConsumed = 274,
    ExchangePassthrough = 275,
    IndexBuildAborted = 276,
    AlarmAlreadyFulfilled = 277,
    UnsatisfiableCommitQuorum = 278,
    ClientDisconnect = 279,
    ChangeStreamFatalError = 280,
    TransactionCoordinatorSteppingDown = 281,
    TransactionCoordinatorReachedAbortDecision = 282,
    WouldChangeOwningShard = 283,
    ForTestingErrorExtraInfoWithExtraInfoInNamespace = 284,
    IndexBuildAlreadyInProgress = 285,
    ChangeStreamHistoryLost = 286,
    TransactionCoordinatorDeadlineTaskCanceled = 287,
    ChecksumMismatch = 288,
    WaitForMajorityServiceEarlierOpTimeAvailable = 289,
    TransactionExceededLifetimeLimitSeconds = 290,
    NoQueryExecutionPlans = 291,
    QueryExceededMemoryLimitNoDiskUseAllowed = 292,
    InvalidSeedList = 293,
    InvalidTopologyType = 294,
    InvalidHeartBeatFrequency = 295,
    TopologySetNameRequired = 296,
    HierarchicalAcquisitionLevelViolation = 297,
    InvalidServerType = 298,
    OCSPCertificateStatusRevoked = 299,
    RangeDeletionAbandonedBecauseCollectionWithUUIDDoesNotExist = 300,
    DataCorruptionDetected = 301,
    OCSPCertificateStatusUnknown = 302,
    SplitHorizonChange = 303,
    ShardInvalidatedForTargeting = 304,
    ReadThroughCacheKeyNotFound = 305,
    ReadThroughCacheLookupCanceled = 306,
    RangeDeletionAbandonedBecauseTaskDocumentDoesNotExist = 307,
    SocketException = 9001,
    OBSOLETE_RecvStaleConfig = 9996,
    CannotGrowDocumentInCappedNamespace = 10003,
    NotMaster = 10107,
    BSONObjectTooLarge = 10334,
    DuplicateKey = 11000,
    InterruptedAtShutdown = 11600,
    Interrupted = 11601,
    InterruptedDueToReplStateChange = 11602,
    BackgroundOperationInProgressForDatabase = 12586,
    BackgroundOperationInProgressForNamespace = 12587,
    OBSOLETE_PrepareConfigsFailed = 13104,
    MergeStageNoMatchingDocument = 13113,
    DatabaseDifferCase = 13297,
    StaleConfig = 13388,
    NotMasterNoSlaveOk = 13435,
    NotMasterOrSecondary = 13436,
    OutOfDiskSpace = 14031,
    OBSOLETE_KeyTooLong = 17280
}
/**
 * @see https://github.com/Automattic/mongoose/blob/master/lib/connectionstate.js
 */
export enum MongooseState {
    Disconnected = 0,
    Connected = 1,
    Connecting = 2,
    Disconnecting = 3,
    Uninitialized = 99
}
export enum Nginx {
    Ok = 200,
    Created = 201,
    Accepted = 202,
    NoContent = 204,
    PartialContent = 206,
    MovedPermanently = 301,
    MovedTemporarily = 302,
    SeeOther = 303,
    NotModified = 304,
    TemporaryRedirect = 307,
    PermanentRedirect = 308,
    BadRequest = 400,
    Unauthorized = 401,
    PaymentRequired = 402,
    Forbidden = 403,
    NotFound = 404,
    NotAllowed = 405,
    NotAcceptable = 406,
    RequestTimeOut = 408,
    Conflict = 409,
    Gone = 410,
    LengthRequired = 411,
    PreconditionFailed = 412,
    RequestEntityTooLarge = 413,
    RequestUriTooLarge = 414,
    UnsupportedMediaType = 415,
    RequestedRangeNotSatisfiable = 416,
    MisdirectedRequest = 421,
    TooManyRequests = 429,
    InternalServerError = 500,
    NotImplemented = 501,
    BadGateway = 502,
    ServiceTemporarilyUnavailable = 503,
    GatewayTimeOut = 504,
    HttpVersionNotSupported = 505,
    InsufficientStorage = 507
}
export enum Node {
    Continue = 100,
    SwitchingProtocols = 101,
    Processing = 102,
    EarlyHints = 103,
    Ok = 200,
    Created = 201,
    Accepted = 202,
    NonAuthoritativeInformation = 203,
    NoContent = 204,
    ResetContent = 205,
    PartialContent = 206,
    MultiStatus = 207,
    AlreadyReported = 208,
    ImUsed = 226,
    MultipleChoices = 300,
    MovedPermanently = 301,
    Found = 302,
    SeeOther = 303,
    NotModified = 304,
    UseProxy = 305,
    TemporaryRedirect = 307,
    PermanentRedirect = 308,
    BadRequest = 400,
    Unauthorized = 401,
    PaymentRequired = 402,
    Forbidden = 403,
    NotFound = 404,
    MethodNotAllowed = 405,
    NotAcceptable = 406,
    ProxyAuthenticationRequired = 407,
    RequestTimeout = 408,
    Conflict = 409,
    Gone = 410,
    LengthRequired = 411,
    PreconditionFailed = 412,
    PayloadTooLarge = 413,
    UriTooLong = 414,
    UnsupportedMediaType = 415,
    RangeNotSatisfiable = 416,
    ExpectationFailed = 417,
    ImATeapot = 418,
    MisdirectedRequest = 421,
    UnprocessableEntity = 422,
    Locked = 423,
    FailedDependency = 424,
    UnorderedCollection = 425,
    UpgradeRequired = 426,
    PreconditionRequired = 428,
    TooManyRequests = 429,
    RequestHeaderFieldsTooLarge = 431,
    UnavailableForLegalReasons = 451,
    InternalServerError = 500,
    NotImplemented = 501,
    BadGateway = 502,
    ServiceUnavailable = 503,
    GatewayTimeout = 504,
    HttpVersionNotSupported = 505,
    VariantAlsoNegotiates = 506,
    InsufficientStorage = 507,
    LoopDetected = 508,
    BandwidthLimitExceeded = 509,
    NotExtended = 510,
    NetworkAuthenticationRequired = 511
}
/**
 * @see https://www.postgresql.org/docs/current/errcodes-appendix.html
 */
export enum PG {
    SuccessfulCompletion = "00000",
    Warning = "01000",
    DynamicResultSetsReturned = "0100C",
    ImplicitZeroBitPadding = "01008",
    NullValueEliminatedInSetFunction = "01003",
    PrivilegeNotGranted = "01007",
    PrivilegeNotRevoked = "01006",
    StringDataRightTruncationWarning = "01004",
    DeprecatedFeature = "01P01",
    NoData = "02000",
    NoAdditionalDynamicResultSetsReturned = "02001",
    SqlStatementNotYetComplete = "03000",
    ConnectionException = "08000",
    ConnectionDoesNotExist = "08003",
    ConnectionFailure = "08006",
    SqlClientUnableToEstablishSqlConnection = "08001",
    SqlServerRejectedEstablishmentOfSqlConnection = "08004",
    TransactionResolutionUnknown = "08007",
    ProtocolViolation = "08P01",
    TriggeredActionException = "09000",
    FeatureNotSupported = "0A000",
    InvalidTransactionInitiation = "0B000",
    LocatorException = "0F000",
    InvalidLocatorSpecification = "0F001",
    InvalidGrantor = "0L000",
    InvalidGrantOperation = "0LP01",
    InvalidRoleSpecification = "0P000",
    DiagnosticsException = "0Z000",
    StackedDiagnosticsAccessedWithoutActiveHandler = "0Z002",
    CaseNotFound = "20000",
    CardinalityViolation = "21000",
    DataException = "22000",
    ArraySubscriptError = "2202E",
    CharacterNotInRepertoire = "22021",
    DateTimeFieldOverflow = "22008",
    DivisionByZero = "22012",
    ErrorInAssignment = "22005",
    EscapeCharacterConflict = "2200B",
    IndicatorOverflow = "22022",
    IntervalFieldOverflow = "22015",
    InvalidArgumentForLogarithm = "2201E",
    InvalidArgumentForNTileFunction = "22014",
    InvalidArgumentForNthValueFunction = "22016",
    InvalidArgumentForPowerFunction = "2201F",
    InvalidArgumentForWidthBucketFunction = "2201G",
    InvalidCharacterValueForCast = "22018",
    InvalidDateTimeFormat = "22007",
    InvalidEscapeCharacter = "22019",
    InvalidEscapeOctet = "2200D",
    InvalidEscapeSequence = "22025",
    NonstandardUseOfEscapeCharacter = "22P06",
    InvalidIndicatorParameterValue = "22010",
    InvalidParameterValue = "22023",
    InvalidPrecedingOrFollowingSize = "22013",
    InvalidRegularExpression = "2201B",
    InvalidRowCountInLimitClause = "2201W",
    InvalidRowCountInResultOffsetClause = "2201X",
    InvalidTableSampleArgument = "2202H",
    InvalidTableSampleRepeat = "2202G",
    InvalidTimeZoneDisplacementValue = "22009",
    InvalidUseOfEscapeCharacter = "2200C",
    MostSpecificTypeMismatch = "2200G",
    NullValueNotAllowed_DataException = "22004",
    NullValueNoIndicatorParameter = "22002",
    NumericValueOutOfRange = "22003",
    SequenceGeneratorLimitExceeded = "2200H",
    StringDataLengthMismatch = "22026",
    StringDataRightTruncation_DataException = "22001",
    SubstringError = "22011",
    TrimError = "22027",
    UnterminatedCString = "22024",
    ZeroLengthCharacterString = "2200F",
    FloatingPointException = "22P01",
    InvalidTextRepresentation = "22P02",
    InvalidBinaryRepresentation = "22P03",
    BadCopyFileFormat = "22P04",
    UntranslatableCharacter = "22P05",
    NotAnXmlDocument = "2200L",
    InvalidXmlDocument = "2200M",
    InvalidXmlContent = "2200N",
    InvalidXmlComment = "2200S",
    InvalidXmlProcessingInstruction = "2200T",
    DuplicateJsonObjectKeyValue = "22030",
    InvalidArgumentForSqlJsonDateTimeFunction = "22031",
    InvalidJsonText = "22032",
    InvalidSqlJsonSubscript = "22033",
    MoreThanOneSqlJsonItem = "22034",
    NoSqlJsonItem = "22035",
    NonNumericSqlJsonItem = "22036",
    NonUniqueKeysInAJsonObject = "22037",
    SingletonSqlJsonItemRequired = "22038",
    SqlJsonArrayNotFound = "22039",
    SqlJsonMemberNotFound = "2203A",
    SqlJsonNumberNotFound = "2203B",
    SqlJsonObjectNotFound = "2203C",
    TooManyJsonArrayElements = "2203D",
    TooManyJsonObjectMembers = "2203E",
    SqlJsonScalarRequired = "2203F",
    SqlJsonItemCannotBeCastToTargetType = "2203G",
    IntegrityConstraintViolation = "23000",
    RestrictViolation = "23001",
    NotNullViolation = "23502",
    ForeignKeyViolation = "23503",
    UniqueViolation = "23505",
    CheckViolation = "23514",
    ExclusionViolation = "23P01",
    InvalidCursorState = "24000",
    InvalidTransactionState = "25000",
    ActiveSqlTransaction = "25001",
    BranchTransactionAlreadyActive = "25002",
    HeldCursorRequiresSameIsolationLevel = "25008",
    InappropriateAccessModeForBranchTransaction = "25003",
    InappropriateIsolationLevelForBranchTransaction = "25004",
    NoActiveSqlTransactionForBranchTransaction = "25005",
    ReadOnlySqlTransaction = "25006",
    SchemaAndDataStatementMixingNotSupported = "25007",
    NoActiveSqlTransaction = "25P01",
    InFailedSqlTransaction = "25P02",
    IdleInTransactionSessionTimeout = "25P03",
    InvalidSqlStatementName = "26000",
    TriggeredDataChangeViolation = "27000",
    InvalidAuthorizationSpecification = "28000",
    InvalidPassword = "28P01",
    DependentPrivilegeDescriptorsStillExist = "2B000",
    DependentObjectsStillExist = "2BP01",
    InvalidTransactionTermination = "2D000",
    SqlRoutineException = "2F000",
    FunctionExecutedNoReturnStatement = "2F005",
    ModifyingSqlDataNotPermitted_SqlRoutineException = "2F002",
    ProhibitedSqlStatementAttempted_SqlRoutineException = "2F003",
    ReadingSqlDataNotPermitted_SqlRoutineException = "2F004",
    InvalidCursorName = "34000",
    ExternalRoutineException = "38000",
    ContainingSqlNotPermitted = "38001",
    ModifyingSqlDataNotPermitted_ExternalRoutineException = "38002",
    ProhibitedSqlStatementAttempted_ExternalRoutineException = "38003",
    ReadingSqlDataNotPermitted_ExternalRoutineException = "38004",
    ExternalRoutineInvocationException = "39000",
    InvalidSqlStateReturned = "39001",
    NullValueNotAllowed_ExternalRoutineInvocationException = "39004",
    TriggerProtocolViolated = "39P01",
    SrfProtocolViolated = "39P02",
    EventTriggerProtocolViolated = "39P03",
    SavePointException = "3B000",
    InvalidSavePointSpecification = "3B001",
    InvalidCatalogName = "3D000",
    InvalidSchemaName = "3F000",
    TransactionRollback = "40000",
    TransactionIntegrityConstraintViolation = "40002",
    SerializationFailure = "40001",
    StatementCompletionUnknown = "40003",
    DeadlockDetected = "40P01",
    SyntaxErrorOrAccessRuleViolation = "42000",
    SyntaxError = "42601",
    InsufficientPrivilege = "42501",
    CannotCoerce = "42846",
    GroupingError = "42803",
    WindowingError = "42P20",
    InvalidRecursion = "42P19",
    InvalidForeignKey = "42830",
    InvalidName = "42602",
    NameTooLong = "42622",
    ReservedName = "42939",
    DatatypeMismatch = "42804",
    IndeterminateDatatype = "42P18",
    CollationMismatch = "42P21",
    IndeterminateCollation = "42P22",
    WrongObjectType = "42809",
    GeneratedAlways = "428C9",
    UndefinedColumn = "42703",
    UndefinedFunction = "42883",
    UndefinedTable = "42P01",
    UndefinedParameter = "42P02",
    UndefinedObject = "42704",
    DuplicateColumn = "42701",
    DuplicateCursor = "42P03",
    DuplicateDatabase = "42P04",
    DuplicateFunction = "42723",
    DuplicatePreparedStatement = "42P05",
    DuplicateSchema = "42P06",
    DuplicateTable = "42P07",
    DuplicateAlias = "42712",
    DuplicateObject = "42710",
    AmbiguousColumn = "42702",
    AmbiguousFunction = "42725",
    AmbiguousParameter = "42P08",
    AmbiguousAlias = "42P09",
    InvalidColumnReference = "42P10",
    InvalidColumnDefinition = "42611",
    InvalidCursorDefinition = "42P11",
    InvalidDatabaseDefinition = "42P12",
    InvalidFunctionDefinition = "42P13",
    InvalidPreparedStatementDefinition = "42P14",
    InvalidSchemaDefinition = "42P15",
    InvalidTableDefinition = "42P16",
    InvalidObjectDefinition = "42P17",
    WithCheckOptionViolation = "44000",
    InsufficientResources = "53000",
    DiskFull = "53100",
    OutOfMemory = "53200",
    TooManyConnections = "53300",
    ConfigurationLimitExceeded = "53400",
    ProgramLimitExceeded = "54000",
    StatementTooComplex = "54001",
    TooManyColumns = "54011",
    TooManyArguments = "54023",
    ObjectNotInPrerequisiteState = "55000",
    ObjectInUse = "55006",
    CantChangeRuntimeParam = "55P02",
    LockNotAvailable = "55P03",
    UnsafeNewEnumValueUsage = "55P04",
    OperatorIntervention = "57000",
    QueryCanceled = "57014",
    AdminShutdown = "57P01",
    CrashShutdown = "57P02",
    CannotConnectNow = "57P03",
    DatabaseDropped = "57P04",
    IdleSessionTimeout = "57P05",
    SystemError = "58000",
    IoError = "58030",
    UndefinedFile = "58P01",
    DuplicateFile = "58P02",
    SnapshotTooOld = "72000",
    ConfigFileError = "F0000",
    LockFileExists = "F0001",
    FdwError = "HV000",
    FdwColumnNameNotFound = "HV005",
    FdwDynamicParameterValueNeeded = "HV002",
    FdwFunctionSequenceError = "HV010",
    FdwInconsistentDescriptorInformation = "HV021",
    FdwInvalidAttributeValue = "HV024",
    FdwInvalidColumnName = "HV007",
    FdwInvalidColumnNumber = "HV008",
    FdwInvalidDataType = "HV004",
    FdwInvalidDataTypeDescriptors = "HV006",
    FdwInvalidDescriptorFieldIdentifier = "HV091",
    FdwInvalidHandle = "HV00B",
    FdwInvalidOptionIndex = "HV00C",
    FdwInvalidOptionName = "HV00D",
    FdwInvalidStringLengthOrBufferLength = "HV090",
    FdwInvalidStringFormat = "HV00A",
    FdwInvalidUseOfNullPointer = "HV009",
    FdwTooManyHandles = "HV014",
    FdwOutOfMemory = "HV001",
    FdwNoSchemas = "HV00P",
    FdwOptionNameNotFound = "HV00J",
    FdwReplyHandle = "HV00K",
    FdwSchemaNotFound = "HV00Q",
    FdwTableNotFound = "HV00R",
    FdwUnableToCreateExecution = "HV00L",
    FdwUnableToCreateReply = "HV00M",
    FdwUnableToEstablishConnection = "HV00N",
    PLpgSqlError = "P0000",
    RaiseException = "P0001",
    NoDataFound = "P0002",
    TooManyRows = "P0003",
    AssertFailure = "P0004",
    InternalError = "XX000",
    DataCorrupted = "XX001",
    IndexCorrupted = "XX002"
}
/**
 * @see https://developer.twitter.com/en/support/twitter-api/error-troubleshooting
 */
export enum TwitterHttp {
    Ok = 200,
    NotModified = 304,
    BadRequest = 400,
    Unauthorized = 401,
    Forbidden = 403,
    NotFound = 404,
    NotAcceptable = 406,
    ConnectionException = 409,
    Gone = 410,
    /**
     * @deprecated - Removed from most recent documentation
     */
    EnhanceYourCalm = 420,
    UnprocessableEntity = 422,
    TooManyRequests = 429,
    InternalServerError = 500,
    BadGateway = 502,
    ServiceUnavailable = 503,
    GatewayTimeout = 504
}
export enum TwitterErrors {
    InvalidCoordinates = 3,
    NoIpLocationAssociation = 13,
    NoUserTermsMatch = 17,
    AuthenticationFailure = 32,
    PageDoesNotExist = 34,
    CannotSelfReportForSpam = 36,
    ParameterMissing = 38,
    AttachmentUrlParameterInvalid = 44,
    UserNotFound = 50,
    UserSuspended = 63,
    AccountSuspended = 64,
    TwitterAPIv1Inactive = 68,
    ClientActionNotPermitted = 87,
    RateLimitExceeded = 88,
    InvalidOrExpiredToken = 89,
    SslRequired = 92,
    DirectMessageAccessDenied = 93,
    CredentialVerificationFailure = 99,
    SpecifiedUserNotFoundInList = 109,
    UserToRemoveNotAListMember = 110,
    AccountUpdateFailed = 120,
    OverCapacity = 130,
    InternalError = 131,
    CouldNotAuthenticate = 135,
    AlreadyFavorited = 139,
    NoStatusFound = 144,
    UserMessageSendFailure = 150,
    MessageSendError = 151,
    DuplicateFollowRequest = 160,
    FollowLimitExceeded = 161,
    UnauthorizedStatusRequest = 179,
    DailyUpdateLimitExceeded = 185,
    TweetTextOverLimit = 186,
    DuplicateStatus = 187,
    MissingOrInvalidUrlParameter = 195,
    SpamReportLimitExceeded = 205,
    OwnerMustAllowDMsFromAnyone = 214,
    BadAuthenticationData = 215,
    UnauthorizedResourceCredentials = 220,
    PossibleAutomatedRequest = 226,
    /**
     * @deprecated
     */
    UserMustVerifyLogin = 231,
    EndpointRetired = 251,
    CannotPerformWriteActions = 261,
    SelfMuteNotAllowed = 271,
    NotMutingSpecifiedUser = 272,
    SingleAnimatedGifAllowed = 323,
    MediaIdsValidationFailure = 324,
    MediaIdNotFound = 325,
    AccountTemporarilyLocked = 326,
    AlreadyRetweeted = 327,
    YouCannotSendMessagesToUser = 349,
    DirectMessageCharacterLimitExceeded = 354,
    SubscriptionAlreadyExists = 355,
    ReplyToUnavailableTweet = 385,
    AttachmentTypeLimitExceeded = 386,
    UrlInvalid = 407,
    CallbackUrlNotApproved = 415,
    InvalidSuspendedApplication = 416,
    OobOnlyOauthSupport = 417,
    TweetNoLongerAvailable = 421,
    TweetUnavailableForRuleViolations = 422,
    SomeTweetActionsDisabledByTwitter = 425,
    TweetAuthorRestrictedReplies = 433
}
export enum TwitterWebhookErrors {
    CouldNotAuthenticate = 32,
    Forbidden = 200,
    WebhookURIDoesNotMeetRequirements = 214,
    HighLatency = 214,
    TooManyResourcesAlreadyCreated = 214,
    AppCannotPerformWriteAccess = 261
}

//# sourceMappingURL=types.d.ts.map
