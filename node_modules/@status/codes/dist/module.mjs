
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
var $397b251010ad2284$exports = {};

$parcel$export($397b251010ad2284$exports, "Apache", () => $397b251010ad2284$export$a18582a33798b099);
var $397b251010ad2284$export$a18582a33798b099 = /*#__PURE__*/ function(Apache) {
    Apache[Apache["Continue"] = 100] = "Continue";
    Apache[Apache["SwitchingProtocols"] = 101] = "SwitchingProtocols";
    Apache[Apache["Processing"] = 102] = "Processing";
    Apache[Apache["Ok"] = 200] = "Ok";
    Apache[Apache["Created"] = 201] = "Created";
    Apache[Apache["Accepted"] = 202] = "Accepted";
    Apache[Apache["NonAuthoritativeInformation"] = 203] = "NonAuthoritativeInformation";
    Apache[Apache["NoContent"] = 204] = "NoContent";
    Apache[Apache["ResetContent"] = 205] = "ResetContent";
    Apache[Apache["PartialContent"] = 206] = "PartialContent";
    Apache[Apache["MultiStatus"] = 207] = "MultiStatus";
    Apache[Apache["AlreadyReported"] = 208] = "AlreadyReported";
    Apache[Apache["ImUsed"] = 226] = "ImUsed";
    Apache[Apache["MultipleChoices"] = 300] = "MultipleChoices";
    Apache[Apache["MovedPermanently"] = 301] = "MovedPermanently";
    Apache[Apache["Found"] = 302] = "Found";
    Apache[Apache["SeeOther"] = 303] = "SeeOther";
    Apache[Apache["NotModified"] = 304] = "NotModified";
    Apache[Apache["UseProxy"] = 305] = "UseProxy";
    Apache[Apache["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    Apache[Apache["PermanentRedirect"] = 308] = "PermanentRedirect";
    Apache[Apache["BadRequest"] = 400] = "BadRequest";
    Apache[Apache["Unauthorized"] = 401] = "Unauthorized";
    Apache[Apache["PaymentRequired"] = 402] = "PaymentRequired";
    Apache[Apache["Forbidden"] = 403] = "Forbidden";
    Apache[Apache["NotFound"] = 404] = "NotFound";
    Apache[Apache["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    Apache[Apache["NotAcceptable"] = 406] = "NotAcceptable";
    Apache[Apache["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    Apache[Apache["RequestTimeout"] = 408] = "RequestTimeout";
    Apache[Apache["Conflict"] = 409] = "Conflict";
    Apache[Apache["Gone"] = 410] = "Gone";
    Apache[Apache["LengthRequired"] = 411] = "LengthRequired";
    Apache[Apache["PreconditionFailed"] = 412] = "PreconditionFailed";
    Apache[Apache["RequestEntityTooLarge"] = 413] = "RequestEntityTooLarge";
    Apache[Apache["RequestUriTooLong"] = 414] = "RequestUriTooLong";
    Apache[Apache["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";
    Apache[Apache["RequestedRangeNotSatisfiable"] = 416] = "RequestedRangeNotSatisfiable";
    Apache[Apache["ExpectationFailed"] = 417] = "ExpectationFailed";
    Apache[Apache["ImATeapot"] = 418] = "ImATeapot";
    Apache[Apache["MisdirectedRequest"] = 421] = "MisdirectedRequest";
    Apache[Apache["UnprocessableEntity"] = 422] = "UnprocessableEntity";
    Apache[Apache["Locked"] = 423] = "Locked";
    Apache[Apache["FailedDependency"] = 424] = "FailedDependency";
    Apache[Apache["UpgradeRequired"] = 426] = "UpgradeRequired";
    Apache[Apache["PreconditionRequired"] = 428] = "PreconditionRequired";
    Apache[Apache["TooManyRequests"] = 429] = "TooManyRequests";
    Apache[Apache["RequestHeaderFieldsTooLarge"] = 431] = "RequestHeaderFieldsTooLarge";
    Apache[Apache["UnavailableForLegalReasons"] = 451] = "UnavailableForLegalReasons";
    Apache[Apache["InternalServerError"] = 500] = "InternalServerError";
    Apache[Apache["NotImplemented"] = 501] = "NotImplemented";
    Apache[Apache["BadGateway"] = 502] = "BadGateway";
    Apache[Apache["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    Apache[Apache["GatewayTimeout"] = 504] = "GatewayTimeout";
    Apache[Apache["HttpVersionNotSupported"] = 505] = "HttpVersionNotSupported";
    Apache[Apache["VariantAlsoNegotiates"] = 506] = "VariantAlsoNegotiates";
    Apache[Apache["InsufficientStorage"] = 507] = "InsufficientStorage";
    Apache[Apache["LoopDetected"] = 508] = "LoopDetected";
    Apache[Apache["NotExtended"] = 510] = "NotExtended";
    Apache[Apache["NetworkAuthenticationRequired"] = 511] = "NetworkAuthenticationRequired";
    return Apache;
}({});


var $b7a524d8fcba929f$exports = {};

$parcel$export($b7a524d8fcba929f$exports, "Auth0", () => $b7a524d8fcba929f$export$a1fdd30bb1a4d2c9);
/**
 * @see https://auth0.com/docs/api/authentication#standard-error-responses
 */ var $b7a524d8fcba929f$export$a1fdd30bb1a4d2c9 = /*#__PURE__*/ function(Auth0) {
    Auth0[Auth0["BadRequest"] = 400] = "BadRequest";
    Auth0[Auth0["Unauthorized"] = 401] = "Unauthorized";
    Auth0[Auth0["Forbidden"] = 403] = "Forbidden";
    Auth0[Auth0["NotFound"] = 404] = "NotFound";
    Auth0[Auth0["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    Auth0[Auth0["TooManyRequests"] = 429] = "TooManyRequests";
    Auth0[Auth0["InternalServerError"] = 500] = "InternalServerError";
    Auth0[Auth0["NotImplemented"] = 501] = "NotImplemented";
    Auth0[Auth0["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    return Auth0;
}({});


var $fbd20af70c3692ac$exports = {};

$parcel$export($fbd20af70c3692ac$exports, "Braintree", () => $fbd20af70c3692ac$export$5ddd4bd7159bb4dc);
/**
 * @see https://articles.braintreepayments.com/control-panel/transactions/declines#authorization-decline-codes
 */ var $fbd20af70c3692ac$export$5ddd4bd7159bb4dc = /*#__PURE__*/ function(Braintree) {
    Braintree[Braintree["DoNotHonor"] = 2000] = "DoNotHonor";
    Braintree[Braintree["InsufficientFunds"] = 2001] = "InsufficientFunds";
    Braintree[Braintree["LimitExceeded"] = 2002] = "LimitExceeded";
    Braintree[Braintree["CardholdersActivityLimitExceeded"] = 2003] = "CardholdersActivityLimitExceeded";
    Braintree[Braintree["ExpiredCard"] = 2004] = "ExpiredCard";
    Braintree[Braintree["InvalidCreditCardNumber"] = 2005] = "InvalidCreditCardNumber";
    Braintree[Braintree["InvalidExpirationDate"] = 2006] = "InvalidExpirationDate";
    Braintree[Braintree["NoAccount"] = 2007] = "NoAccount";
    Braintree[Braintree["CreditCardLengthError"] = 2008] = "CreditCardLengthError";
    Braintree[Braintree["NoSuchIssuer"] = 2009] = "NoSuchIssuer";
    Braintree[Braintree["CardIssuerDeclinedCVV"] = 2010] = "CardIssuerDeclinedCVV";
    Braintree[Braintree["VoiceAuthorizationRequired"] = 2011] = "VoiceAuthorizationRequired";
    Braintree[Braintree["ProcessorDeclinedPossibleLostCard"] = 2012] = "ProcessorDeclinedPossibleLostCard";
    Braintree[Braintree["ProcessorDeclinedPossibleStolenCard"] = 2013] = "ProcessorDeclinedPossibleStolenCard";
    Braintree[Braintree["ProcessorDeclinedFraudSuspected"] = 2014] = "ProcessorDeclinedFraudSuspected";
    Braintree[Braintree["TransactionNotAllowed"] = 2015] = "TransactionNotAllowed";
    Braintree[Braintree["DuplicateTransaction"] = 2016] = "DuplicateTransaction";
    Braintree[Braintree["CardholderStoppedBilling"] = 2017] = "CardholderStoppedBilling";
    Braintree[Braintree["CardholderStoppedAllBilling"] = 2018] = "CardholderStoppedAllBilling";
    Braintree[Braintree["InvalidTransaction"] = 2019] = "InvalidTransaction";
    Braintree[Braintree["Violation"] = 2020] = "Violation";
    Braintree[Braintree["SecurityViolation"] = 2021] = "SecurityViolation";
    Braintree[Braintree["DeclinedUpdatedCardholderAvailable"] = 2022] = "DeclinedUpdatedCardholderAvailable";
    Braintree[Braintree["ProcessorDoesNotSupportThisFeature"] = 2023] = "ProcessorDoesNotSupportThisFeature";
    Braintree[Braintree["CardTypeNotEnabled"] = 2024] = "CardTypeNotEnabled";
    Braintree[Braintree["SetUpErrorMerchant"] = 2025] = "SetUpErrorMerchant";
    Braintree[Braintree["InvalidMerchantID"] = 2026] = "InvalidMerchantID";
    Braintree[Braintree["SetUpErrorAmount"] = 2027] = "SetUpErrorAmount";
    Braintree[Braintree["SetUpErrorHierarchy"] = 2028] = "SetUpErrorHierarchy";
    Braintree[Braintree["SetUpErrorCard"] = 2029] = "SetUpErrorCard";
    Braintree[Braintree["SetUpErrorTerminal"] = 2030] = "SetUpErrorTerminal";
    Braintree[Braintree["EncryptionError"] = 2031] = "EncryptionError";
    Braintree[Braintree["SurchargeNotPermitted"] = 2032] = "SurchargeNotPermitted";
    Braintree[Braintree["InconsistentData"] = 2033] = "InconsistentData";
    Braintree[Braintree["NoActionTaken"] = 2034] = "NoActionTaken";
    Braintree[Braintree["PartialApprovalForAmountInGroupIIIVersion"] = 2035] = "PartialApprovalForAmountInGroupIIIVersion";
    Braintree[Braintree["AuthorizationCouldNotBeFound"] = 2036] = "AuthorizationCouldNotBeFound";
    Braintree[Braintree["AlreadyReversed"] = 2037] = "AlreadyReversed";
    Braintree[Braintree["ProcessorDeclined"] = 2038] = "ProcessorDeclined";
    Braintree[Braintree["InvalidAuthorizationCode"] = 2039] = "InvalidAuthorizationCode";
    Braintree[Braintree["InvalidStore"] = 2040] = "InvalidStore";
    Braintree[Braintree["DeclinedCallForApproval"] = 2041] = "DeclinedCallForApproval";
    Braintree[Braintree["InvalidClientID"] = 2042] = "InvalidClientID";
    Braintree[Braintree["ErrorDoNotRetryCallIssuer"] = 2043] = "ErrorDoNotRetryCallIssuer";
    Braintree[Braintree["DeclinedCallIssuer"] = 2044] = "DeclinedCallIssuer";
    Braintree[Braintree["InvalidMerchantNumber"] = 2045] = "InvalidMerchantNumber";
    Braintree[Braintree["Declined"] = 2046] = "Declined";
    Braintree[Braintree["CallIssuerPickUpCard"] = 2047] = "CallIssuerPickUpCard";
    Braintree[Braintree["InvalidAmount"] = 2048] = "InvalidAmount";
    Braintree[Braintree["InvalidSkuNumber"] = 2049] = "InvalidSkuNumber";
    Braintree[Braintree["InvalidCreditPlan"] = 2050] = "InvalidCreditPlan";
    Braintree[Braintree["CreditCardNumberDoesNotMatchMethodOfPayment"] = 2051] = "CreditCardNumberDoesNotMatchMethodOfPayment";
    Braintree[Braintree["CardReportedAsLostOrStolen"] = 2053] = "CardReportedAsLostOrStolen";
    Braintree[Braintree["ReversalAmountDoesNotMatchAuthorizationAmount"] = 2054] = "ReversalAmountDoesNotMatchAuthorizationAmount";
    Braintree[Braintree["InvalidTransactionDivisionNumber"] = 2055] = "InvalidTransactionDivisionNumber";
    Braintree[Braintree["TransactionAmountExceedsTheTransactionDivisionLimit"] = 2056] = "TransactionAmountExceedsTheTransactionDivisionLimit";
    Braintree[Braintree["IssuerOrCardholderHasPutARestrictionOnTheCard"] = 2057] = "IssuerOrCardholderHasPutARestrictionOnTheCard";
    Braintree[Braintree["MerchantNotMastercardSecureCodeEnabled"] = 2058] = "MerchantNotMastercardSecureCodeEnabled";
    Braintree[Braintree["AddressVerificationFailed"] = 2059] = "AddressVerificationFailed";
    Braintree[Braintree["AddressVerificationAndCardSecurityCodeFailed"] = 2060] = "AddressVerificationAndCardSecurityCodeFailed";
    Braintree[Braintree["InvalidTransactionData"] = 2061] = "InvalidTransactionData";
    Braintree[Braintree["InvalidTaxAmount"] = 2062] = "InvalidTaxAmount";
    Braintree[Braintree["PaypalBusinessAccountPreferenceResultedInTheTransactionFailing"] = 2063] = "PaypalBusinessAccountPreferenceResultedInTheTransactionFailing";
    Braintree[Braintree["InvalidCurrencyCode"] = 2064] = "InvalidCurrencyCode";
    Braintree[Braintree["RefundTimeLimitExceeded"] = 2065] = "RefundTimeLimitExceeded";
    Braintree[Braintree["PaypalBusinessAccountRestricted"] = 2066] = "PaypalBusinessAccountRestricted";
    Braintree[Braintree["AuthorizationExpired"] = 2067] = "AuthorizationExpired";
    Braintree[Braintree["PaypalBusinessAccountLockedOrClosed"] = 2068] = "PaypalBusinessAccountLockedOrClosed";
    Braintree[Braintree["PaypalBlockingDuplicateOrderIds"] = 2069] = "PaypalBlockingDuplicateOrderIds";
    Braintree[Braintree["PaypalBuyerRevokedFuturePaymentAuthorization"] = 2070] = "PaypalBuyerRevokedFuturePaymentAuthorization";
    Braintree[Braintree["PaypalPayeeAccountInvalidOrDoesNotHaveAConfirmedEmail"] = 2071] = "PaypalPayeeAccountInvalidOrDoesNotHaveAConfirmedEmail";
    Braintree[Braintree["PaypalPayeeEmailIncorrectlyFormatted"] = 2072] = "PaypalPayeeEmailIncorrectlyFormatted";
    Braintree[Braintree["PaypalValidationError"] = 2073] = "PaypalValidationError";
    Braintree[Braintree["FundingInstrumentInThePaypalAccountWasDeclinedByTheProcessorOrBank"] = 2074] = "FundingInstrumentInThePaypalAccountWasDeclinedByTheProcessorOrBank";
    Braintree[Braintree["PayerAccountIsLockedOrClosed"] = 2075] = "PayerAccountIsLockedOrClosed";
    Braintree[Braintree["PayerCannotPayForThisTransactionWithPaypal"] = 2076] = "PayerCannotPayForThisTransactionWithPaypal";
    Braintree[Braintree["TransactionRefusedDueToPaypalRiskModel"] = 2077] = "TransactionRefusedDueToPaypalRiskModel";
    Braintree[Braintree["PaypalMerchantAccountConfigurationError"] = 2079] = "PaypalMerchantAccountConfigurationError";
    Braintree[Braintree["PaypalPendingPaymentsAreNotSupported"] = 2081] = "PaypalPendingPaymentsAreNotSupported";
    Braintree[Braintree["PaypalDomesticTransactionRequired"] = 2082] = "PaypalDomesticTransactionRequired";
    Braintree[Braintree["PaypalPhoneNumberRequired"] = 2083] = "PaypalPhoneNumberRequired";
    Braintree[Braintree["PaypalTaxInfoRequired"] = 2084] = "PaypalTaxInfoRequired";
    Braintree[Braintree["PaypalPayeeBlockedTransaction"] = 2085] = "PaypalPayeeBlockedTransaction";
    Braintree[Braintree["PaypalTransactionLimitExceeded"] = 2086] = "PaypalTransactionLimitExceeded";
    Braintree[Braintree["PaypalReferenceTransactionsNotEnabledForYourAccount"] = 2087] = "PaypalReferenceTransactionsNotEnabledForYourAccount";
    Braintree[Braintree["CurrencyNotEnabledForYourPaypalSellerAccount"] = 2088] = "CurrencyNotEnabledForYourPaypalSellerAccount";
    Braintree[Braintree["PaypalPayeeEmailPermissionDeniedForThisRequest"] = 2089] = "PaypalPayeeEmailPermissionDeniedForThisRequest";
    Braintree[Braintree["PaypalAccountNotConfiguredToRefundMoreThanSettledAmount"] = 2090] = "PaypalAccountNotConfiguredToRefundMoreThanSettledAmount";
    Braintree[Braintree["CurrencyOfThisTransactionMustMatchCurrencyOfYourPaypalAccount"] = 2091] = "CurrencyOfThisTransactionMustMatchCurrencyOfYourPaypalAccount";
    Braintree[Braintree["NoDataFoundTryAnotherVerificationMethod"] = 2092] = "NoDataFoundTryAnotherVerificationMethod";
    Braintree[Braintree["PaypalPaymentMethodInvalid"] = 2093] = "PaypalPaymentMethodInvalid";
    Braintree[Braintree["PaypalPaymentAlreadyCompleted"] = 2094] = "PaypalPaymentAlreadyCompleted";
    Braintree[Braintree["PaypalRefundNotAllowedAfterPartialRefund"] = 2095] = "PaypalRefundNotAllowedAfterPartialRefund";
    Braintree[Braintree["PaypalBuyerAccountCantBeSameAsSellerAccount"] = 2096] = "PaypalBuyerAccountCantBeSameAsSellerAccount";
    Braintree[Braintree["PaypalAuthorizationAmountLimitExceeded"] = 2097] = "PaypalAuthorizationAmountLimitExceeded";
    Braintree[Braintree["PaypalAuthorizationCountLimitExceeded"] = 2098] = "PaypalAuthorizationCountLimitExceeded";
    Braintree[Braintree["CardholderAuthenticationRequired"] = 2099] = "CardholderAuthenticationRequired";
    Braintree[Braintree["PaypalChannelInitiatedBillingNotEnabled"] = 2100] = "PaypalChannelInitiatedBillingNotEnabled";
    Braintree[Braintree["ProcessorDeclinedRangeStart"] = 2101] = "ProcessorDeclinedRangeStart";
    Braintree[Braintree["ProcessorDeclinedRangeEnd"] = 2999] = "ProcessorDeclinedRangeEnd";
    Braintree[Braintree["ProcessorNetworkUnavailableTryAgain"] = 3000] = "ProcessorNetworkUnavailableTryAgain";
    Braintree[Braintree["SettlementDeclined"] = 4001] = "SettlementDeclined";
    Braintree[Braintree["AlreadyCaptured"] = 4003] = "AlreadyCaptured";
    Braintree[Braintree["AlreadyRefunded"] = 4004] = "AlreadyRefunded";
    Braintree[Braintree["PaypalRiskRejected"] = 4005] = "PaypalRiskRejected";
    Braintree[Braintree["CaptureAmountExceededAllowableLimit"] = 4006] = "CaptureAmountExceededAllowableLimit";
    Braintree[Braintree["PaypalPendingPaymentsNotSupported"] = 4018] = "PaypalPendingPaymentsNotSupported";
    Braintree[Braintree["PaypalRefundTransactionWithOpenCaseNotAllowed"] = 4019] = "PaypalRefundTransactionWithOpenCaseNotAllowed";
    Braintree[Braintree["PaypalRefundAttemptLimitReached"] = 4020] = "PaypalRefundAttemptLimitReached";
    Braintree[Braintree["PaypalRefundTransactionNotAllowed"] = 4021] = "PaypalRefundTransactionNotAllowed";
    Braintree[Braintree["PaypalRefundInvalidPartialAmount"] = 4022] = "PaypalRefundInvalidPartialAmount";
    Braintree[Braintree["PaypalRefundMerchantAccountMissingACH"] = 4023] = "PaypalRefundMerchantAccountMissingACH";
    return Braintree;
}({});


var $478338173fdf639b$exports = {};

$parcel$export($478338173fdf639b$exports, "Cloudflare", () => $478338173fdf639b$export$ee6214ab53645a0);
$parcel$export($478338173fdf639b$exports, "CloudflareHttp", () => $478338173fdf639b$export$eec954136fe00c06);
/**
 * Merge two enums into one
 * The derived will overwrite duplicate keys from base
 *
 * @export
 * @template T
 * @template R
 * @param {T} base
 * @param {R} derived
 * @returns {(T & R)}
 */ function $e2e1ea6dd3b7d2e1$export$b85554200027f673(base, derived) {
    return {
        ...base,
        ...derived
    };
}


var $d41f8f42b7b1f821$exports = {};

$parcel$export($d41f8f42b7b1f821$exports, "Http", () => $d41f8f42b7b1f821$export$2a5b27776dbece47);
$parcel$export($d41f8f42b7b1f821$exports, "HttpUnofficial", () => $d41f8f42b7b1f821$export$8301461414a0d461);
$parcel$export($d41f8f42b7b1f821$exports, "HttpExtended", () => $d41f8f42b7b1f821$export$6408e65d1a2e2cf7);

var $d41f8f42b7b1f821$export$2a5b27776dbece47 = /*#__PURE__*/ function(Http) {
    Http[Http["Continue"] = 100] = "Continue";
    Http[Http["SwitchingProtocols"] = 101] = "SwitchingProtocols";
    Http[Http["Processing"] = 102] = "Processing";
    Http[Http["EarlyHints"] = 103] = "EarlyHints";
    Http[Http["Ok"] = 200] = "Ok";
    Http[Http["Created"] = 201] = "Created";
    Http[Http["Accepted"] = 202] = "Accepted";
    Http[Http["NonAuthoritativeInformation"] = 203] = "NonAuthoritativeInformation";
    Http[Http["NoContent"] = 204] = "NoContent";
    Http[Http["ResetContent"] = 205] = "ResetContent";
    Http[Http["PartialContent"] = 206] = "PartialContent";
    Http[Http["MultiStatus"] = 207] = "MultiStatus";
    Http[Http["AlreadyReported"] = 208] = "AlreadyReported";
    Http[Http["ImUsed"] = 226] = "ImUsed";
    Http[Http["MultipleChoices"] = 300] = "MultipleChoices";
    Http[Http["MovedPermanently"] = 301] = "MovedPermanently";
    Http[Http["Found"] = 302] = "Found";
    Http[Http["SeeOther"] = 303] = "SeeOther";
    Http[Http["NotModified"] = 304] = "NotModified";
    Http[Http["UseProxy"] = 305] = "UseProxy";
    Http[Http["Unused"] = 306] = "Unused";
    Http[Http["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    Http[Http["PermanentRedirect"] = 308] = "PermanentRedirect";
    Http[Http["BadRequest"] = 400] = "BadRequest";
    Http[Http["Unauthorized"] = 401] = "Unauthorized";
    Http[Http["PaymentRequired"] = 402] = "PaymentRequired";
    Http[Http["Forbidden"] = 403] = "Forbidden";
    Http[Http["NotFound"] = 404] = "NotFound";
    Http[Http["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    Http[Http["NotAcceptable"] = 406] = "NotAcceptable";
    Http[Http["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    Http[Http["RequestTimeout"] = 408] = "RequestTimeout";
    Http[Http["Conflict"] = 409] = "Conflict";
    Http[Http["Gone"] = 410] = "Gone";
    Http[Http["LengthRequired"] = 411] = "LengthRequired";
    Http[Http["PreconditionFailed"] = 412] = "PreconditionFailed";
    Http[Http["PayloadTooLarge"] = 413] = "PayloadTooLarge";
    Http[Http["UriTooLong"] = 414] = "UriTooLong";
    Http[Http["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";
    Http[Http["RangeNotSatisfiable"] = 416] = "RangeNotSatisfiable";
    Http[Http["ExpectationFailed"] = 417] = "ExpectationFailed";
    Http[Http["ImATeapot"] = 418] = "ImATeapot";
    Http[Http["MisdirectedRequest"] = 421] = "MisdirectedRequest";
    Http[Http["UnprocessableEntity"] = 422] = "UnprocessableEntity";
    Http[Http["Locked"] = 423] = "Locked";
    Http[Http["FailedDependency"] = 424] = "FailedDependency";
    Http[Http["UpgradeRequired"] = 426] = "UpgradeRequired";
    Http[Http["PreconditionRequired"] = 428] = "PreconditionRequired";
    Http[Http["TooManyRequests"] = 429] = "TooManyRequests";
    Http[Http["RequestHeaderFieldsTooLarge"] = 431] = "RequestHeaderFieldsTooLarge";
    Http[Http["UnavailableForLegalReasons"] = 451] = "UnavailableForLegalReasons";
    Http[Http["InternalServerError"] = 500] = "InternalServerError";
    Http[Http["NotImplemented"] = 501] = "NotImplemented";
    Http[Http["BadGateway"] = 502] = "BadGateway";
    Http[Http["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    Http[Http["GatewayTimeout"] = 504] = "GatewayTimeout";
    Http[Http["HttpVersionNotSupported"] = 505] = "HttpVersionNotSupported";
    Http[Http["VariantAlsoNegotiates"] = 506] = "VariantAlsoNegotiates";
    Http[Http["InsufficientStorage"] = 507] = "InsufficientStorage";
    Http[Http["LoopDetected"] = 508] = "LoopDetected";
    Http[Http["NotExtended"] = 510] = "NotExtended";
    Http[Http["NetworkAuthenticationRequired"] = 511] = "NetworkAuthenticationRequired";
    return Http;
}({});
var $d41f8f42b7b1f821$export$8301461414a0d461 = /*#__PURE__*/ function(HttpUnofficial) {
    HttpUnofficial[HttpUnofficial["Checkpoint"] = 103] = "Checkpoint";
    HttpUnofficial[HttpUnofficial["ThisIsFine"] = 218] = "ThisIsFine";
    HttpUnofficial[HttpUnofficial["EnhanceYourCalm"] = 420] = "EnhanceYourCalm";
    HttpUnofficial[HttpUnofficial["BlockedByWindowsParentalControls"] = 450] = "BlockedByWindowsParentalControls";
    HttpUnofficial[HttpUnofficial["InvalidToken"] = 498] = "InvalidToken";
    HttpUnofficial[HttpUnofficial["TokenRequired"] = 499] = "TokenRequired";
    HttpUnofficial[HttpUnofficial["BandwidthLimitExceeded"] = 509] = "BandwidthLimitExceeded";
    HttpUnofficial[HttpUnofficial["SiteIsFrozen"] = 530] = "SiteIsFrozen";
    HttpUnofficial[HttpUnofficial["NetworkReadTimeoutError"] = 598] = "NetworkReadTimeoutError";
    return HttpUnofficial;
}({});
const $d41f8f42b7b1f821$export$6408e65d1a2e2cf7 = (0, $e2e1ea6dd3b7d2e1$export$b85554200027f673)($d41f8f42b7b1f821$export$2a5b27776dbece47, $d41f8f42b7b1f821$export$8301461414a0d461);


var $478338173fdf639b$export$ee6214ab53645a0 = /*#__PURE__*/ function(Cloudflare) {
    /**
   * 5XX Errors
   */ Cloudflare[Cloudflare["InternalServerError"] = 500] = "InternalServerError";
    Cloudflare[Cloudflare["BadGateway"] = 502] = "BadGateway";
    Cloudflare[Cloudflare["ServiceTemporarilyAvailable"] = 503] = "ServiceTemporarilyAvailable";
    Cloudflare[Cloudflare["GatewayTimeout"] = 504] = "GatewayTimeout";
    Cloudflare[Cloudflare["UnknownError"] = 520] = "UnknownError";
    Cloudflare[Cloudflare["WebServerIsDown"] = 521] = "WebServerIsDown";
    Cloudflare[Cloudflare["ConnectionTimedOut"] = 522] = "ConnectionTimedOut";
    Cloudflare[Cloudflare["OriginIsUnreachable"] = 523] = "OriginIsUnreachable";
    Cloudflare[Cloudflare["ATimeoutOccurred"] = 524] = "ATimeoutOccurred";
    Cloudflare[Cloudflare["SslHandshakeFailed"] = 525] = "SslHandshakeFailed";
    Cloudflare[Cloudflare["InvalidSslCertificate"] = 526] = "InvalidSslCertificate";
    Cloudflare[Cloudflare["RailgunError"] = 527] = "RailgunError";
    Cloudflare[Cloudflare["DnsError"] = 530] = "DnsError";
    /**
   * 1XXX Errors
   */ Cloudflare[Cloudflare["DNSProhibitedIP"] = 1000] = "DNSProhibitedIP";
    Cloudflare[Cloudflare["DNSResolutionError"] = 1001] = "DNSResolutionError";
    Cloudflare[Cloudflare["Restricted"] = 1002] = "Restricted";
    Cloudflare[Cloudflare["DirectIPAccessNotAllowed"] = 1003] = "DirectIPAccessNotAllowed";
    Cloudflare[Cloudflare["HostNotConfigured"] = 1004] = "HostNotConfigured";
    Cloudflare[Cloudflare["AccessDeniedIPBanned"] = 1006] = "AccessDeniedIPBanned";
    Cloudflare[Cloudflare["AccessDeniedIPISBanned"] = 1007] = "AccessDeniedIPISBanned";
    Cloudflare[Cloudflare["AccessDeniedIPHasBeenBanned"] = 1008] = "AccessDeniedIPHasBeenBanned";
    Cloudflare[Cloudflare["WebsiteOwnerBannedBrowserAccess"] = 1010] = "WebsiteOwnerBannedBrowserAccess";
    Cloudflare[Cloudflare["AccessDeniedHotlinkingDenied"] = 1011] = "AccessDeniedHotlinkingDenied";
    Cloudflare[Cloudflare["AccessDenied"] = 1012] = "AccessDenied";
    Cloudflare[Cloudflare["HTTPHostnameTLSHostnameMismatch"] = 1013] = "HTTPHostnameTLSHostnameMismatch";
    Cloudflare[Cloudflare["CrossUserBanned"] = 1014] = "CrossUserBanned";
    Cloudflare[Cloudflare["RateLimited"] = 1015] = "RateLimited";
    Cloudflare[Cloudflare["OriginDNSError"] = 1016] = "OriginDNSError";
    Cloudflare[Cloudflare["HostNotFound"] = 1018] = "HostNotFound";
    Cloudflare[Cloudflare["ComputeServerError"] = 1019] = "ComputeServerError";
    Cloudflare[Cloudflare["Accessdenied"] = 1020] = "Accessdenied";
    Cloudflare[Cloudflare["CheckBackLater"] = 1025] = "CheckBackLater";
    Cloudflare[Cloudflare["RenderingError"] = 1101] = "RenderingError";
    Cloudflare[Cloudflare["RenderError"] = 1102] = "RenderError";
    Cloudflare[Cloudflare["CacheConnectionLimit"] = 1200] = "CacheConnectionLimit";
    return Cloudflare;
}({});
const $478338173fdf639b$export$eec954136fe00c06 = (0, $e2e1ea6dd3b7d2e1$export$b85554200027f673)((0, $d41f8f42b7b1f821$export$2a5b27776dbece47), $478338173fdf639b$export$ee6214ab53645a0);


var $1c7db1edb1c3188d$exports = {};

$parcel$export($1c7db1edb1c3188d$exports, "FirebaseAuth", () => $1c7db1edb1c3188d$export$b737417db3c88440);
/**
 * @see https://firebase.google.com/docs/reference/js/firebase.auth.Error
 */ var $1c7db1edb1c3188d$export$b737417db3c88440 = /*#__PURE__*/ function(FirebaseAuth) {
    FirebaseAuth["AppDeleted"] = "auth/app-deleted";
    FirebaseAuth["NotAuthorized"] = "auth/app-not-authorized";
    FirebaseAuth["ArgumentError"] = "auth/argument-error";
    FirebaseAuth["InvalidApiKey"] = "auth/invalid-api-key";
    FirebaseAuth["InvalidTenantId"] = "auth/invalid-tenant-id";
    FirebaseAuth["InvalidUserToken"] = "auth/invalid-user-token";
    FirebaseAuth["NetworkRequestFailed"] = "auth/network-request-failed";
    FirebaseAuth["OperationNotAllowed"] = "auth/operation-not-allowed";
    FirebaseAuth["RequiresRecentLogin"] = "auth/requires-recent-login";
    FirebaseAuth["TooManyRequests"] = "auth/too-many-requests";
    FirebaseAuth["UnauthorizedDomain"] = "auth/unauthorized-domain";
    FirebaseAuth["UserDisabled"] = "auth/user-disabled";
    FirebaseAuth["UserTokenExpired"] = "auth/user-token-expired";
    FirebaseAuth["WebStorageUnsupported"] = "auth/web-storage-unsupported";
    return FirebaseAuth;
}({});


var $81700a681da8a66e$exports = {};

$parcel$export($81700a681da8a66e$exports, "FTP", () => $81700a681da8a66e$export$cffacb1873b09081);
var $81700a681da8a66e$export$cffacb1873b09081 = /*#__PURE__*/ function(FTP) {
    FTP[FTP["RestartMarkerReplay"] = 110] = "RestartMarkerReplay";
    FTP[FTP["ServiceReadyInNnnMinutes"] = 120] = "ServiceReadyInNnnMinutes";
    FTP[FTP["DataConnectionAlreadyOpenTransferStarting"] = 125] = "DataConnectionAlreadyOpenTransferStarting";
    FTP[FTP["FileStatusOkayAboutToOpenDataConnection"] = 150] = "FileStatusOkayAboutToOpenDataConnection";
    FTP[FTP["CommandNotImplementedSuperfluous"] = 202] = "CommandNotImplementedSuperfluous";
    FTP[FTP["SystemStatus"] = 211] = "SystemStatus";
    FTP[FTP["DirectoryStatus"] = 212] = "DirectoryStatus";
    FTP[FTP["FileStatus"] = 213] = "FileStatus";
    FTP[FTP["HelpMessage"] = 214] = "HelpMessage";
    FTP[FTP["NameSystemType"] = 215] = "NameSystemType";
    FTP[FTP["ServiceReadyForNewUser"] = 220] = "ServiceReadyForNewUser";
    FTP[FTP["ServiceClosingControlConnection"] = 221] = "ServiceClosingControlConnection";
    FTP[FTP["DataConnectionOpenNoTransferInProgress"] = 225] = "DataConnectionOpenNoTransferInProgress";
    FTP[FTP["ClosingDataConnectionRequestedFileActionSuccess"] = 226] = "ClosingDataConnectionRequestedFileActionSuccess";
    FTP[FTP["EnteringPassiveMode"] = 227] = "EnteringPassiveMode";
    FTP[FTP["EnteringLongPassiveMode"] = 228] = "EnteringLongPassiveMode";
    FTP[FTP["EnteringExtendedPassiveMode"] = 229] = "EnteringExtendedPassiveMode";
    FTP[FTP["UserLoggedInProceed"] = 230] = "UserLoggedInProceed";
    FTP[FTP["UserLoggedOutServiceTerminated"] = 231] = "UserLoggedOutServiceTerminated";
    FTP[FTP["LogoutCommandNotedWillCompleteWhenTransferDone"] = 232] = "LogoutCommandNotedWillCompleteWhenTransferDone";
    // A higher level nonstandard code created by Microsoft.
    FTP[FTP["AuthenticationMechanismAccepted"] = 234] = "AuthenticationMechanismAccepted";
    FTP[FTP["RequestedFileActionOkayCompleted"] = 250] = "RequestedFileActionOkayCompleted";
    FTP[FTP["PathnameCreated"] = 257] = "PathnameCreated";
    FTP[FTP["UserNameOkayNeedPassword"] = 331] = "UserNameOkayNeedPassword";
    FTP[FTP["NeedAccountForLogin"] = 332] = "NeedAccountForLogin";
    FTP[FTP["RequestedFileActionPendingFurtherInformation"] = 350] = "RequestedFileActionPendingFurtherInformation";
    FTP[FTP["ServiceNotAvailableClosingControlConnection"] = 421] = "ServiceNotAvailableClosingControlConnection";
    FTP[FTP["CannotOpenDataConnection"] = 425] = "CannotOpenDataConnection";
    FTP[FTP["ConnectionClosedTransferAborted"] = 426] = "ConnectionClosedTransferAborted";
    FTP[FTP["InvalidUsernameOrPassword"] = 430] = "InvalidUsernameOrPassword";
    FTP[FTP["RequestedHostUnavailable"] = 434] = "RequestedHostUnavailable";
    FTP[FTP["RequestedFileActionNotTaken"] = 450] = "RequestedFileActionNotTaken";
    FTP[FTP["RequestedActionAbortedLocalErrorInProcessing"] = 451] = "RequestedActionAbortedLocalErrorInProcessing";
    FTP[FTP["RequestedActionNotTakenInsufficientStorage"] = 452] = "RequestedActionNotTakenInsufficientStorage";
    FTP[FTP["SyntaxErrorCommandUnrecognizedCommandLineTooLong"] = 500] = "SyntaxErrorCommandUnrecognizedCommandLineTooLong";
    FTP[FTP["SyntaxErrorInParametersOrArguments"] = 501] = "SyntaxErrorInParametersOrArguments";
    FTP[FTP["CommandNotImplemented"] = 502] = "CommandNotImplemented";
    FTP[FTP["BadSequenceOfCommands"] = 503] = "BadSequenceOfCommands";
    FTP[FTP["CommandNotImplementedForThatParameter"] = 504] = "CommandNotImplementedForThatParameter";
    FTP[FTP["NotLoggedIn"] = 530] = "NotLoggedIn";
    FTP[FTP["NeedAccountForStoringFiles"] = 532] = "NeedAccountForStoringFiles";
    FTP[FTP["CouldNotConnectToServerPolicyRequiresSsl"] = 534] = "CouldNotConnectToServerPolicyRequiresSsl";
    FTP[FTP["RequestedActionNotTakenFileUnavailable"] = 550] = "RequestedActionNotTakenFileUnavailable";
    FTP[FTP["RequestedActionAbortedPageTypeUnknown"] = 551] = "RequestedActionAbortedPageTypeUnknown";
    FTP[FTP["RequestedFileActionAbortedExceededStorageAllocation"] = 552] = "RequestedFileActionAbortedExceededStorageAllocation";
    FTP[FTP["RequestedActionNotTakenFileNameNotAllowed"] = 553] = "RequestedActionNotTakenFileNameNotAllowed";
    FTP[FTP["IntegrityProtectedReply"] = 631] = "IntegrityProtectedReply";
    FTP[FTP["ConfidentialityAndIntegrityProtectedReply"] = 632] = "ConfidentialityAndIntegrityProtectedReply";
    FTP[FTP["ConfidentialityProtectedReply"] = 633] = "ConfidentialityProtectedReply";
    FTP[FTP["ConnectionResetByPeerForciblyClosedByRemoteHost"] = 10054] = "ConnectionResetByPeerForciblyClosedByRemoteHost";
    FTP[FTP["CannotConnectToRemoteServer"] = 10060] = "CannotConnectToRemoteServer";
    FTP[FTP["CannotConnectToRemoteServerActivelyRefusedByServer"] = 10061] = "CannotConnectToRemoteServerActivelyRefusedByServer";
    FTP[FTP["DirectoryNotEmpty"] = 10066] = "DirectoryNotEmpty";
    FTP[FTP["TooManyUsersServerIsFull"] = 10068] = "TooManyUsersServerIsFull";
    return FTP;
}({});



var $93b912b2c67ec327$exports = {};

$parcel$export($93b912b2c67ec327$exports, "IIS", () => $93b912b2c67ec327$export$3c84dcd7e06bf5d2);
$parcel$export($93b912b2c67ec327$exports, "IISHttp", () => $93b912b2c67ec327$export$c0ecd4a4e0919fa3);
// https://support.microsoft.com/en-us/help/943891/the-http-status-code-in-iis-7-0-iis-7-5-and-iis-8-0


var $93b912b2c67ec327$export$3c84dcd7e06bf5d2 = /*#__PURE__*/ function(IIS) {
    IIS[IIS["Continue"] = 100] = "Continue";
    IIS[IIS["SwitchingProtocols"] = 101] = "SwitchingProtocols";
    IIS[IIS["OK"] = 200] = "OK";
    IIS[IIS["Created"] = 201] = "Created";
    IIS[IIS["Accepted"] = 202] = "Accepted";
    IIS[IIS["NonauthoritativeInformation"] = 203] = "NonauthoritativeInformation";
    IIS[IIS["NoContent"] = 204] = "NoContent";
    IIS[IIS["ResetContent"] = 205] = "ResetContent";
    IIS[IIS["PartialContent"] = 206] = "PartialContent";
    IIS[IIS["MovedPermanently"] = 301] = "MovedPermanently";
    IIS[IIS["ObjectMoved"] = 302] = "ObjectMoved";
    IIS[IIS["NotModified"] = 304] = "NotModified";
    IIS[IIS["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    IIS[IIS["BadRequest"] = 400] = "BadRequest";
    IIS[IIS["InvalidDestinationHeader"] = 400.1] = "InvalidDestinationHeader";
    IIS[IIS["InvalidDepthHeader"] = 400.2] = "InvalidDepthHeader";
    IIS[IIS["InvalidIfHeader"] = 400.3] = "InvalidIfHeader";
    IIS[IIS["InvalidOverwriteHeader"] = 400.4] = "InvalidOverwriteHeader";
    IIS[IIS["InvalidTranslateHeader"] = 400.5] = "InvalidTranslateHeader";
    IIS[IIS["InvalidRequestBody"] = 400.6] = "InvalidRequestBody";
    IIS[IIS["InvalidContentLength"] = 400.7] = "InvalidContentLength";
    IIS[IIS["InvalidTimeout"] = 400.8] = "InvalidTimeout";
    IIS[IIS["InvalidLockToken"] = 400.9] = "InvalidLockToken";
    IIS[IIS["AccessDenied"] = 401] = "AccessDenied";
    IIS[IIS["LogonFailed"] = 401.1] = "LogonFailed";
    IIS[IIS["LogonFailedDueToServerConfiguration"] = 401.2] = "LogonFailedDueToServerConfiguration";
    IIS[IIS["UnauthorizedDueToACL"] = 401.3] = "UnauthorizedDueToACL";
    IIS[IIS["AuthorizationFailedByFilter"] = 401.4] = "AuthorizationFailedByFilter";
    IIS[IIS["AuthorizationFailedByISAPI_CGI"] = 401.5] = "AuthorizationFailedByISAPI_CGI";
    IIS[IIS["AccessDeniedTooManyRequestsFromClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached"] = 401.501] = "AccessDeniedTooManyRequestsFromClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached";
    IIS[IIS["ForbiddenTooManyRequestsFromSameIP_DynamicIPRestriction"] = 401.502] = "ForbiddenTooManyRequestsFromSameIP_DynamicIPRestriction";
    IIS[IIS["AccessDeniedIPAddressRestriction"] = 401.503] = "AccessDeniedIPAddressRestriction";
    IIS[IIS["AccessDeniedHostnameRestriction"] = 401.503] = "AccessDeniedHostnameRestriction";
    IIS[IIS["Forbidden"] = 403] = "Forbidden";
    IIS[IIS["ExecuteAccessForbidden"] = 403.1] = "ExecuteAccessForbidden";
    IIS[IIS["ReadAccessForbidden"] = 403.2] = "ReadAccessForbidden";
    IIS[IIS["WriteAccessForbidden"] = 403.3] = "WriteAccessForbidden";
    IIS[IIS["SSLRequired"] = 403.4] = "SSLRequired";
    IIS[IIS["SSL128Required"] = 403.5] = "SSL128Required";
    IIS[IIS["IPAddressRejected"] = 403.6] = "IPAddressRejected";
    IIS[IIS["ClientCertificateRequired"] = 403.7] = "ClientCertificateRequired";
    IIS[IIS["SiteAccessDenied"] = 403.8] = "SiteAccessDenied";
    IIS[IIS["ForbiddenTooManyClientsAreTryingToConnectToTheWebServer"] = 403.9] = "ForbiddenTooManyClientsAreTryingToConnectToTheWebServer";
    IIS[IIS["ForbiddenWebServerIsConfiguredToDenyExecuteAccess"] = 403.1] = "ForbiddenWebServerIsConfiguredToDenyExecuteAccess";
    IIS[IIS["ForbiddenPasswordHasBeenChanged"] = 403.11] = "ForbiddenPasswordHasBeenChanged";
    IIS[IIS["MapperDeniedAccess"] = 403.12] = "MapperDeniedAccess";
    IIS[IIS["ClientCertificateRevoked"] = 403.13] = "ClientCertificateRevoked";
    IIS[IIS["DirectoryListingDenied"] = 403.14] = "DirectoryListingDenied";
    IIS[IIS["ForbiddenClientAccessLicensesHaveExceededLimitsOnTheWebServer"] = 403.15] = "ForbiddenClientAccessLicensesHaveExceededLimitsOnTheWebServer";
    IIS[IIS["ClientCertificateIsUntrustedOrInvalid"] = 403.16] = "ClientCertificateIsUntrustedOrInvalid";
    IIS[IIS["ClientCertificateHasExpiredOrIsNotYetValid"] = 403.17] = "ClientCertificateHasExpiredOrIsNotYetValid";
    IIS[IIS["CannotExecuteRequestedURLInTheCurrentApplicationPool"] = 403.18] = "CannotExecuteRequestedURLInTheCurrentApplicationPool";
    IIS[IIS["CannotExecuteCGIApplicationsForTheClientInThisApplicationPool"] = 403.19] = "CannotExecuteCGIApplicationsForTheClientInThisApplicationPool";
    IIS[IIS["PassportLogonFailed"] = 403.2] = "PassportLogonFailed";
    IIS[IIS["SourceAccessDenied"] = 403.21] = "SourceAccessDenied";
    IIS[IIS["InfiniteDepthIsDenied"] = 403.22] = "InfiniteDepthIsDenied";
    IIS[IIS["ForbiddenTooManyRequestsFromClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached"] = 403.501] = "ForbiddenTooManyRequestsFromClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached";
    IIS[IIS["ForbiddenTooManyRequestsFromClientIP_DynamicIPRestrictionMaximumRequestRateLimitReached"] = 403.502] = "ForbiddenTooManyRequestsFromClientIP_DynamicIPRestrictionMaximumRequestRateLimitReached";
    IIS[IIS["ForbiddenIPAddressIncludedInTheDenyListOfIPRestriction"] = 403.503] = "ForbiddenIPAddressIncludedInTheDenyListOfIPRestriction";
    IIS[IIS["ForbiddenHostNameIncludedInTheDenyListOfIPRestriction"] = 403.504] = "ForbiddenHostNameIncludedInTheDenyListOfIPRestriction";
    IIS[IIS["NotFound"] = 404] = "NotFound";
    IIS[IIS["Notfound"] = 404] = "Notfound";
    IIS[IIS["SiteNotFound"] = 404.1] = "SiteNotFound";
    IIS[IIS["ISAPIOrCGIRestriction"] = 404.2] = "ISAPIOrCGIRestriction";
    IIS[IIS["MIMETypeRestriction"] = 404.3] = "MIMETypeRestriction";
    IIS[IIS["NoHandlerConfigured"] = 404.4] = "NoHandlerConfigured";
    IIS[IIS["DeniedByRequestFilteringConfiguration"] = 404.5] = "DeniedByRequestFilteringConfiguration";
    IIS[IIS["VerbDenied"] = 404.6] = "VerbDenied";
    IIS[IIS["FileExtensionDenied"] = 404.7] = "FileExtensionDenied";
    IIS[IIS["HiddenNamespace"] = 404.8] = "HiddenNamespace";
    IIS[IIS["FileAttributeHidden"] = 404.9] = "FileAttributeHidden";
    IIS[IIS["RequestHeaderTooLong"] = 404.1] = "RequestHeaderTooLong";
    IIS[IIS["RequestContainsDoubleEscapeSequence"] = 404.11] = "RequestContainsDoubleEscapeSequence";
    IIS[IIS["RequestContainsHighBitCharacters"] = 404.12] = "RequestContainsHighBitCharacters";
    IIS[IIS["ContentLengthTooLarge"] = 404.13] = "ContentLengthTooLarge";
    IIS[IIS["RequestURLTooLong"] = 404.14] = "RequestURLTooLong";
    IIS[IIS["QueryStringTooLong"] = 404.15] = "QueryStringTooLong";
    IIS[IIS["DAVRequestSentToTheStaticFileHandler"] = 404.16] = "DAVRequestSentToTheStaticFileHandler";
    IIS[IIS["DynamicContentMappedToTheStaticFileHandlerViaAWildcardMIMEMapping"] = 404.17] = "DynamicContentMappedToTheStaticFileHandlerViaAWildcardMIMEMapping";
    IIS[IIS["QuerystringSequenceDenied"] = 404.18] = "QuerystringSequenceDenied";
    IIS[IIS["DeniedByFilteringRule"] = 404.19] = "DeniedByFilteringRule";
    IIS[IIS["TooManyURLSegment"] = 404.2] = "TooManyURLSegment";
    IIS[IIS["NotFoundTooManyRequestsFromTheSameClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached"] = 404.501] = "NotFoundTooManyRequestsFromTheSameClientIP_DynamicIPRestrictionConcurrentRequestRateLimitReached";
    IIS[IIS["NotFoundTooManyRequestsFromTheSameClientIP_DynamicIPRestrictionMaximumRequestRateLimitReached"] = 404.502] = "NotFoundTooManyRequestsFromTheSameClientIP_DynamicIPRestrictionMaximumRequestRateLimitReached";
    IIS[IIS["NotFoundTheIPAddressIsIncludedInTheDenyListOfIPRestriction"] = 404.503] = "NotFoundTheIPAddressIsIncludedInTheDenyListOfIPRestriction";
    IIS[IIS["NotFoundTheHostNameIsIncludedInTheDenyListOfIPRestriction"] = 404.504] = "NotFoundTheHostNameIsIncludedInTheDenyListOfIPRestriction";
    IIS[IIS["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    IIS[IIS["ClientBrowserDoesNotAcceptTheMIMETypeOfTheRequestedPage"] = 406] = "ClientBrowserDoesNotAcceptTheMIMETypeOfTheRequestedPage";
    IIS[IIS["RequestTimedOut"] = 408] = "RequestTimedOut";
    IIS[IIS["PreconditionFailed"] = 412] = "PreconditionFailed";
    IIS[IIS["InternalServerError"] = 500] = "InternalServerError";
    IIS[IIS["ModuleOrISAPIErrorOccurred"] = 500] = "ModuleOrISAPIErrorOccurred";
    IIS[IIS["ApplicationIsShuttingDownOnTheWebServer"] = 500.11] = "ApplicationIsShuttingDownOnTheWebServer";
    IIS[IIS["ApplicationIsBusyRestartingOnTheWebServer"] = 500.12] = "ApplicationIsBusyRestartingOnTheWebServer";
    IIS[IIS["WebServerIsTooBusy"] = 500.13] = "WebServerIsTooBusy";
    IIS[IIS["DirectRequestsForGlobalAsaxAreNotAllowed"] = 500.15] = "DirectRequestsForGlobalAsaxAreNotAllowed";
    IIS[IIS["ConfigurationDataIsInvalid"] = 500.19] = "ConfigurationDataIsInvalid";
    IIS[IIS["ModuleNotRecognized"] = 500.21] = "ModuleNotRecognized";
    IIS[IIS["AnASPNETHttpModulesConfigurationDoesNotApplyInManagedPipelineMode"] = 500.22] = "AnASPNETHttpModulesConfigurationDoesNotApplyInManagedPipelineMode";
    IIS[IIS["AnASPNETHttpHandlersConfigurationDoesNotApplyInManagedPipelineMode"] = 500.23] = "AnASPNETHttpHandlersConfigurationDoesNotApplyInManagedPipelineMode";
    IIS[IIS["AnASPNETImpersonationConfigurationDoesNotApplyInManagedPipelineMode"] = 500.24] = "AnASPNETImpersonationConfigurationDoesNotApplyInManagedPipelineMode";
    IIS[IIS["RewriteErrorDuringRQ_BEGIN_REQUESTNotificationHandling"] = 500.5] = "RewriteErrorDuringRQ_BEGIN_REQUESTNotificationHandling";
    IIS[IIS["RewriteErrorDuringGL_PRE_BEGIN_REQUESTNotificationHandling"] = 500.51] = "RewriteErrorDuringGL_PRE_BEGIN_REQUESTNotificationHandling";
    IIS[IIS["RewriteErrorDuringRQ_SEND_RESPONSENotificationHandling"] = 500.52] = "RewriteErrorDuringRQ_SEND_RESPONSENotificationHandling";
    IIS[IIS["RewriteErrorDuringRQ_RELEASE_REQUEST_STATENotificationHandling"] = 500.53] = "RewriteErrorDuringRQ_RELEASE_REQUEST_STATENotificationHandling";
    IIS[IIS["InternalASPError"] = 500.1] = "InternalASPError";
    IIS[IIS["HeaderValuesSpecifyUnimplementedConfiguration"] = 501] = "HeaderValuesSpecifyUnimplementedConfiguration";
    IIS[IIS["InvalidGatewayOrProxyResponse"] = 502] = "InvalidGatewayOrProxyResponse";
    IIS[IIS["CGIApplicationTimeout"] = 502.1] = "CGIApplicationTimeout";
    IIS[IIS["BadGatewayPrematureExit"] = 502.2] = "BadGatewayPrematureExit";
    IIS[IIS["BadGatewayForwarderConnectionErrorARR"] = 502.3] = "BadGatewayForwarderConnectionErrorARR";
    IIS[IIS["BadGatewayNoServerARR"] = 502.4] = "BadGatewayNoServerARR";
    IIS[IIS["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    IIS[IIS["ApplicationPoolUnavailable"] = 503] = "ApplicationPoolUnavailable";
    IIS[IIS["ConcurrentRequestLimitExceeded"] = 503.2] = "ConcurrentRequestLimitExceeded";
    IIS[IIS["ASPNETQueueFull"] = 503.3] = "ASPNETQueueFull";
    IIS[IIS["FastCGIQueueFull"] = 503.4] = "FastCGIQueueFull";
    return IIS;
}({});
const $93b912b2c67ec327$export$c0ecd4a4e0919fa3 = (0, $e2e1ea6dd3b7d2e1$export$b85554200027f673)((0, $d41f8f42b7b1f821$export$2a5b27776dbece47), $93b912b2c67ec327$export$3c84dcd7e06bf5d2);


var $e85e4b6c3a8acbca$exports = {};

$parcel$export($e85e4b6c3a8acbca$exports, "IRC", () => $e85e4b6c3a8acbca$export$33bb629b441105bc);
// https://www.alien.net.au/irc/irc2numerics.html
var $e85e4b6c3a8acbca$export$33bb629b441105bc = /*#__PURE__*/ function(IRC) {
    /**
   * The first message sent after client registration. The text used varies widely
   */ IRC["RPL_WELCOME"] = "001";
    /**
   * @todo defined this constant
   */ IRC["RPL_YOURHOST"] = "002";
    /**
   * @todo defined this constant
   */ IRC["RPL_CREATED"] = "003";
    /**
   * @todo defined this constant
   */ IRC["RPL_MYINFO"] = "004";
    /**
   * @todo defined this constant
   */ IRC["RPL_ISUPPORT"] = "005";
    /**
   * @todo defined this constant
   */ IRC["RPL_MAP"] = "006";
    /**
   * @todo defined this constant
   */ IRC["RPL_MAPEND"] = "007";
    /**
   * Used to indicate the nickname parameter supplied to a command is
   * currently unused.
   */ IRC["ERR_NOSUCHNICK"] = "401";
    /**
   * Used to indicate the server name given currently doesn't exist.
   */ IRC["ERR_NOSUCHSERVER"] = "402";
    /**
   * Used to indicate the given channel name is invalid.
   */ IRC["ERR_NOSUCHCHANNEL"] = "403";
    /**
   * Sent to a user who is either
   *  - not on a channel which is mode +n
   *  - not a chanop (or mode +v) on a channel which has mode +m set
   *    and is trying to send a PRIVMSG message to that channel.
   */ IRC["ERR_CANNOTSENDTOCHAN"] = "404";
    /**
   * Sent to a user when they have joined the maximum number of allowed
   * channels and they try to join another channel.
   */ IRC["ERR_TOOMANYCHANNELS"] = "405";
    /**
   * Returned by WHOWAS to indicate there is no history information for
   * that nickname.
   */ IRC["ERR_WASNOSUCHNICK"] = "406";
    /**
   * Returned to a client which is attempting to send PRIVMSG/NOTICE
   * using the user@host destination format and for a user@host which has
   * several occurrences.
   */ IRC["ERR_TOOMANYTARGETS"] = "407";
    /**
   * PING or PONG message missing the originator parameter which is
   * required since these commands must work without valid prefixes.
   */ IRC["ERR_NOORIGIN"] = "409";
    /**
   * @todo Document this constant
   */ IRC["ERR_NORECIPIENT"] = "411";
    /**
   * @todo Document this constant
   */ IRC["ERR_NOTEXTTOSEND"] = "412";
    /**
   * @todo Document this constant
   */ IRC["ERR_NOTOPLEVEL"] = "413";
    /**
   * 412 - 414 are returned by PRIVMSG to indicate that the message
   * wasn't delivered for some reason. ERR_NOTOPLEVEL and
   * ERR_WILDTOPLEVEL are errors that are returned when an invalid use of
   * 'PRIVMSG $server' or 'PRIVMSG *host' is attempted.
   */ IRC["ERR_WILDTOPLEVEL"] = "414";
    /**
   * Returned to a registered client to indicate that the command sent is
   * unknown by the server.
   */ IRC["ERR_UNKNOWNCOMMAND"] = "421";
    /**
   * Server's MOTD file could not be opened by the server.
   */ IRC["ERR_NOMOTD"] = "422";
    /**
   * Returned by a server in response to an ADMIN message when there is
   * an error in finding the appropriate information.
   */ IRC["ERR_NOADMININFO"] = "423";
    /**
   * Generic error message used to report a failed file operation during
   * the processing of a message.
   */ IRC["ERR_FILEERROR"] = "424";
    /**
   * Returned when a nickname parameter expected for a command and isn't
   * found.
   */ IRC["ERR_NONICKNAMEGIVEN"] = "431";
    /**
   * Returned after receiving a NICK message which contains characters
   * which do not fall in the defined set.
   */ IRC["ERR_ERRONEUSNICKNAME"] = "432";
    /**
   * Returned when a NICK message is processed that results in an attempt
   * to change to a currently existing nickname.
   */ IRC["ERR_NICKNAMEINUSE"] = "433";
    /**
   * Returned by a server to a client when it detects a nickname
   * collision (registered of a NICK that already exists by another
   * server).
   */ IRC["ERR_NICKCOLLISION"] = "436";
    /**
   * Returned by the server to indicate that the target user of the
   * command is not on the given channel.
   */ IRC["ERR_USERNOTINCHANNEL"] = "441";
    /**
   * Returned by the server whenever a client tries to perform a channel
   * effecting command for which the client isn't a member.
   */ IRC["ERR_NOTONCHANNEL"] = "442";
    /**
   * Returned when a client tries to invite a user to a channel they are
   * already on.
   */ IRC["ERR_USERONCHANNEL"] = "443";
    /**
   * Returned by the summon after a SUMMON command for a user was unable
   * to be performed since they were not logged in.
   */ IRC["ERR_NOLOGIN"] = "444";
    /**
   * Returned as a response to the SUMMON command. Must be returned by
   * any server which does not implement it.
   */ IRC["ERR_SUMMONDISABLED"] = "445";
    /**
   * Returned as a response to the USERS command. Must be returned by any
   * server which does not implement it.
   */ IRC["ERR_USERSDISABLED"] = "446";
    /**
   * Returned by the server to indicate that the client must be
   * registered before the server will allow it to be parsed in detail.
   */ IRC["ERR_NOTREGISTERED"] = "451";
    /**
   * Returned by the server by numerous commands to indicate to the
   * client that it didn't supply enough parameters.
   */ IRC["ERR_NEEDMOREPARAMS"] = "461";
    /**
   * Returned by the server to any link which tries to change part of the
   * registered details (such as password or user details from second
   * USER message).
   */ IRC["ERR_ALREADYREGISTRED"] = "462";
    /**
   * Returned to a client which attempts to register with a server which
   * does not been setup to allow connections from the host the attempted
   * connection is tried.
   */ IRC["ERR_NOPERMFORHOST"] = "463";
    /**
   * Returned to indicate a failed attempt at registering a connection
   * for which a password was required and was either not given or
   * incorrect.
   */ IRC["ERR_PASSWDMISMATCH"] = "464";
    /**
   * Returned after an attempt to connect and register yourself with a
   * server which has been setup to explicitly deny connections to you.
   */ IRC["ERR_YOUREBANNEDCREEP"] = "465";
    /**
   * @todo Document this constant
   */ IRC["ERR_KEYSET"] = "467";
    /**
   * @todo Document this constant
   */ IRC["ERR_CHANNELISFULL"] = "471";
    /**
   * @todo Document this constant
   */ IRC["ERR_UNKNOWNMODE"] = "472";
    /**
   * @todo Document this constant
   */ IRC["ERR_INVITEONLYCHAN"] = "473";
    /**
   * @todo Document this constant
   */ IRC["ERR_BANNEDFROMCHAN"] = "474";
    /**
   * @todo Document this constant
   */ IRC["ERR_BADCHANNELKEY"] = "475";
    /**
   * Any command requiring operator privileges to operate must return
   * this error to indicate the attempt was unsuccessful.
   */ IRC["ERR_NOPRIVILEGES"] = "481";
    /**
   * Any command requiring 'chanop' privileges (such as MODE messages)
   * must return this error if the client making the attempt is not a
   * chanop on the specified channel.
   */ IRC["ERR_CHANOPRIVSNEEDED"] = "482";
    /**
   * Any attempts to use the KILL command on a server are to be refused
   * and this error returned directly to the client.
   */ IRC["ERR_CANTKILLSERVER"] = "483";
    /**
   * If a client sends an OPER message and the server has not been
   * configured to allow connections from the client's host as an
   * 'operator', this error must be returned.
   */ IRC["ERR_NOOPERHOST"] = "491";
    /**
   * Returned by the server to indicate that a MODE message was sent with
   * a nickname parameter and that the a mode flag sent was not
   * recognized.
   */ IRC["ERR_UMODEUNKNOWNFLAG"] = "501";
    /**
   * Error sent to any user trying to view or change the user mode for a
   * user other than themselves.
   */ IRC["ERR_USERSDONTMATCH"] = "502";
    /**
   * @todo Document this constant
   */ IRC["QUOTE_PONG"] = "513";
    /**
   * @todo Document this constant
   */ IRC["RPL_NONE"] = "300";
    /**
   * RPL_AWAY is sent to any client sending a PRIVMSG to a client which
   * is away. RPL_AWAY is only sent by the server to which the client is
   * connected.
   */ IRC["RPL_AWAY"] = "301";
    /**
   * Reply format used by USERHOST to list replies to the query list.
   */ IRC["RPL_USERHOST"] = "302";
    /**
   * Reply format used by ISON to list replies to the query list.
   */ IRC["RPL_ISON"] = "303";
    /**
   * Replies RPL_UNAWAY and RPL_NOWAWAY are sent when the client removes
   * and sets an AWAY message
   */ IRC["RPL_UNAWAY"] = "305";
    /**
   * Replies RPL_UNAWAY and RPL_NOWAWAY are sent when the client removes
   * and sets an AWAY message
   */ IRC["RPL_NOWAWAY"] = "306";
    /**
   * @todo Document this constant
   */ IRC["RPL_WHOISUSER"] = "311";
    /**
   * @todo Document this constant
   */ IRC["RPL_WHOISSERVER"] = "312";
    /**
   * @todo Document this constant
   */ IRC["RPL_WHOISOPERATOR"] = "313";
    /**
   * @todo Document this constant
   */ IRC["RPL_WHOISIDLE"] = "317";
    /**
   * @todo Document this constant
   */ IRC["RPL_ENDOFWHOIS"] = "318";
    /**
   * Replies 311 - '313', 317 - 319 are all replies generated in response
   * to a WHOIS message. Given that there are enough parameters 'present',
   * the answering server must either formulate a reply out of the above
   * numerics (if the query nick is found) or return an error reply. The
   * '*' in RPL_WHOISUSER is there as the literal character and not as a
   * wild card. For each reply 'set', only RPL_WHOISCHANNELS may appear
   * more than once (for long lists of channel names). The '@' and '+'
   * characters next to the channel name indicate whether a client is a
   * channel operator or has been granted permission to speak on a
   * moderated channel. The RPL_ENDOFWHOIS reply is used to mark the end
   * of processing a WHOIS message.
   */ IRC["RPL_WHOISCHANNELS"] = "319";
    /**
   * @todo Document this constant
   */ IRC["RPL_WHOWASUSER"] = "314";
    /**
   * When replying to a WHOWAS 'message', a server must use the replies
   * 'RPL_WHOWASUSER', RPL_WHOISSERVER or ERR_WASNOSUCHNICK for each
   * nickname in the presented list. At the end of all reply 'batches',
   * there must be RPL_ENDOFWHOWAS (even if there was only one reply and
   * it was an error).
   */ IRC["RPL_ENDOFWHOWAS"] = "369";
    /**
   * @todo Document this constant
   */ IRC["RPL_LISTSTART"] = "321";
    /**
   * @todo Document this constant
   */ IRC["RPL_LIST"] = "322";
    /**
   * Replies 'RPL_LISTSTART', 'RPL_LIST', RPL_LISTEND mark the 'start', actual
   * replies with data and end of the server's response to a LIST
   * command. If there are no channels available to 'return', only the
   * start and end reply must be sent.
   */ IRC["RPL_LISTEND"] = "323";
    /**
   * @todo Document this constant
   */ IRC["RPL_CHANNELMODEIS"] = "324";
    /**
   * @todo Document this constant
   */ IRC["RPL_NOTOPIC"] = "331";
    /**
   * When sending a TOPIC message to determine the channel 'topic', one of
   * two replies is sent. If the topic is 'set', RPL_TOPIC is sent back
   * else RPL_NOTOPIC.
   */ IRC["RPL_TOPIC"] = "332";
    /**
   * Returned by the server to indicate that the attempted INVITE message
   * was successful and is being passed onto the end client.
   */ IRC["RPL_INVITING"] = "341";
    /**
   * Returned by a server answering a SUMMON message to indicate that it
   * is summoning that user.
   */ IRC["RPL_SUMMONING"] = "342";
    /**
   * Reply by the server showing its version details. The version
   * is the version of the software being used (including any patch level
   * revisions) and the debug level is used to indicate if the
   * server is running in 'debug mode'.
   *
   * The 'comments' field may contain any comments about the version or
   * further version details.
   */ IRC["RPL_VERSION"] = "351";
    /**
   * @todo Document this constant
   */ IRC["RPL_WHOREPLY"] = "352";
    /**
   * The RPL_WHOREPLY and RPL_ENDOFWHO pair are used to answer a WHO
   * message. The RPL_WHOREPLY is only sent if there is an appropriate
   * match to the WHO query. If there is a list of parameters supplied
   * with a WHO 'message', a RPL_ENDOFWHO must be sent after processing
   * each list item with name being the item.
   */ IRC["RPL_ENDOFWHO"] = "315";
    /**
   * @todo Document this constant
   */ IRC["RPL_NAMREPLY"] = "353";
    /**
   * @todo Document this constant
   */ IRC["RPL_NAMEREPLY"] = "RPL_NAMREPLY";
    /**
   * @todo Document this constant
   */ IRC["RPL_WHOSPCRPL"] = "354";
    /**
   * To reply to a NAMES 'message', a reply pair consisting of RPL_NAMREPLY
   * and RPL_ENDOFNAMES is sent by the server back to the client. If
   * there is no channel found as in the 'query', then only RPL_ENDOFNAMES
   * is returned. The exception to this is when a NAMES message is sent
   * with no parameters and all visible channels and contents are sent
   * back in a series of RPL_NAMEREPLY messages with a RPL_ENDOFNAMES to
   * mark the end.
   */ IRC["RPL_ENDOFNAMES"] = "366";
    /**
   * @todo Document this constant
   */ IRC["RPL_LINKS"] = "364";
    /**
   * In replying to the LINKS 'message', a server must send replies back
   * using the RPL_LINKS numeric and mark the end of the list using an
   * RPL_ENDOFLINKS reply.
   */ IRC["RPL_ENDOFLINKS"] = "365";
    /**
   * @todo Document this constant
   */ IRC["RPL_BANLIST"] = "367";
    /**
   * When listing the active 'bans' for a given 'channel', a server is
   * required to send the list back using the RPL_BANLIST and
   * RPL_ENDOFBANLIST messages. A separate RPL_BANLIST is sent for each
   * active ban id. After the ban ids have been listed (or if none present)
   * a RPL_ENDOFBANLIST must be sent.
   */ IRC["RPL_ENDOFBANLIST"] = "368";
    /**
   * @todo Document this constant
   */ IRC["RPL_INFO"] = "371";
    /**
   * A server responding to an INFO message is required to send all its
   * 'info' in a series of RPL_INFO messages with a RPL_ENDOFINFO reply
   * to indicate the end of the replies.
   */ IRC["RPL_ENDOFINFO"] = "374";
    /**
   * @todo Document this constant
   */ IRC["RPL_MOTDSTART"] = "375";
    /**
   * @todo Document this constant
   */ IRC["RPL_MOTD"] = "372";
    /**
   * When responding to the MOTD message and the MOTD file is 'found', the
   * file is displayed line by 'line', with each line no longer than 80
   * 'characters', using RPL_MOTD format replies. These should be
   * surrounded by a RPL_MOTDSTART (before the RPL_MOTDs) and an
   * RPL_ENDOFMOTD (after).
   */ IRC["RPL_ENDOFMOTD"] = "376";
    /**
   * RPL_YOUREOPER is sent back to a client which has just successfully
   * issued an OPER message and gained operator status.
   */ IRC["RPL_YOUREOPER"] = "381";
    /**
   * If the REHASH option is used and an operator sends a REHASH 'message',
   * an RPL_REHASHING is sent back to the operator.
   */ IRC["RPL_REHASHING"] = "382";
    /**
   * @todo Document this constant
   */ IRC["RPL_QLIST"] = "386";
    /**
   * @todo Document this constant
   */ IRC["RPL_ENDOFQLIST"] = "387";
    /**
   * When replying to the TIME 'message', a server must send the reply
   * using the RPL_TIME format above. The string showing the time need
   * only contain the correct day and time there. There is no further
   * requirement for the time string.
   */ IRC["RPL_TIME"] = "391";
    /**
   * @todo Document this constant
   */ IRC["RPL_USERSSTART"] = "392";
    /**
   * @todo Document this constant
   */ IRC["RPL_USERS"] = "393";
    /**
   * @todo Document this constant
   */ IRC["RPL_ENDOFUSERS"] = "394";
    /**
   * If the USERS message is handled by a 'server', the replies
   * 'RPL_USERSTART', 'RPL_USERS', RPL_ENDOFUSERS and RPL_NOUSERS are used.
   * RPL_USERSSTART must be sent 'first', following by either a sequence of
   * RPL_USERS or a single RPL_NOUSER. Following this is RPL_ENDOFUSERS.
   */ IRC["RPL_NOUSERS"] = "395";
    /**
   * @todo Document this constant
   */ IRC["RPL_TRACELINK"] = "200";
    /**
   * @todo Document this constant
   */ IRC["RPL_TRACECONNECTING"] = "201";
    /**
   * @todo Document this constant
   */ IRC["RPL_TRACEHANDSHAKE"] = "202";
    /**
   * @todo Document this constant
   */ IRC["RPL_TRACEUNKNOWN"] = "203";
    /**
   * @todo Document this constant
   */ IRC["RPL_TRACEOPERATOR"] = "204";
    /**
   * @todo Document this constant
   */ IRC["RPL_TRACEUSER"] = "205";
    /**
   * @todo Document this constant
   */ IRC["RPL_TRACESERVER"] = "206";
    /**
   * @todo Document this constant
   */ IRC["RPL_TRACESERVICE"] = "207";
    /**
   * @todo Document this constant
   */ IRC["RPL_TRACENEWTYPE"] = "208";
    /**
   * @todo Document this constant
   */ IRC["RPL_TRACECLASS"] = "209";
    /**
   * The RPL_TRACE* are all returned by the server in response to the
   * TRACE message. How many are returned is dependent on the the TRACE
   * message and whether it was sent by an operator or not. There is no
   * predefined order for which occurs first. Replies 'RPL_TRACEUNKNOWN',
   * RPL_TRACECONNECTING and RPL_TRACEHANDSHAKE are all used for
   * connections which have not been fully established and are either
   * 'unknown', still attempting to connect or in the process of completing
   * the 'server handshake'. RPL_TRACELINK is sent by any server which
   * handles a TRACE message and has to pass it on to another server. The
   * list of RPL_TRACELINKs sent in response to a TRACE command
   * traversing the IRC network should reflect the actual connectivity of
   * the servers themselves along that path. RPL_TRACENEWTYPE is to be
   * used for any connection which does not fit in the other categories
   * but is being displayed anyway.
   */ IRC["RPL_TRACELOG"] = "261";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSLINKINFO"] = "211";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSCOMMANDS"] = "212";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSCLINE"] = "213";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSNLINE"] = "214";
    IRC["RPL_STATSOLDNLINE"] = "RPL_STATSNLINE";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSILINE"] = "215";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSKLINE"] = "216";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSQLINE"] = "217";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSYLINE"] = "218";
    /**
   * @todo Document this constant
   */ IRC["RPL_ENDOFSTATS"] = "219";
    /**
   * To answer a query about a client's own 'mode', RPL_UMODEIS is sent
   * back.
   */ IRC["RPL_UMODEIS"] = "221";
    /**
   * @todo Document this constant
   */ IRC["RPL_SERVICEINFO"] = "231";
    /**
   * @todo Document this constant
   */ IRC["RPL_ENDOFSERVICES"] = "232";
    /**
   * @todo Document this constant
   */ IRC["RPL_SERVICE"] = "233";
    /**
   * @todo Document this constant
   */ IRC["RPL_SERVLIST"] = "234";
    /**
   * @todo Document this constant
   */ IRC["RPL_SERVLISTEND"] = "235";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSIAUTH"] = "239";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSVLINE"] = "240";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSLLINE"] = "241";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSUPTIME"] = "242";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSOLINE"] = "243";
    /**
   * @todo Document this constant
   */ IRC["RPL_STATSHLINE"] = "244";
    /**
   * @todo Document this constant
   */ IRC["RPL_LUSERCLIENT"] = "251";
    /**
   * @todo Document this constant
   */ IRC["RPL_LUSEROP"] = "252";
    /**
   * @todo Document this constant
   */ IRC["RPL_LUSERUNKNOWN"] = "253";
    /**
   * @todo Document this constant
   */ IRC["RPL_LUSERCHANNELS"] = "254";
    /**
   * In processing an LUSERS 'message', the server sends a set of replies
   * from 'RPL_LUSERCLIENT', 'RPL_LUSEROP', 'RPL_USERUNKNOWN',
   * RPL_LUSERCHANNELS and RPL_LUSERME. When 'replying', a server must send
   * back RPL_LUSERCLIENT and RPL_LUSERME. The other replies are only
   * sent back if a non-zero count is found for them.
   */ IRC["RPL_LUSERME"] = "255";
    /**
   * @todo Document this constant
   */ IRC["RPL_ADMINME"] = "256";
    /**
   * @todo Document this constant
   */ IRC["RPL_ADMINLOC1"] = "257";
    /**
   * @todo Document this constant
   */ IRC["RPL_ADMINLOC2"] = "258";
    /**
   * When replying to an ADMIN 'message', a server is expected to use
   * replies RLP_ADMINME through to RPL_ADMINEMAIL and provide a text
   * message with each. For RPL_ADMINLOC1 a description of what 'city',
   * state and country the server is in is 'expected', followed by details
   * of the university and department (RPL_ADMINLOC2) and finally the
   * administrative contact for the server (an email address here is
   * required) in RPL_ADMINEMAIL.
   */ IRC["RPL_ADMINEMAIL"] = "259";
    /**
   * @todo Document this constant
   */ IRC["RPL_MONONLINE"] = "730";
    /**
   * @todo Document this constant
   */ IRC["RPL_MONOFFLINE"] = "731";
    /**
   * @todo Document this constant
   */ IRC["RPL_MONLIST"] = "732";
    /**
   * @todo Document this constant
   */ IRC["RPL_ENDOFMONLIST"] = "733";
    /**
   * @todo Document this constant
   */ IRC["ERR_MONLISTFULL"] = "734";
    /**
   * @todo Document this constant
   */ IRC["RPL_SASLLOGIN"] = "900";
    /**
   * @todo Document this constant
   */ IRC["RPL_SASLSUCCESS"] = "903";
    /**
   * @todo Document this constant
   */ IRC["RPL_SASLFAILED"] = "904";
    /**
   * @todo Document this constant
   */ IRC["RPL_SASLERROR"] = "905";
    /**
   * @todo Document this constant
   */ IRC["RPL_SASLABORT"] = "906";
    /**
   * @todo Document this constant
   */ IRC["RPL_SASLALREADYAUTH"] = "907";
    return IRC;
}({});


var $b38a507ec34038ce$exports = {};

$parcel$export($b38a507ec34038ce$exports, "Mocha", () => $b38a507ec34038ce$export$586098b0b3d55044);
/**
 * @see https://mochajs.org/#error-codes
 */ var $b38a507ec34038ce$export$586098b0b3d55044 = /*#__PURE__*/ function(Mocha) {
    Mocha["InvalidArgType"] = "ERR_MOCHA_INVALID_ARG_TYPE";
    Mocha["InvalidArgValue"] = "ERR_MOCHA_INVALID_ARG_VALUE";
    Mocha["InvalidException"] = "ERR_MOCHA_INVALID_EXCEPTION";
    Mocha["InvalidInterface"] = "ERR_MOCHA_INVALID_INTERFACE";
    Mocha["InvalidReporter"] = "ERR_MOCHA_INVALID_REPORTER";
    Mocha["NoFilesMatchPattern"] = "ERR_MOCHA_NO_FILES_MATCH_PATTERN";
    Mocha["Unsupported"] = "ERR_MOCHA_UNSUPPORTED";
    return Mocha;
}({});


var $daa216b7c4f0d91f$exports = {};

$parcel$export($daa216b7c4f0d91f$exports, "MongoDBExit", () => $daa216b7c4f0d91f$export$bfa673ab3751c0e5);
$parcel$export($daa216b7c4f0d91f$exports, "MongoDB", () => $daa216b7c4f0d91f$export$dc67ba24438ac86b);
/**
 * @see https://docs.mongodb.com/manual/reference/exit-codes/
 */ var $daa216b7c4f0d91f$export$bfa673ab3751c0e5 = /*#__PURE__*/ function(MongoDBExit) {
    MongoDBExit[MongoDBExit["SuccessfulExit"] = 0] = "SuccessfulExit";
    MongoDBExit[MongoDBExit["GenericFailure"] = 1] = "GenericFailure";
    MongoDBExit[MongoDBExit["OptionsError"] = 2] = "OptionsError";
    MongoDBExit[MongoDBExit["HostnameMismatch"] = 3] = "HostnameMismatch";
    MongoDBExit[MongoDBExit["VersionMismatch"] = 4] = "VersionMismatch";
    MongoDBExit[MongoDBExit["InstallationIssue"] = 5] = "InstallationIssue";
    MongoDBExit[MongoDBExit["WindowsShutdownEvent"] = 12] = "WindowsShutdownEvent";
    MongoDBExit[MongoDBExit["SystemExitUncleanShutdown"] = 14] = "SystemExitUncleanShutdown";
    MongoDBExit[MongoDBExit["WindowsWsaStartupFailedNtServiceError"] = 20] = "WindowsWsaStartupFailedNtServiceError";
    MongoDBExit[MongoDBExit["ListenError"] = 48] = "ListenError";
    MongoDBExit[MongoDBExit["ProcessForkFailed"] = 50] = "ProcessForkFailed";
    MongoDBExit[MongoDBExit["NoReadySignal"] = 51] = "NoReadySignal";
    MongoDBExit[MongoDBExit["UnresponsiveFilesystem"] = 61] = "UnresponsiveFilesystem";
    MongoDBExit[MongoDBExit["IncompatibleDataFiles"] = 62] = "IncompatibleDataFiles";
    MongoDBExit[MongoDBExit["ProcessHealthCheckFailed"] = 87] = "ProcessHealthCheckFailed";
    MongoDBExit[MongoDBExit["UncaughtException"] = 100] = "UncaughtException";
    MongoDBExit[MongoDBExit["AuditLogRotationFailed"] = 102] = "AuditLogRotationFailed";
    return MongoDBExit;
}({});
var $daa216b7c4f0d91f$export$dc67ba24438ac86b = /*#__PURE__*/ function(MongoDB) {
    MongoDB[MongoDB["Ok"] = 0] = "Ok";
    MongoDB[MongoDB["InternalError"] = 1] = "InternalError";
    MongoDB[MongoDB["BadValue"] = 2] = "BadValue";
    MongoDB[MongoDB["OBSOLETE_DuplicateKey"] = 3] = "OBSOLETE_DuplicateKey";
    MongoDB[MongoDB["NoSuchKey"] = 4] = "NoSuchKey";
    MongoDB[MongoDB["GraphContainsCycle"] = 5] = "GraphContainsCycle";
    MongoDB[MongoDB["HostUnreachable"] = 6] = "HostUnreachable";
    MongoDB[MongoDB["HostNotFound"] = 7] = "HostNotFound";
    MongoDB[MongoDB["UnknownError"] = 8] = "UnknownError";
    MongoDB[MongoDB["FailedToParse"] = 9] = "FailedToParse";
    MongoDB[MongoDB["CannotMutateObject"] = 10] = "CannotMutateObject";
    MongoDB[MongoDB["UserNotFound"] = 11] = "UserNotFound";
    MongoDB[MongoDB["UnsupportedFormat"] = 12] = "UnsupportedFormat";
    MongoDB[MongoDB["Unauthorized"] = 13] = "Unauthorized";
    MongoDB[MongoDB["TypeMismatch"] = 14] = "TypeMismatch";
    MongoDB[MongoDB["Overflow"] = 15] = "Overflow";
    MongoDB[MongoDB["InvalidLength"] = 16] = "InvalidLength";
    MongoDB[MongoDB["ProtocolError"] = 17] = "ProtocolError";
    MongoDB[MongoDB["AuthenticationFailed"] = 18] = "AuthenticationFailed";
    MongoDB[MongoDB["CannotReuseObject"] = 19] = "CannotReuseObject";
    MongoDB[MongoDB["IllegalOperation"] = 20] = "IllegalOperation";
    MongoDB[MongoDB["EmptyArrayOperation"] = 21] = "EmptyArrayOperation";
    MongoDB[MongoDB["InvalidBSON"] = 22] = "InvalidBSON";
    MongoDB[MongoDB["AlreadyInitialized"] = 23] = "AlreadyInitialized";
    MongoDB[MongoDB["LockTimeout"] = 24] = "LockTimeout";
    MongoDB[MongoDB["RemoteValidationError"] = 25] = "RemoteValidationError";
    MongoDB[MongoDB["NamespaceNotFound"] = 26] = "NamespaceNotFound";
    MongoDB[MongoDB["IndexNotFound"] = 27] = "IndexNotFound";
    MongoDB[MongoDB["PathNotViable"] = 28] = "PathNotViable";
    MongoDB[MongoDB["NonExistentPath"] = 29] = "NonExistentPath";
    MongoDB[MongoDB["InvalidPath"] = 30] = "InvalidPath";
    MongoDB[MongoDB["RoleNotFound"] = 31] = "RoleNotFound";
    MongoDB[MongoDB["RolesNotRelated"] = 32] = "RolesNotRelated";
    MongoDB[MongoDB["PrivilegeNotFound"] = 33] = "PrivilegeNotFound";
    MongoDB[MongoDB["CannotBackfillArray"] = 34] = "CannotBackfillArray";
    MongoDB[MongoDB["UserModificationFailed"] = 35] = "UserModificationFailed";
    MongoDB[MongoDB["RemoteChangeDetected"] = 36] = "RemoteChangeDetected";
    MongoDB[MongoDB["FileRenameFailed"] = 37] = "FileRenameFailed";
    MongoDB[MongoDB["FileNotOpen"] = 38] = "FileNotOpen";
    MongoDB[MongoDB["FileStreamFailed"] = 39] = "FileStreamFailed";
    MongoDB[MongoDB["ConflictingUpdateOperators"] = 40] = "ConflictingUpdateOperators";
    MongoDB[MongoDB["FileAlreadyOpen"] = 41] = "FileAlreadyOpen";
    MongoDB[MongoDB["LogWriteFailed"] = 42] = "LogWriteFailed";
    MongoDB[MongoDB["CursorNotFound"] = 43] = "CursorNotFound";
    MongoDB[MongoDB["UserDataInconsistent"] = 45] = "UserDataInconsistent";
    MongoDB[MongoDB["LockBusy"] = 46] = "LockBusy";
    MongoDB[MongoDB["NoMatchingDocument"] = 47] = "NoMatchingDocument";
    MongoDB[MongoDB["NamespaceExists"] = 48] = "NamespaceExists";
    MongoDB[MongoDB["InvalidRoleModification"] = 49] = "InvalidRoleModification";
    MongoDB[MongoDB["MaxTimeMSExpired"] = 50] = "MaxTimeMSExpired";
    MongoDB[MongoDB["ManualInterventionRequired"] = 51] = "ManualInterventionRequired";
    MongoDB[MongoDB["DollarPrefixedFieldName"] = 52] = "DollarPrefixedFieldName";
    MongoDB[MongoDB["InvalidIdField"] = 53] = "InvalidIdField";
    MongoDB[MongoDB["NotSingleValueField"] = 54] = "NotSingleValueField";
    MongoDB[MongoDB["InvalidDBRef"] = 55] = "InvalidDBRef";
    MongoDB[MongoDB["EmptyFieldName"] = 56] = "EmptyFieldName";
    MongoDB[MongoDB["DottedFieldName"] = 57] = "DottedFieldName";
    MongoDB[MongoDB["RoleModificationFailed"] = 58] = "RoleModificationFailed";
    MongoDB[MongoDB["CommandNotFound"] = 59] = "CommandNotFound";
    MongoDB[MongoDB["OBSOLETE_DatabaseNotFound"] = 60] = "OBSOLETE_DatabaseNotFound";
    MongoDB[MongoDB["ShardKeyNotFound"] = 61] = "ShardKeyNotFound";
    MongoDB[MongoDB["OplogOperationUnsupported"] = 62] = "OplogOperationUnsupported";
    MongoDB[MongoDB["StaleShardVersion"] = 63] = "StaleShardVersion";
    MongoDB[MongoDB["WriteConcernFailed"] = 64] = "WriteConcernFailed";
    MongoDB[MongoDB["MultipleErrorsOccurred"] = 65] = "MultipleErrorsOccurred";
    MongoDB[MongoDB["ImmutableField"] = 66] = "ImmutableField";
    MongoDB[MongoDB["CannotCreateIndex"] = 67] = "CannotCreateIndex";
    MongoDB[MongoDB["IndexAlreadyExists"] = 68] = "IndexAlreadyExists";
    MongoDB[MongoDB["AuthSchemaIncompatible"] = 69] = "AuthSchemaIncompatible";
    MongoDB[MongoDB["ShardNotFound"] = 70] = "ShardNotFound";
    MongoDB[MongoDB["ReplicaSetNotFound"] = 71] = "ReplicaSetNotFound";
    MongoDB[MongoDB["InvalidOptions"] = 72] = "InvalidOptions";
    MongoDB[MongoDB["InvalidNamespace"] = 73] = "InvalidNamespace";
    MongoDB[MongoDB["NodeNotFound"] = 74] = "NodeNotFound";
    MongoDB[MongoDB["WriteConcernLegacyOK"] = 75] = "WriteConcernLegacyOK";
    MongoDB[MongoDB["NoReplicationEnabled"] = 76] = "NoReplicationEnabled";
    MongoDB[MongoDB["OperationIncomplete"] = 77] = "OperationIncomplete";
    MongoDB[MongoDB["CommandResultSchemaViolation"] = 78] = "CommandResultSchemaViolation";
    MongoDB[MongoDB["UnknownReplWriteConcern"] = 79] = "UnknownReplWriteConcern";
    MongoDB[MongoDB["RoleDataInconsistent"] = 80] = "RoleDataInconsistent";
    MongoDB[MongoDB["NoMatchParseContext"] = 81] = "NoMatchParseContext";
    MongoDB[MongoDB["NoProgressMade"] = 82] = "NoProgressMade";
    MongoDB[MongoDB["RemoteResultsUnavailable"] = 83] = "RemoteResultsUnavailable";
    MongoDB[MongoDB["DuplicateKeyValue"] = 84] = "DuplicateKeyValue";
    MongoDB[MongoDB["IndexOptionsConflict"] = 85] = "IndexOptionsConflict";
    MongoDB[MongoDB["IndexKeySpecsConflict"] = 86] = "IndexKeySpecsConflict";
    MongoDB[MongoDB["CannotSplit"] = 87] = "CannotSplit";
    MongoDB[MongoDB["SplitFailed_OBSOLETE"] = 88] = "SplitFailed_OBSOLETE";
    MongoDB[MongoDB["NetworkTimeout"] = 89] = "NetworkTimeout";
    MongoDB[MongoDB["CallbackCanceled"] = 90] = "CallbackCanceled";
    MongoDB[MongoDB["ShutdownInProgress"] = 91] = "ShutdownInProgress";
    MongoDB[MongoDB["SecondaryAheadOfPrimary"] = 92] = "SecondaryAheadOfPrimary";
    MongoDB[MongoDB["InvalidReplicaSetConfig"] = 93] = "InvalidReplicaSetConfig";
    MongoDB[MongoDB["NotYetInitialized"] = 94] = "NotYetInitialized";
    MongoDB[MongoDB["NotSecondary"] = 95] = "NotSecondary";
    MongoDB[MongoDB["OperationFailed"] = 96] = "OperationFailed";
    MongoDB[MongoDB["NoProjectionFound"] = 97] = "NoProjectionFound";
    MongoDB[MongoDB["DBPathInUse"] = 98] = "DBPathInUse";
    MongoDB[MongoDB["UnsatisfiableWriteConcern"] = 100] = "UnsatisfiableWriteConcern";
    MongoDB[MongoDB["OutdatedClient"] = 101] = "OutdatedClient";
    MongoDB[MongoDB["IncompatibleAuditMetadata"] = 102] = "IncompatibleAuditMetadata";
    MongoDB[MongoDB["NewReplicaSetConfigurationIncompatible"] = 103] = "NewReplicaSetConfigurationIncompatible";
    MongoDB[MongoDB["NodeNotElectable"] = 104] = "NodeNotElectable";
    MongoDB[MongoDB["IncompatibleShardingMetadata"] = 105] = "IncompatibleShardingMetadata";
    MongoDB[MongoDB["DistributedClockSkewed"] = 106] = "DistributedClockSkewed";
    MongoDB[MongoDB["LockFailed"] = 107] = "LockFailed";
    MongoDB[MongoDB["InconsistentReplicaSetNames"] = 108] = "InconsistentReplicaSetNames";
    MongoDB[MongoDB["ConfigurationInProgress"] = 109] = "ConfigurationInProgress";
    MongoDB[MongoDB["CannotInitializeNodeWithData"] = 110] = "CannotInitializeNodeWithData";
    MongoDB[MongoDB["NotExactValueField"] = 111] = "NotExactValueField";
    MongoDB[MongoDB["WriteConflict"] = 112] = "WriteConflict";
    MongoDB[MongoDB["InitialSyncFailure"] = 113] = "InitialSyncFailure";
    MongoDB[MongoDB["InitialSyncOplogSourceMissing"] = 114] = "InitialSyncOplogSourceMissing";
    MongoDB[MongoDB["CommandNotSupported"] = 115] = "CommandNotSupported";
    MongoDB[MongoDB["DocTooLargeForCapped"] = 116] = "DocTooLargeForCapped";
    MongoDB[MongoDB["ConflictingOperationInProgress"] = 117] = "ConflictingOperationInProgress";
    MongoDB[MongoDB["NamespaceNotSharded"] = 118] = "NamespaceNotSharded";
    MongoDB[MongoDB["InvalidSyncSource"] = 119] = "InvalidSyncSource";
    MongoDB[MongoDB["OplogStartMissing"] = 120] = "OplogStartMissing";
    MongoDB[MongoDB["DocumentValidationFailure"] = 121] = "DocumentValidationFailure";
    MongoDB[MongoDB["OBSOLETE_ReadAfterOptimeTimeout"] = 122] = "OBSOLETE_ReadAfterOptimeTimeout";
    MongoDB[MongoDB["NotAReplicaSet"] = 123] = "NotAReplicaSet";
    MongoDB[MongoDB["IncompatibleElectionProtocol"] = 124] = "IncompatibleElectionProtocol";
    MongoDB[MongoDB["CommandFailed"] = 125] = "CommandFailed";
    MongoDB[MongoDB["RPCProtocolNegotiationFailed"] = 126] = "RPCProtocolNegotiationFailed";
    MongoDB[MongoDB["UnrecoverableRollbackError"] = 127] = "UnrecoverableRollbackError";
    MongoDB[MongoDB["LockNotFound"] = 128] = "LockNotFound";
    MongoDB[MongoDB["LockStateChangeFailed"] = 129] = "LockStateChangeFailed";
    MongoDB[MongoDB["SymbolNotFound"] = 130] = "SymbolNotFound";
    MongoDB[MongoDB["OBSOLETE_ConfigServersInconsistent"] = 132] = "OBSOLETE_ConfigServersInconsistent";
    MongoDB[MongoDB["FailedToSatisfyReadPreference"] = 133] = "FailedToSatisfyReadPreference";
    MongoDB[MongoDB["ReadConcernMajorityNotAvailableYet"] = 134] = "ReadConcernMajorityNotAvailableYet";
    MongoDB[MongoDB["StaleTerm"] = 135] = "StaleTerm";
    MongoDB[MongoDB["CappedPositionLost"] = 136] = "CappedPositionLost";
    MongoDB[MongoDB["IncompatibleShardingConfigVersion"] = 137] = "IncompatibleShardingConfigVersion";
    MongoDB[MongoDB["RemoteOplogStale"] = 138] = "RemoteOplogStale";
    MongoDB[MongoDB["JSInterpreterFailure"] = 139] = "JSInterpreterFailure";
    MongoDB[MongoDB["InvalidSSLConfiguration"] = 140] = "InvalidSSLConfiguration";
    MongoDB[MongoDB["SSLHandshakeFailed"] = 141] = "SSLHandshakeFailed";
    MongoDB[MongoDB["JSUncatchableError"] = 142] = "JSUncatchableError";
    MongoDB[MongoDB["CursorInUse"] = 143] = "CursorInUse";
    MongoDB[MongoDB["IncompatibleCatalogManager"] = 144] = "IncompatibleCatalogManager";
    MongoDB[MongoDB["PooledConnectionsDropped"] = 145] = "PooledConnectionsDropped";
    MongoDB[MongoDB["ExceededMemoryLimit"] = 146] = "ExceededMemoryLimit";
    MongoDB[MongoDB["ZLibError"] = 147] = "ZLibError";
    MongoDB[MongoDB["ReadConcernMajorityNotEnabled"] = 148] = "ReadConcernMajorityNotEnabled";
    MongoDB[MongoDB["NoConfigMaster"] = 149] = "NoConfigMaster";
    MongoDB[MongoDB["StaleEpoch"] = 150] = "StaleEpoch";
    MongoDB[MongoDB["OperationCannotBeBatched"] = 151] = "OperationCannotBeBatched";
    MongoDB[MongoDB["OplogOutOfOrder"] = 152] = "OplogOutOfOrder";
    MongoDB[MongoDB["ChunkTooBig"] = 153] = "ChunkTooBig";
    MongoDB[MongoDB["InconsistentShardIdentity"] = 154] = "InconsistentShardIdentity";
    MongoDB[MongoDB["CannotApplyOplogWhilePrimary"] = 155] = "CannotApplyOplogWhilePrimary";
    MongoDB[MongoDB["OBSOLETE_NeedsDocumentMove"] = 156] = "OBSOLETE_NeedsDocumentMove";
    MongoDB[MongoDB["CanRepairToDowngrade"] = 157] = "CanRepairToDowngrade";
    MongoDB[MongoDB["MustUpgrade"] = 158] = "MustUpgrade";
    MongoDB[MongoDB["DurationOverflow"] = 159] = "DurationOverflow";
    MongoDB[MongoDB["MaxStalenessOutOfRange"] = 160] = "MaxStalenessOutOfRange";
    MongoDB[MongoDB["IncompatibleCollationVersion"] = 161] = "IncompatibleCollationVersion";
    MongoDB[MongoDB["CollectionIsEmpty"] = 162] = "CollectionIsEmpty";
    MongoDB[MongoDB["ZoneStillInUse"] = 163] = "ZoneStillInUse";
    MongoDB[MongoDB["InitialSyncActive"] = 164] = "InitialSyncActive";
    MongoDB[MongoDB["ViewDepthLimitExceeded"] = 165] = "ViewDepthLimitExceeded";
    MongoDB[MongoDB["CommandNotSupportedOnView"] = 166] = "CommandNotSupportedOnView";
    MongoDB[MongoDB["OptionNotSupportedOnView"] = 167] = "OptionNotSupportedOnView";
    MongoDB[MongoDB["InvalidPipelineOperator"] = 168] = "InvalidPipelineOperator";
    MongoDB[MongoDB["CommandOnShardedViewNotSupportedOnMongod"] = 169] = "CommandOnShardedViewNotSupportedOnMongod";
    MongoDB[MongoDB["TooManyMatchingDocuments"] = 170] = "TooManyMatchingDocuments";
    MongoDB[MongoDB["CannotIndexParallelArrays"] = 171] = "CannotIndexParallelArrays";
    MongoDB[MongoDB["TransportSessionClosed"] = 172] = "TransportSessionClosed";
    MongoDB[MongoDB["TransportSessionNotFound"] = 173] = "TransportSessionNotFound";
    MongoDB[MongoDB["TransportSessionUnknown"] = 174] = "TransportSessionUnknown";
    MongoDB[MongoDB["QueryPlanKilled"] = 175] = "QueryPlanKilled";
    MongoDB[MongoDB["FileOpenFailed"] = 176] = "FileOpenFailed";
    MongoDB[MongoDB["ZoneNotFound"] = 177] = "ZoneNotFound";
    MongoDB[MongoDB["RangeOverlapConflict"] = 178] = "RangeOverlapConflict";
    MongoDB[MongoDB["WindowsPdhError"] = 179] = "WindowsPdhError";
    MongoDB[MongoDB["BadPerfCounterPath"] = 180] = "BadPerfCounterPath";
    MongoDB[MongoDB["AmbiguousIndexKeyPattern"] = 181] = "AmbiguousIndexKeyPattern";
    MongoDB[MongoDB["InvalidViewDefinition"] = 182] = "InvalidViewDefinition";
    MongoDB[MongoDB["ClientMetadataMissingField"] = 183] = "ClientMetadataMissingField";
    MongoDB[MongoDB["ClientMetadataAppNameTooLarge"] = 184] = "ClientMetadataAppNameTooLarge";
    MongoDB[MongoDB["ClientMetadataDocumentTooLarge"] = 185] = "ClientMetadataDocumentTooLarge";
    MongoDB[MongoDB["ClientMetadataCannotBeMutated"] = 186] = "ClientMetadataCannotBeMutated";
    MongoDB[MongoDB["LinearizableReadConcernError"] = 187] = "LinearizableReadConcernError";
    MongoDB[MongoDB["IncompatibleServerVersion"] = 188] = "IncompatibleServerVersion";
    MongoDB[MongoDB["PrimarySteppedDown"] = 189] = "PrimarySteppedDown";
    MongoDB[MongoDB["MasterSlaveConnectionFailure"] = 190] = "MasterSlaveConnectionFailure";
    MongoDB[MongoDB["OBSOLETE_BalancerLostDistributedLock"] = 191] = "OBSOLETE_BalancerLostDistributedLock";
    MongoDB[MongoDB["FailPointEnabled"] = 192] = "FailPointEnabled";
    MongoDB[MongoDB["NoShardingEnabled"] = 193] = "NoShardingEnabled";
    MongoDB[MongoDB["BalancerInterrupted"] = 194] = "BalancerInterrupted";
    MongoDB[MongoDB["ViewPipelineMaxSizeExceeded"] = 195] = "ViewPipelineMaxSizeExceeded";
    MongoDB[MongoDB["InvalidIndexSpecificationOption"] = 197] = "InvalidIndexSpecificationOption";
    MongoDB[MongoDB["OBSOLETE_ReceivedOpReplyMessage"] = 198] = "OBSOLETE_ReceivedOpReplyMessage";
    MongoDB[MongoDB["ReplicaSetMonitorRemoved"] = 199] = "ReplicaSetMonitorRemoved";
    MongoDB[MongoDB["ChunkRangeCleanupPending"] = 200] = "ChunkRangeCleanupPending";
    MongoDB[MongoDB["CannotBuildIndexKeys"] = 201] = "CannotBuildIndexKeys";
    MongoDB[MongoDB["NetworkInterfaceExceededTimeLimit"] = 202] = "NetworkInterfaceExceededTimeLimit";
    MongoDB[MongoDB["ShardingStateNotInitialized"] = 203] = "ShardingStateNotInitialized";
    MongoDB[MongoDB["TimeProofMismatch"] = 204] = "TimeProofMismatch";
    MongoDB[MongoDB["ClusterTimeFailsRateLimiter"] = 205] = "ClusterTimeFailsRateLimiter";
    MongoDB[MongoDB["NoSuchSession"] = 206] = "NoSuchSession";
    MongoDB[MongoDB["InvalidUUID"] = 207] = "InvalidUUID";
    MongoDB[MongoDB["TooManyLocks"] = 208] = "TooManyLocks";
    MongoDB[MongoDB["StaleClusterTime"] = 209] = "StaleClusterTime";
    MongoDB[MongoDB["CannotVerifyAndSignLogicalTime"] = 210] = "CannotVerifyAndSignLogicalTime";
    MongoDB[MongoDB["KeyNotFound"] = 211] = "KeyNotFound";
    MongoDB[MongoDB["IncompatibleRollbackAlgorithm"] = 212] = "IncompatibleRollbackAlgorithm";
    MongoDB[MongoDB["DuplicateSession"] = 213] = "DuplicateSession";
    MongoDB[MongoDB["AuthenticationRestrictionUnmet"] = 214] = "AuthenticationRestrictionUnmet";
    MongoDB[MongoDB["DatabaseDropPending"] = 215] = "DatabaseDropPending";
    MongoDB[MongoDB["ElectionInProgress"] = 216] = "ElectionInProgress";
    MongoDB[MongoDB["IncompleteTransactionHistory"] = 217] = "IncompleteTransactionHistory";
    MongoDB[MongoDB["UpdateOperationFailed"] = 218] = "UpdateOperationFailed";
    MongoDB[MongoDB["FTDCPathNotSet"] = 219] = "FTDCPathNotSet";
    MongoDB[MongoDB["FTDCPathAlreadySet"] = 220] = "FTDCPathAlreadySet";
    MongoDB[MongoDB["IndexModified"] = 221] = "IndexModified";
    MongoDB[MongoDB["CloseChangeStream"] = 222] = "CloseChangeStream";
    MongoDB[MongoDB["IllegalOpMsgFlag"] = 223] = "IllegalOpMsgFlag";
    MongoDB[MongoDB["QueryFeatureNotAllowed"] = 224] = "QueryFeatureNotAllowed";
    MongoDB[MongoDB["TransactionTooOld"] = 225] = "TransactionTooOld";
    MongoDB[MongoDB["AtomicityFailure"] = 226] = "AtomicityFailure";
    MongoDB[MongoDB["CannotImplicitlyCreateCollection"] = 227] = "CannotImplicitlyCreateCollection";
    MongoDB[MongoDB["SessionTransferIncomplete"] = 228] = "SessionTransferIncomplete";
    MongoDB[MongoDB["MustDowngrade"] = 229] = "MustDowngrade";
    MongoDB[MongoDB["DNSHostNotFound"] = 230] = "DNSHostNotFound";
    MongoDB[MongoDB["DNSProtocolError"] = 231] = "DNSProtocolError";
    MongoDB[MongoDB["MaxSubPipelineDepthExceeded"] = 232] = "MaxSubPipelineDepthExceeded";
    MongoDB[MongoDB["TooManyDocumentSequences"] = 233] = "TooManyDocumentSequences";
    MongoDB[MongoDB["RetryChangeStream"] = 234] = "RetryChangeStream";
    MongoDB[MongoDB["InternalErrorNotSupported"] = 235] = "InternalErrorNotSupported";
    MongoDB[MongoDB["ForTestingErrorExtraInfo"] = 236] = "ForTestingErrorExtraInfo";
    MongoDB[MongoDB["CursorKilled"] = 237] = "CursorKilled";
    MongoDB[MongoDB["NotImplemented"] = 238] = "NotImplemented";
    MongoDB[MongoDB["SnapshotTooOld"] = 239] = "SnapshotTooOld";
    MongoDB[MongoDB["DNSRecordTypeMismatch"] = 240] = "DNSRecordTypeMismatch";
    MongoDB[MongoDB["ConversionFailure"] = 241] = "ConversionFailure";
    MongoDB[MongoDB["CannotCreateCollection"] = 242] = "CannotCreateCollection";
    MongoDB[MongoDB["IncompatibleWithUpgradedServer"] = 243] = "IncompatibleWithUpgradedServer";
    MongoDB[MongoDB["NOT_YET_AVAILABLE_TransactionAborted"] = 244] = "NOT_YET_AVAILABLE_TransactionAborted";
    MongoDB[MongoDB["BrokenPromise"] = 245] = "BrokenPromise";
    MongoDB[MongoDB["SnapshotUnavailable"] = 246] = "SnapshotUnavailable";
    MongoDB[MongoDB["ProducerConsumerQueueBatchTooLarge"] = 247] = "ProducerConsumerQueueBatchTooLarge";
    MongoDB[MongoDB["ProducerConsumerQueueEndClosed"] = 248] = "ProducerConsumerQueueEndClosed";
    MongoDB[MongoDB["StaleDbVersion"] = 249] = "StaleDbVersion";
    MongoDB[MongoDB["StaleChunkHistory"] = 250] = "StaleChunkHistory";
    MongoDB[MongoDB["NoSuchTransaction"] = 251] = "NoSuchTransaction";
    MongoDB[MongoDB["ReentrancyNotAllowed"] = 252] = "ReentrancyNotAllowed";
    MongoDB[MongoDB["FreeMonHttpInFlight"] = 253] = "FreeMonHttpInFlight";
    MongoDB[MongoDB["FreeMonHttpTemporaryFailure"] = 254] = "FreeMonHttpTemporaryFailure";
    MongoDB[MongoDB["FreeMonHttpPermanentFailure"] = 255] = "FreeMonHttpPermanentFailure";
    MongoDB[MongoDB["TransactionCommitted"] = 256] = "TransactionCommitted";
    MongoDB[MongoDB["TransactionTooLarge"] = 257] = "TransactionTooLarge";
    MongoDB[MongoDB["UnknownFeatureCompatibilityVersion"] = 258] = "UnknownFeatureCompatibilityVersion";
    MongoDB[MongoDB["KeyedExecutorRetry"] = 259] = "KeyedExecutorRetry";
    MongoDB[MongoDB["InvalidResumeToken"] = 260] = "InvalidResumeToken";
    MongoDB[MongoDB["TooManyLogicalSessions"] = 261] = "TooManyLogicalSessions";
    MongoDB[MongoDB["ExceededTimeLimit"] = 262] = "ExceededTimeLimit";
    MongoDB[MongoDB["OperationNotSupportedInTransaction"] = 263] = "OperationNotSupportedInTransaction";
    MongoDB[MongoDB["TooManyFilesOpen"] = 264] = "TooManyFilesOpen";
    MongoDB[MongoDB["OrphanedRangeCleanUpFailed"] = 265] = "OrphanedRangeCleanUpFailed";
    MongoDB[MongoDB["FailPointSetFailed"] = 266] = "FailPointSetFailed";
    MongoDB[MongoDB["PreparedTransactionInProgress"] = 267] = "PreparedTransactionInProgress";
    MongoDB[MongoDB["CannotBackup"] = 268] = "CannotBackup";
    MongoDB[MongoDB["DataModifiedByRepair"] = 269] = "DataModifiedByRepair";
    MongoDB[MongoDB["RepairedReplicaSetNode"] = 270] = "RepairedReplicaSetNode";
    MongoDB[MongoDB["JSInterpreterFailureWithStack"] = 271] = "JSInterpreterFailureWithStack";
    MongoDB[MongoDB["MigrationConflict"] = 272] = "MigrationConflict";
    MongoDB[MongoDB["ProducerConsumerQueueProducerQueueDepthExceeded"] = 273] = "ProducerConsumerQueueProducerQueueDepthExceeded";
    MongoDB[MongoDB["ProducerConsumerQueueConsumed"] = 274] = "ProducerConsumerQueueConsumed";
    MongoDB[MongoDB["ExchangePassthrough"] = 275] = "ExchangePassthrough";
    MongoDB[MongoDB["IndexBuildAborted"] = 276] = "IndexBuildAborted";
    MongoDB[MongoDB["AlarmAlreadyFulfilled"] = 277] = "AlarmAlreadyFulfilled";
    MongoDB[MongoDB["UnsatisfiableCommitQuorum"] = 278] = "UnsatisfiableCommitQuorum";
    MongoDB[MongoDB["ClientDisconnect"] = 279] = "ClientDisconnect";
    MongoDB[MongoDB["ChangeStreamFatalError"] = 280] = "ChangeStreamFatalError";
    MongoDB[MongoDB["TransactionCoordinatorSteppingDown"] = 281] = "TransactionCoordinatorSteppingDown";
    MongoDB[MongoDB["TransactionCoordinatorReachedAbortDecision"] = 282] = "TransactionCoordinatorReachedAbortDecision";
    MongoDB[MongoDB["WouldChangeOwningShard"] = 283] = "WouldChangeOwningShard";
    MongoDB[MongoDB["ForTestingErrorExtraInfoWithExtraInfoInNamespace"] = 284] = "ForTestingErrorExtraInfoWithExtraInfoInNamespace";
    MongoDB[MongoDB["IndexBuildAlreadyInProgress"] = 285] = "IndexBuildAlreadyInProgress";
    MongoDB[MongoDB["ChangeStreamHistoryLost"] = 286] = "ChangeStreamHistoryLost";
    MongoDB[MongoDB["TransactionCoordinatorDeadlineTaskCanceled"] = 287] = "TransactionCoordinatorDeadlineTaskCanceled";
    MongoDB[MongoDB["ChecksumMismatch"] = 288] = "ChecksumMismatch";
    MongoDB[MongoDB["WaitForMajorityServiceEarlierOpTimeAvailable"] = 289] = "WaitForMajorityServiceEarlierOpTimeAvailable";
    MongoDB[MongoDB["TransactionExceededLifetimeLimitSeconds"] = 290] = "TransactionExceededLifetimeLimitSeconds";
    MongoDB[MongoDB["NoQueryExecutionPlans"] = 291] = "NoQueryExecutionPlans";
    MongoDB[MongoDB["QueryExceededMemoryLimitNoDiskUseAllowed"] = 292] = "QueryExceededMemoryLimitNoDiskUseAllowed";
    MongoDB[MongoDB["InvalidSeedList"] = 293] = "InvalidSeedList";
    MongoDB[MongoDB["InvalidTopologyType"] = 294] = "InvalidTopologyType";
    MongoDB[MongoDB["InvalidHeartBeatFrequency"] = 295] = "InvalidHeartBeatFrequency";
    MongoDB[MongoDB["TopologySetNameRequired"] = 296] = "TopologySetNameRequired";
    MongoDB[MongoDB["HierarchicalAcquisitionLevelViolation"] = 297] = "HierarchicalAcquisitionLevelViolation";
    MongoDB[MongoDB["InvalidServerType"] = 298] = "InvalidServerType";
    MongoDB[MongoDB["OCSPCertificateStatusRevoked"] = 299] = "OCSPCertificateStatusRevoked";
    MongoDB[MongoDB["RangeDeletionAbandonedBecauseCollectionWithUUIDDoesNotExist"] = 300] = "RangeDeletionAbandonedBecauseCollectionWithUUIDDoesNotExist";
    MongoDB[MongoDB["DataCorruptionDetected"] = 301] = "DataCorruptionDetected";
    MongoDB[MongoDB["OCSPCertificateStatusUnknown"] = 302] = "OCSPCertificateStatusUnknown";
    MongoDB[MongoDB["SplitHorizonChange"] = 303] = "SplitHorizonChange";
    MongoDB[MongoDB["ShardInvalidatedForTargeting"] = 304] = "ShardInvalidatedForTargeting";
    MongoDB[MongoDB["ReadThroughCacheKeyNotFound"] = 305] = "ReadThroughCacheKeyNotFound";
    MongoDB[MongoDB["ReadThroughCacheLookupCanceled"] = 306] = "ReadThroughCacheLookupCanceled";
    MongoDB[MongoDB["RangeDeletionAbandonedBecauseTaskDocumentDoesNotExist"] = 307] = "RangeDeletionAbandonedBecauseTaskDocumentDoesNotExist";
    MongoDB[MongoDB["SocketException"] = 9001] = "SocketException";
    MongoDB[MongoDB["OBSOLETE_RecvStaleConfig"] = 9996] = "OBSOLETE_RecvStaleConfig";
    MongoDB[MongoDB["CannotGrowDocumentInCappedNamespace"] = 10003] = "CannotGrowDocumentInCappedNamespace";
    MongoDB[MongoDB["NotMaster"] = 10107] = "NotMaster";
    MongoDB[MongoDB["BSONObjectTooLarge"] = 10334] = "BSONObjectTooLarge";
    MongoDB[MongoDB["DuplicateKey"] = 11000] = "DuplicateKey";
    MongoDB[MongoDB["InterruptedAtShutdown"] = 11600] = "InterruptedAtShutdown";
    MongoDB[MongoDB["Interrupted"] = 11601] = "Interrupted";
    MongoDB[MongoDB["InterruptedDueToReplStateChange"] = 11602] = "InterruptedDueToReplStateChange";
    MongoDB[MongoDB["BackgroundOperationInProgressForDatabase"] = 12586] = "BackgroundOperationInProgressForDatabase";
    MongoDB[MongoDB["BackgroundOperationInProgressForNamespace"] = 12587] = "BackgroundOperationInProgressForNamespace";
    MongoDB[MongoDB["OBSOLETE_PrepareConfigsFailed"] = 13104] = "OBSOLETE_PrepareConfigsFailed";
    MongoDB[MongoDB["MergeStageNoMatchingDocument"] = 13113] = "MergeStageNoMatchingDocument";
    MongoDB[MongoDB["DatabaseDifferCase"] = 13297] = "DatabaseDifferCase";
    MongoDB[MongoDB["StaleConfig"] = 13388] = "StaleConfig";
    MongoDB[MongoDB["NotMasterNoSlaveOk"] = 13435] = "NotMasterNoSlaveOk";
    MongoDB[MongoDB["NotMasterOrSecondary"] = 13436] = "NotMasterOrSecondary";
    MongoDB[MongoDB["OutOfDiskSpace"] = 14031] = "OutOfDiskSpace";
    MongoDB[MongoDB["OBSOLETE_KeyTooLong"] = 17280] = "OBSOLETE_KeyTooLong";
    return MongoDB;
}({});


var $7e84da312a980daf$exports = {};

$parcel$export($7e84da312a980daf$exports, "MongooseState", () => $7e84da312a980daf$export$48fd89a91b9d972a);
/**
 * @see https://github.com/Automattic/mongoose/blob/master/lib/connectionstate.js
 */ var $7e84da312a980daf$export$48fd89a91b9d972a = /*#__PURE__*/ function(MongooseState) {
    MongooseState[MongooseState["Disconnected"] = 0] = "Disconnected";
    MongooseState[MongooseState["Connected"] = 1] = "Connected";
    MongooseState[MongooseState["Connecting"] = 2] = "Connecting";
    MongooseState[MongooseState["Disconnecting"] = 3] = "Disconnecting";
    MongooseState[MongooseState["Uninitialized"] = 99] = "Uninitialized";
    return MongooseState;
}({});


var $b72811b1d3986324$exports = {};

$parcel$export($b72811b1d3986324$exports, "Nginx", () => $b72811b1d3986324$export$b8f545dad73af54a);
var $b72811b1d3986324$export$b8f545dad73af54a = /*#__PURE__*/ function(Nginx) {
    Nginx[Nginx["Ok"] = 200] = "Ok";
    Nginx[Nginx["Created"] = 201] = "Created";
    Nginx[Nginx["Accepted"] = 202] = "Accepted";
    Nginx[Nginx["NoContent"] = 204] = "NoContent";
    Nginx[Nginx["PartialContent"] = 206] = "PartialContent";
    Nginx[Nginx["MovedPermanently"] = 301] = "MovedPermanently";
    Nginx[Nginx["MovedTemporarily"] = 302] = "MovedTemporarily";
    Nginx[Nginx["SeeOther"] = 303] = "SeeOther";
    Nginx[Nginx["NotModified"] = 304] = "NotModified";
    Nginx[Nginx["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    Nginx[Nginx["PermanentRedirect"] = 308] = "PermanentRedirect";
    Nginx[Nginx["BadRequest"] = 400] = "BadRequest";
    Nginx[Nginx["Unauthorized"] = 401] = "Unauthorized";
    Nginx[Nginx["PaymentRequired"] = 402] = "PaymentRequired";
    Nginx[Nginx["Forbidden"] = 403] = "Forbidden";
    Nginx[Nginx["NotFound"] = 404] = "NotFound";
    Nginx[Nginx["NotAllowed"] = 405] = "NotAllowed";
    Nginx[Nginx["NotAcceptable"] = 406] = "NotAcceptable";
    Nginx[Nginx["RequestTimeOut"] = 408] = "RequestTimeOut";
    Nginx[Nginx["Conflict"] = 409] = "Conflict";
    Nginx[Nginx["Gone"] = 410] = "Gone";
    Nginx[Nginx["LengthRequired"] = 411] = "LengthRequired";
    Nginx[Nginx["PreconditionFailed"] = 412] = "PreconditionFailed";
    Nginx[Nginx["RequestEntityTooLarge"] = 413] = "RequestEntityTooLarge";
    Nginx[Nginx["RequestUriTooLarge"] = 414] = "RequestUriTooLarge";
    Nginx[Nginx["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";
    Nginx[Nginx["RequestedRangeNotSatisfiable"] = 416] = "RequestedRangeNotSatisfiable";
    Nginx[Nginx["MisdirectedRequest"] = 421] = "MisdirectedRequest";
    Nginx[Nginx["TooManyRequests"] = 429] = "TooManyRequests";
    Nginx[Nginx["InternalServerError"] = 500] = "InternalServerError";
    Nginx[Nginx["NotImplemented"] = 501] = "NotImplemented";
    Nginx[Nginx["BadGateway"] = 502] = "BadGateway";
    Nginx[Nginx["ServiceTemporarilyUnavailable"] = 503] = "ServiceTemporarilyUnavailable";
    Nginx[Nginx["GatewayTimeOut"] = 504] = "GatewayTimeOut";
    Nginx[Nginx["HttpVersionNotSupported"] = 505] = "HttpVersionNotSupported";
    Nginx[Nginx["InsufficientStorage"] = 507] = "InsufficientStorage";
    return Nginx;
}({});


var $0c77cb1bb2feb95e$exports = {};

$parcel$export($0c77cb1bb2feb95e$exports, "Node", () => $0c77cb1bb2feb95e$export$85c928794f8d04d4);
var $0c77cb1bb2feb95e$export$85c928794f8d04d4 = /*#__PURE__*/ function(Node) {
    Node[Node["Continue"] = 100] = "Continue";
    Node[Node["SwitchingProtocols"] = 101] = "SwitchingProtocols";
    Node[Node["Processing"] = 102] = "Processing";
    Node[Node["EarlyHints"] = 103] = "EarlyHints";
    Node[Node["Ok"] = 200] = "Ok";
    Node[Node["Created"] = 201] = "Created";
    Node[Node["Accepted"] = 202] = "Accepted";
    Node[Node["NonAuthoritativeInformation"] = 203] = "NonAuthoritativeInformation";
    Node[Node["NoContent"] = 204] = "NoContent";
    Node[Node["ResetContent"] = 205] = "ResetContent";
    Node[Node["PartialContent"] = 206] = "PartialContent";
    Node[Node["MultiStatus"] = 207] = "MultiStatus";
    Node[Node["AlreadyReported"] = 208] = "AlreadyReported";
    Node[Node["ImUsed"] = 226] = "ImUsed";
    Node[Node["MultipleChoices"] = 300] = "MultipleChoices";
    Node[Node["MovedPermanently"] = 301] = "MovedPermanently";
    Node[Node["Found"] = 302] = "Found";
    Node[Node["SeeOther"] = 303] = "SeeOther";
    Node[Node["NotModified"] = 304] = "NotModified";
    Node[Node["UseProxy"] = 305] = "UseProxy";
    Node[Node["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    Node[Node["PermanentRedirect"] = 308] = "PermanentRedirect";
    Node[Node["BadRequest"] = 400] = "BadRequest";
    Node[Node["Unauthorized"] = 401] = "Unauthorized";
    Node[Node["PaymentRequired"] = 402] = "PaymentRequired";
    Node[Node["Forbidden"] = 403] = "Forbidden";
    Node[Node["NotFound"] = 404] = "NotFound";
    Node[Node["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    Node[Node["NotAcceptable"] = 406] = "NotAcceptable";
    Node[Node["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    Node[Node["RequestTimeout"] = 408] = "RequestTimeout";
    Node[Node["Conflict"] = 409] = "Conflict";
    Node[Node["Gone"] = 410] = "Gone";
    Node[Node["LengthRequired"] = 411] = "LengthRequired";
    Node[Node["PreconditionFailed"] = 412] = "PreconditionFailed";
    Node[Node["PayloadTooLarge"] = 413] = "PayloadTooLarge";
    Node[Node["UriTooLong"] = 414] = "UriTooLong";
    Node[Node["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";
    Node[Node["RangeNotSatisfiable"] = 416] = "RangeNotSatisfiable";
    Node[Node["ExpectationFailed"] = 417] = "ExpectationFailed";
    Node[Node["ImATeapot"] = 418] = "ImATeapot";
    Node[Node["MisdirectedRequest"] = 421] = "MisdirectedRequest";
    Node[Node["UnprocessableEntity"] = 422] = "UnprocessableEntity";
    Node[Node["Locked"] = 423] = "Locked";
    Node[Node["FailedDependency"] = 424] = "FailedDependency";
    Node[Node["UnorderedCollection"] = 425] = "UnorderedCollection";
    Node[Node["UpgradeRequired"] = 426] = "UpgradeRequired";
    Node[Node["PreconditionRequired"] = 428] = "PreconditionRequired";
    Node[Node["TooManyRequests"] = 429] = "TooManyRequests";
    Node[Node["RequestHeaderFieldsTooLarge"] = 431] = "RequestHeaderFieldsTooLarge";
    Node[Node["UnavailableForLegalReasons"] = 451] = "UnavailableForLegalReasons";
    Node[Node["InternalServerError"] = 500] = "InternalServerError";
    Node[Node["NotImplemented"] = 501] = "NotImplemented";
    Node[Node["BadGateway"] = 502] = "BadGateway";
    Node[Node["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    Node[Node["GatewayTimeout"] = 504] = "GatewayTimeout";
    Node[Node["HttpVersionNotSupported"] = 505] = "HttpVersionNotSupported";
    Node[Node["VariantAlsoNegotiates"] = 506] = "VariantAlsoNegotiates";
    Node[Node["InsufficientStorage"] = 507] = "InsufficientStorage";
    Node[Node["LoopDetected"] = 508] = "LoopDetected";
    Node[Node["BandwidthLimitExceeded"] = 509] = "BandwidthLimitExceeded";
    Node[Node["NotExtended"] = 510] = "NotExtended";
    Node[Node["NetworkAuthenticationRequired"] = 511] = "NetworkAuthenticationRequired";
    return Node;
}({});


var $f5f2bfdbd0034081$exports = {};

$parcel$export($f5f2bfdbd0034081$exports, "PG", () => $f5f2bfdbd0034081$export$c56943b7b8ffea21);
/**
 * @see https://www.postgresql.org/docs/current/errcodes-appendix.html
 */ var $f5f2bfdbd0034081$export$c56943b7b8ffea21 = /*#__PURE__*/ function(PG) {
    // Class 00 — Successful Completion,
    PG["SuccessfulCompletion"] = "00000";
    // Class 01 — Warning,
    PG["Warning"] = "01000";
    PG["DynamicResultSetsReturned"] = "0100C";
    PG["ImplicitZeroBitPadding"] = "01008";
    PG["NullValueEliminatedInSetFunction"] = "01003";
    PG["PrivilegeNotGranted"] = "01007";
    PG["PrivilegeNotRevoked"] = "01006";
    PG["StringDataRightTruncationWarning"] = "01004";
    PG["DeprecatedFeature"] = "01P01";
    // Class 02 — No Data (this is also a warning class per the SQL standard),
    PG["NoData"] = "02000";
    PG["NoAdditionalDynamicResultSetsReturned"] = "02001";
    // Class 03 — SQL Statement Not Yet Complete,
    PG["SqlStatementNotYetComplete"] = "03000";
    // Class 08 — Connection Exception,
    PG["ConnectionException"] = "08000";
    PG["ConnectionDoesNotExist"] = "08003";
    PG["ConnectionFailure"] = "08006";
    PG["SqlClientUnableToEstablishSqlConnection"] = "08001";
    PG["SqlServerRejectedEstablishmentOfSqlConnection"] = "08004";
    PG["TransactionResolutionUnknown"] = "08007";
    PG["ProtocolViolation"] = "08P01";
    // Class 09 — Triggered Action Exception,
    PG["TriggeredActionException"] = "09000";
    // Class 0A — Feature Not Supported,
    PG["FeatureNotSupported"] = "0A000";
    // Class 0B — Invalid Transaction Initiation,
    PG["InvalidTransactionInitiation"] = "0B000";
    // Class 0F — Locator Exception,
    PG["LocatorException"] = "0F000";
    PG["InvalidLocatorSpecification"] = "0F001";
    // Class 0L — Invalid Grantor,
    PG["InvalidGrantor"] = "0L000";
    PG["InvalidGrantOperation"] = "0LP01";
    // Class 0P — Invalid Role Specification,
    PG["InvalidRoleSpecification"] = "0P000";
    // Class 0Z — Diagnostics Exception,
    PG["DiagnosticsException"] = "0Z000";
    PG["StackedDiagnosticsAccessedWithoutActiveHandler"] = "0Z002";
    // Class 20 — Case Not Found,
    PG["CaseNotFound"] = "20000";
    // Class 21 — Cardinality Violation,
    PG["CardinalityViolation"] = "21000";
    // Class 22 — Data Exception,
    PG["DataException"] = "22000";
    PG["ArraySubscriptError"] = "2202E";
    PG["CharacterNotInRepertoire"] = "22021";
    PG["DateTimeFieldOverflow"] = "22008";
    PG["DivisionByZero"] = "22012";
    PG["ErrorInAssignment"] = "22005";
    PG["EscapeCharacterConflict"] = "2200B";
    PG["IndicatorOverflow"] = "22022";
    PG["IntervalFieldOverflow"] = "22015";
    PG["InvalidArgumentForLogarithm"] = "2201E";
    PG["InvalidArgumentForNTileFunction"] = "22014";
    PG["InvalidArgumentForNthValueFunction"] = "22016";
    PG["InvalidArgumentForPowerFunction"] = "2201F";
    PG["InvalidArgumentForWidthBucketFunction"] = "2201G";
    PG["InvalidCharacterValueForCast"] = "22018";
    PG["InvalidDateTimeFormat"] = "22007";
    PG["InvalidEscapeCharacter"] = "22019";
    PG["InvalidEscapeOctet"] = "2200D";
    PG["InvalidEscapeSequence"] = "22025";
    PG["NonstandardUseOfEscapeCharacter"] = "22P06";
    PG["InvalidIndicatorParameterValue"] = "22010";
    PG["InvalidParameterValue"] = "22023";
    PG["InvalidPrecedingOrFollowingSize"] = "22013";
    PG["InvalidRegularExpression"] = "2201B";
    PG["InvalidRowCountInLimitClause"] = "2201W";
    PG["InvalidRowCountInResultOffsetClause"] = "2201X";
    PG["InvalidTableSampleArgument"] = "2202H";
    PG["InvalidTableSampleRepeat"] = "2202G";
    PG["InvalidTimeZoneDisplacementValue"] = "22009";
    PG["InvalidUseOfEscapeCharacter"] = "2200C";
    PG["MostSpecificTypeMismatch"] = "2200G";
    PG["NullValueNotAllowed_DataException"] = "22004";
    PG["NullValueNoIndicatorParameter"] = "22002";
    PG["NumericValueOutOfRange"] = "22003";
    PG["SequenceGeneratorLimitExceeded"] = "2200H";
    PG["StringDataLengthMismatch"] = "22026";
    PG["StringDataRightTruncation_DataException"] = "22001";
    PG["SubstringError"] = "22011";
    PG["TrimError"] = "22027";
    PG["UnterminatedCString"] = "22024";
    PG["ZeroLengthCharacterString"] = "2200F";
    PG["FloatingPointException"] = "22P01";
    PG["InvalidTextRepresentation"] = "22P02";
    PG["InvalidBinaryRepresentation"] = "22P03";
    PG["BadCopyFileFormat"] = "22P04";
    PG["UntranslatableCharacter"] = "22P05";
    PG["NotAnXmlDocument"] = "2200L";
    PG["InvalidXmlDocument"] = "2200M";
    PG["InvalidXmlContent"] = "2200N";
    PG["InvalidXmlComment"] = "2200S";
    PG["InvalidXmlProcessingInstruction"] = "2200T";
    PG["DuplicateJsonObjectKeyValue"] = "22030";
    PG["InvalidArgumentForSqlJsonDateTimeFunction"] = "22031";
    PG["InvalidJsonText"] = "22032";
    PG["InvalidSqlJsonSubscript"] = "22033";
    PG["MoreThanOneSqlJsonItem"] = "22034";
    PG["NoSqlJsonItem"] = "22035";
    PG["NonNumericSqlJsonItem"] = "22036";
    PG["NonUniqueKeysInAJsonObject"] = "22037";
    PG["SingletonSqlJsonItemRequired"] = "22038";
    PG["SqlJsonArrayNotFound"] = "22039";
    PG["SqlJsonMemberNotFound"] = "2203A";
    PG["SqlJsonNumberNotFound"] = "2203B";
    PG["SqlJsonObjectNotFound"] = "2203C";
    PG["TooManyJsonArrayElements"] = "2203D";
    PG["TooManyJsonObjectMembers"] = "2203E";
    PG["SqlJsonScalarRequired"] = "2203F";
    PG["SqlJsonItemCannotBeCastToTargetType"] = "2203G";
    // Class 23 — Integrity Constraint Violation,
    PG["IntegrityConstraintViolation"] = "23000";
    PG["RestrictViolation"] = "23001";
    PG["NotNullViolation"] = "23502";
    PG["ForeignKeyViolation"] = "23503";
    PG["UniqueViolation"] = "23505";
    PG["CheckViolation"] = "23514";
    PG["ExclusionViolation"] = "23P01";
    // Class 24 — Invalid Cursor State,
    PG["InvalidCursorState"] = "24000";
    // Class 25 — Invalid Transaction State,
    PG["InvalidTransactionState"] = "25000";
    PG["ActiveSqlTransaction"] = "25001";
    PG["BranchTransactionAlreadyActive"] = "25002";
    PG["HeldCursorRequiresSameIsolationLevel"] = "25008";
    PG["InappropriateAccessModeForBranchTransaction"] = "25003";
    PG["InappropriateIsolationLevelForBranchTransaction"] = "25004";
    PG["NoActiveSqlTransactionForBranchTransaction"] = "25005";
    PG["ReadOnlySqlTransaction"] = "25006";
    PG["SchemaAndDataStatementMixingNotSupported"] = "25007";
    PG["NoActiveSqlTransaction"] = "25P01";
    PG["InFailedSqlTransaction"] = "25P02";
    PG["IdleInTransactionSessionTimeout"] = "25P03";
    // Class 26 — Invalid SQL Statement Name,
    PG["InvalidSqlStatementName"] = "26000";
    // Class 27 — Triggered Data Change Violation,
    PG["TriggeredDataChangeViolation"] = "27000";
    // Class 28 — Invalid Authorization Specification,
    PG["InvalidAuthorizationSpecification"] = "28000";
    PG["InvalidPassword"] = "28P01";
    // Class 2B — Dependent Privilege Descriptors Still Exist,
    PG["DependentPrivilegeDescriptorsStillExist"] = "2B000";
    PG["DependentObjectsStillExist"] = "2BP01";
    // Class 2D — Invalid Transaction Termination,
    PG["InvalidTransactionTermination"] = "2D000";
    // Class 2F — SQL Routine Exception,
    PG["SqlRoutineException"] = "2F000";
    PG["FunctionExecutedNoReturnStatement"] = "2F005";
    PG["ModifyingSqlDataNotPermitted_SqlRoutineException"] = "2F002";
    PG["ProhibitedSqlStatementAttempted_SqlRoutineException"] = "2F003";
    PG["ReadingSqlDataNotPermitted_SqlRoutineException"] = "2F004";
    // Class 34 — Invalid Cursor Name,
    PG["InvalidCursorName"] = "34000";
    // Class 38 — External Routine Exception,
    PG["ExternalRoutineException"] = "38000";
    PG["ContainingSqlNotPermitted"] = "38001";
    PG["ModifyingSqlDataNotPermitted_ExternalRoutineException"] = "38002";
    PG["ProhibitedSqlStatementAttempted_ExternalRoutineException"] = "38003";
    PG["ReadingSqlDataNotPermitted_ExternalRoutineException"] = "38004";
    // Class 39 — External Routine Invocation Exception,
    PG["ExternalRoutineInvocationException"] = "39000";
    PG["InvalidSqlStateReturned"] = "39001";
    PG["NullValueNotAllowed_ExternalRoutineInvocationException"] = "39004";
    PG["TriggerProtocolViolated"] = "39P01";
    PG["SrfProtocolViolated"] = "39P02";
    PG["EventTriggerProtocolViolated"] = "39P03";
    // Class 3B — SavePoint Exception,
    PG["SavePointException"] = "3B000";
    PG["InvalidSavePointSpecification"] = "3B001";
    // Class 3D — Invalid Catalog Name,
    PG["InvalidCatalogName"] = "3D000";
    // Class 3F — Invalid Schema Name,
    PG["InvalidSchemaName"] = "3F000";
    // Class 40 — Transaction Rollback,
    PG["TransactionRollback"] = "40000";
    PG["TransactionIntegrityConstraintViolation"] = "40002";
    PG["SerializationFailure"] = "40001";
    PG["StatementCompletionUnknown"] = "40003";
    PG["DeadlockDetected"] = "40P01";
    // Class 42 — Syntax Error or Access Rule Violation,
    PG["SyntaxErrorOrAccessRuleViolation"] = "42000";
    PG["SyntaxError"] = "42601";
    PG["InsufficientPrivilege"] = "42501";
    PG["CannotCoerce"] = "42846";
    PG["GroupingError"] = "42803";
    PG["WindowingError"] = "42P20";
    PG["InvalidRecursion"] = "42P19";
    PG["InvalidForeignKey"] = "42830";
    PG["InvalidName"] = "42602";
    PG["NameTooLong"] = "42622";
    PG["ReservedName"] = "42939";
    PG["DatatypeMismatch"] = "42804";
    PG["IndeterminateDatatype"] = "42P18";
    PG["CollationMismatch"] = "42P21";
    PG["IndeterminateCollation"] = "42P22";
    PG["WrongObjectType"] = "42809";
    PG["GeneratedAlways"] = "428C9";
    PG["UndefinedColumn"] = "42703";
    PG["UndefinedFunction"] = "42883";
    PG["UndefinedTable"] = "42P01";
    PG["UndefinedParameter"] = "42P02";
    PG["UndefinedObject"] = "42704";
    PG["DuplicateColumn"] = "42701";
    PG["DuplicateCursor"] = "42P03";
    PG["DuplicateDatabase"] = "42P04";
    PG["DuplicateFunction"] = "42723";
    PG["DuplicatePreparedStatement"] = "42P05";
    PG["DuplicateSchema"] = "42P06";
    PG["DuplicateTable"] = "42P07";
    PG["DuplicateAlias"] = "42712";
    PG["DuplicateObject"] = "42710";
    PG["AmbiguousColumn"] = "42702";
    PG["AmbiguousFunction"] = "42725";
    PG["AmbiguousParameter"] = "42P08";
    PG["AmbiguousAlias"] = "42P09";
    PG["InvalidColumnReference"] = "42P10";
    PG["InvalidColumnDefinition"] = "42611";
    PG["InvalidCursorDefinition"] = "42P11";
    PG["InvalidDatabaseDefinition"] = "42P12";
    PG["InvalidFunctionDefinition"] = "42P13";
    PG["InvalidPreparedStatementDefinition"] = "42P14";
    PG["InvalidSchemaDefinition"] = "42P15";
    PG["InvalidTableDefinition"] = "42P16";
    PG["InvalidObjectDefinition"] = "42P17";
    // Class 44 — WITH CHECK OPTION Violation,
    PG["WithCheckOptionViolation"] = "44000";
    // Class 53 — Insufficient Resources,
    PG["InsufficientResources"] = "53000";
    PG["DiskFull"] = "53100";
    PG["OutOfMemory"] = "53200";
    PG["TooManyConnections"] = "53300";
    PG["ConfigurationLimitExceeded"] = "53400";
    // Class 54 — Program Limit Exceeded,
    PG["ProgramLimitExceeded"] = "54000";
    PG["StatementTooComplex"] = "54001";
    PG["TooManyColumns"] = "54011";
    PG["TooManyArguments"] = "54023";
    // Class 55 — Object Not In Prerequisite State,
    PG["ObjectNotInPrerequisiteState"] = "55000";
    PG["ObjectInUse"] = "55006";
    PG["CantChangeRuntimeParam"] = "55P02";
    PG["LockNotAvailable"] = "55P03";
    PG["UnsafeNewEnumValueUsage"] = "55P04";
    // Class 57 — Operator Intervention,
    PG["OperatorIntervention"] = "57000";
    PG["QueryCanceled"] = "57014";
    PG["AdminShutdown"] = "57P01";
    PG["CrashShutdown"] = "57P02";
    PG["CannotConnectNow"] = "57P03";
    PG["DatabaseDropped"] = "57P04";
    PG["IdleSessionTimeout"] = "57P05";
    // Class 58 — System Error (errors external to PostgreSQL itself),
    PG["SystemError"] = "58000";
    PG["IoError"] = "58030";
    PG["UndefinedFile"] = "58P01";
    PG["DuplicateFile"] = "58P02";
    // Class 72 — Snapshot Failure,
    PG["SnapshotTooOld"] = "72000";
    // Class F0 — Configuration File Error,
    PG["ConfigFileError"] = "F0000";
    PG["LockFileExists"] = "F0001";
    // Class HV — Foreign Data Wrapper Error (SQL/MED),
    PG["FdwError"] = "HV000";
    PG["FdwColumnNameNotFound"] = "HV005";
    PG["FdwDynamicParameterValueNeeded"] = "HV002";
    PG["FdwFunctionSequenceError"] = "HV010";
    PG["FdwInconsistentDescriptorInformation"] = "HV021";
    PG["FdwInvalidAttributeValue"] = "HV024";
    PG["FdwInvalidColumnName"] = "HV007";
    PG["FdwInvalidColumnNumber"] = "HV008";
    PG["FdwInvalidDataType"] = "HV004";
    PG["FdwInvalidDataTypeDescriptors"] = "HV006";
    PG["FdwInvalidDescriptorFieldIdentifier"] = "HV091";
    PG["FdwInvalidHandle"] = "HV00B";
    PG["FdwInvalidOptionIndex"] = "HV00C";
    PG["FdwInvalidOptionName"] = "HV00D";
    PG["FdwInvalidStringLengthOrBufferLength"] = "HV090";
    PG["FdwInvalidStringFormat"] = "HV00A";
    PG["FdwInvalidUseOfNullPointer"] = "HV009";
    PG["FdwTooManyHandles"] = "HV014";
    PG["FdwOutOfMemory"] = "HV001";
    PG["FdwNoSchemas"] = "HV00P";
    PG["FdwOptionNameNotFound"] = "HV00J";
    PG["FdwReplyHandle"] = "HV00K";
    PG["FdwSchemaNotFound"] = "HV00Q";
    PG["FdwTableNotFound"] = "HV00R";
    PG["FdwUnableToCreateExecution"] = "HV00L";
    PG["FdwUnableToCreateReply"] = "HV00M";
    PG["FdwUnableToEstablishConnection"] = "HV00N";
    // Class P0 — PL/pgSQL Error,
    PG["PLpgSqlError"] = "P0000";
    PG["RaiseException"] = "P0001";
    PG["NoDataFound"] = "P0002";
    PG["TooManyRows"] = "P0003";
    PG["AssertFailure"] = "P0004";
    // Class XX — Internal Error,
    PG["InternalError"] = "XX000";
    PG["DataCorrupted"] = "XX001";
    PG["IndexCorrupted"] = "XX002";
    return PG;
}({});


var $18834df568c9b27a$exports = {};

$parcel$export($18834df568c9b27a$exports, "TwitterHttp", () => $18834df568c9b27a$export$2b4a94d4d9e4a91c);
$parcel$export($18834df568c9b27a$exports, "TwitterErrors", () => $18834df568c9b27a$export$feb40f9897b978a5);
$parcel$export($18834df568c9b27a$exports, "TwitterWebhookErrors", () => $18834df568c9b27a$export$7ec2cc6228d0424f);
/**
 * @see https://developer.twitter.com/en/support/twitter-api/error-troubleshooting
 */ var $18834df568c9b27a$export$2b4a94d4d9e4a91c = /*#__PURE__*/ function(TwitterHttp) {
    TwitterHttp[TwitterHttp["Ok"] = 200] = "Ok";
    TwitterHttp[TwitterHttp["NotModified"] = 304] = "NotModified";
    TwitterHttp[TwitterHttp["BadRequest"] = 400] = "BadRequest";
    TwitterHttp[TwitterHttp["Unauthorized"] = 401] = "Unauthorized";
    TwitterHttp[TwitterHttp["Forbidden"] = 403] = "Forbidden";
    TwitterHttp[TwitterHttp["NotFound"] = 404] = "NotFound";
    TwitterHttp[TwitterHttp["NotAcceptable"] = 406] = "NotAcceptable";
    TwitterHttp[TwitterHttp["ConnectionException"] = 409] = "ConnectionException";
    TwitterHttp[TwitterHttp["Gone"] = 410] = "Gone";
    /**
   * @deprecated - Removed from most recent documentation
   */ TwitterHttp[TwitterHttp["EnhanceYourCalm"] = 420] = "EnhanceYourCalm";
    TwitterHttp[TwitterHttp["UnprocessableEntity"] = 422] = "UnprocessableEntity";
    TwitterHttp[TwitterHttp["TooManyRequests"] = 429] = "TooManyRequests";
    TwitterHttp[TwitterHttp["InternalServerError"] = 500] = "InternalServerError";
    TwitterHttp[TwitterHttp["BadGateway"] = 502] = "BadGateway";
    TwitterHttp[TwitterHttp["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    TwitterHttp[TwitterHttp["GatewayTimeout"] = 504] = "GatewayTimeout";
    return TwitterHttp;
}({});
var $18834df568c9b27a$export$feb40f9897b978a5 = /*#__PURE__*/ function(TwitterErrors) {
    TwitterErrors[TwitterErrors["InvalidCoordinates"] = 3] = "InvalidCoordinates";
    TwitterErrors[TwitterErrors["NoIpLocationAssociation"] = 13] = "NoIpLocationAssociation";
    TwitterErrors[TwitterErrors["NoUserTermsMatch"] = 17] = "NoUserTermsMatch";
    TwitterErrors[TwitterErrors["AuthenticationFailure"] = 32] = "AuthenticationFailure";
    TwitterErrors[TwitterErrors["PageDoesNotExist"] = 34] = "PageDoesNotExist";
    TwitterErrors[TwitterErrors["CannotSelfReportForSpam"] = 36] = "CannotSelfReportForSpam";
    TwitterErrors[TwitterErrors["ParameterMissing"] = 38] = "ParameterMissing";
    TwitterErrors[TwitterErrors["AttachmentUrlParameterInvalid"] = 44] = "AttachmentUrlParameterInvalid";
    TwitterErrors[TwitterErrors["UserNotFound"] = 50] = "UserNotFound";
    TwitterErrors[TwitterErrors["UserSuspended"] = 63] = "UserSuspended";
    TwitterErrors[TwitterErrors["AccountSuspended"] = 64] = "AccountSuspended";
    TwitterErrors[TwitterErrors["TwitterAPIv1Inactive"] = 68] = "TwitterAPIv1Inactive";
    TwitterErrors[TwitterErrors["ClientActionNotPermitted"] = 87] = "ClientActionNotPermitted";
    TwitterErrors[TwitterErrors["RateLimitExceeded"] = 88] = "RateLimitExceeded";
    TwitterErrors[TwitterErrors["InvalidOrExpiredToken"] = 89] = "InvalidOrExpiredToken";
    TwitterErrors[TwitterErrors["SslRequired"] = 92] = "SslRequired";
    TwitterErrors[TwitterErrors["DirectMessageAccessDenied"] = 93] = "DirectMessageAccessDenied";
    TwitterErrors[TwitterErrors["CredentialVerificationFailure"] = 99] = "CredentialVerificationFailure";
    TwitterErrors[TwitterErrors["SpecifiedUserNotFoundInList"] = 109] = "SpecifiedUserNotFoundInList";
    TwitterErrors[TwitterErrors["UserToRemoveNotAListMember"] = 110] = "UserToRemoveNotAListMember";
    TwitterErrors[TwitterErrors["AccountUpdateFailed"] = 120] = "AccountUpdateFailed";
    TwitterErrors[TwitterErrors["OverCapacity"] = 130] = "OverCapacity";
    TwitterErrors[TwitterErrors["InternalError"] = 131] = "InternalError";
    TwitterErrors[TwitterErrors["CouldNotAuthenticate"] = 135] = "CouldNotAuthenticate";
    TwitterErrors[TwitterErrors["AlreadyFavorited"] = 139] = "AlreadyFavorited";
    TwitterErrors[TwitterErrors["NoStatusFound"] = 144] = "NoStatusFound";
    TwitterErrors[TwitterErrors["UserMessageSendFailure"] = 150] = "UserMessageSendFailure";
    TwitterErrors[TwitterErrors["MessageSendError"] = 151] = "MessageSendError";
    TwitterErrors[TwitterErrors["DuplicateFollowRequest"] = 160] = "DuplicateFollowRequest";
    TwitterErrors[TwitterErrors["FollowLimitExceeded"] = 161] = "FollowLimitExceeded";
    TwitterErrors[TwitterErrors["UnauthorizedStatusRequest"] = 179] = "UnauthorizedStatusRequest";
    TwitterErrors[TwitterErrors["DailyUpdateLimitExceeded"] = 185] = "DailyUpdateLimitExceeded";
    TwitterErrors[TwitterErrors["TweetTextOverLimit"] = 186] = "TweetTextOverLimit";
    TwitterErrors[TwitterErrors["DuplicateStatus"] = 187] = "DuplicateStatus";
    TwitterErrors[TwitterErrors["MissingOrInvalidUrlParameter"] = 195] = "MissingOrInvalidUrlParameter";
    TwitterErrors[TwitterErrors["SpamReportLimitExceeded"] = 205] = "SpamReportLimitExceeded";
    TwitterErrors[TwitterErrors["OwnerMustAllowDMsFromAnyone"] = 214] = "OwnerMustAllowDMsFromAnyone";
    TwitterErrors[TwitterErrors["BadAuthenticationData"] = 215] = "BadAuthenticationData";
    TwitterErrors[TwitterErrors["UnauthorizedResourceCredentials"] = 220] = "UnauthorizedResourceCredentials";
    TwitterErrors[TwitterErrors["PossibleAutomatedRequest"] = 226] = "PossibleAutomatedRequest";
    /**
   * @deprecated
   */ TwitterErrors[TwitterErrors["UserMustVerifyLogin"] = 231] = "UserMustVerifyLogin";
    TwitterErrors[TwitterErrors["EndpointRetired"] = 251] = "EndpointRetired";
    TwitterErrors[TwitterErrors["CannotPerformWriteActions"] = 261] = "CannotPerformWriteActions";
    TwitterErrors[TwitterErrors["SelfMuteNotAllowed"] = 271] = "SelfMuteNotAllowed";
    TwitterErrors[TwitterErrors["NotMutingSpecifiedUser"] = 272] = "NotMutingSpecifiedUser";
    TwitterErrors[TwitterErrors["SingleAnimatedGifAllowed"] = 323] = "SingleAnimatedGifAllowed";
    TwitterErrors[TwitterErrors["MediaIdsValidationFailure"] = 324] = "MediaIdsValidationFailure";
    TwitterErrors[TwitterErrors["MediaIdNotFound"] = 325] = "MediaIdNotFound";
    TwitterErrors[TwitterErrors["AccountTemporarilyLocked"] = 326] = "AccountTemporarilyLocked";
    TwitterErrors[TwitterErrors["AlreadyRetweeted"] = 327] = "AlreadyRetweeted";
    TwitterErrors[TwitterErrors["YouCannotSendMessagesToUser"] = 349] = "YouCannotSendMessagesToUser";
    TwitterErrors[TwitterErrors["DirectMessageCharacterLimitExceeded"] = 354] = "DirectMessageCharacterLimitExceeded";
    TwitterErrors[TwitterErrors["SubscriptionAlreadyExists"] = 355] = "SubscriptionAlreadyExists";
    TwitterErrors[TwitterErrors["ReplyToUnavailableTweet"] = 385] = "ReplyToUnavailableTweet";
    TwitterErrors[TwitterErrors["AttachmentTypeLimitExceeded"] = 386] = "AttachmentTypeLimitExceeded";
    TwitterErrors[TwitterErrors["UrlInvalid"] = 407] = "UrlInvalid";
    TwitterErrors[TwitterErrors["CallbackUrlNotApproved"] = 415] = "CallbackUrlNotApproved";
    TwitterErrors[TwitterErrors["InvalidSuspendedApplication"] = 416] = "InvalidSuspendedApplication";
    TwitterErrors[TwitterErrors["OobOnlyOauthSupport"] = 417] = "OobOnlyOauthSupport";
    TwitterErrors[TwitterErrors["TweetNoLongerAvailable"] = 421] = "TweetNoLongerAvailable";
    TwitterErrors[TwitterErrors["TweetUnavailableForRuleViolations"] = 422] = "TweetUnavailableForRuleViolations";
    TwitterErrors[TwitterErrors["SomeTweetActionsDisabledByTwitter"] = 425] = "SomeTweetActionsDisabledByTwitter";
    TwitterErrors[TwitterErrors["TweetAuthorRestrictedReplies"] = 433] = "TweetAuthorRestrictedReplies";
    return TwitterErrors;
}({});
var $18834df568c9b27a$export$7ec2cc6228d0424f = /*#__PURE__*/ function(TwitterWebhookErrors) {
    TwitterWebhookErrors[TwitterWebhookErrors["CouldNotAuthenticate"] = 32] = "CouldNotAuthenticate";
    TwitterWebhookErrors[TwitterWebhookErrors["Forbidden"] = 200] = "Forbidden";
    TwitterWebhookErrors[TwitterWebhookErrors["WebhookURIDoesNotMeetRequirements"] = 214] = "WebhookURIDoesNotMeetRequirements";
    TwitterWebhookErrors[TwitterWebhookErrors["HighLatency"] = 214] = "HighLatency";
    TwitterWebhookErrors[TwitterWebhookErrors["TooManyResourcesAlreadyCreated"] = 214] = "TooManyResourcesAlreadyCreated";
    TwitterWebhookErrors[TwitterWebhookErrors["AppCannotPerformWriteAccess"] = 261] = "AppCannotPerformWriteAccess";
    return TwitterWebhookErrors;
}({});




export {$397b251010ad2284$export$a18582a33798b099 as Apache, $b7a524d8fcba929f$export$a1fdd30bb1a4d2c9 as Auth0, $fbd20af70c3692ac$export$5ddd4bd7159bb4dc as Braintree, $478338173fdf639b$export$ee6214ab53645a0 as Cloudflare, $478338173fdf639b$export$eec954136fe00c06 as CloudflareHttp, $1c7db1edb1c3188d$export$b737417db3c88440 as FirebaseAuth, $81700a681da8a66e$export$cffacb1873b09081 as FTP, $d41f8f42b7b1f821$export$2a5b27776dbece47 as Http, $d41f8f42b7b1f821$export$8301461414a0d461 as HttpUnofficial, $d41f8f42b7b1f821$export$6408e65d1a2e2cf7 as HttpExtended, $93b912b2c67ec327$export$3c84dcd7e06bf5d2 as IIS, $93b912b2c67ec327$export$c0ecd4a4e0919fa3 as IISHttp, $e85e4b6c3a8acbca$export$33bb629b441105bc as IRC, $b38a507ec34038ce$export$586098b0b3d55044 as Mocha, $daa216b7c4f0d91f$export$bfa673ab3751c0e5 as MongoDBExit, $daa216b7c4f0d91f$export$dc67ba24438ac86b as MongoDB, $7e84da312a980daf$export$48fd89a91b9d972a as MongooseState, $b72811b1d3986324$export$b8f545dad73af54a as Nginx, $0c77cb1bb2feb95e$export$85c928794f8d04d4 as Node, $f5f2bfdbd0034081$export$c56943b7b8ffea21 as PG, $18834df568c9b27a$export$2b4a94d4d9e4a91c as TwitterHttp, $18834df568c9b27a$export$feb40f9897b978a5 as TwitterErrors, $18834df568c9b27a$export$7ec2cc6228d0424f as TwitterWebhookErrors};
//# sourceMappingURL=module.mjs.map
